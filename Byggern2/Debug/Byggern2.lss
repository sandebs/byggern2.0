
Byggern2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000a6  00800100  00001cbe  00001d52  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001cbe  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000014  008001a6  008001a6  00001df8  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001df8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001e54  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001e0  00000000  00000000  00001e90  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002288  00000000  00000000  00002070  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000100a  00000000  00000000  000042f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000fd7  00000000  00000000  00005302  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000498  00000000  00000000  000062dc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000827  00000000  00000000  00006774  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001145  00000000  00000000  00006f9b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001a0  00000000  00000000  000080e0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 8f 03 	jmp	0x71e	; 0x71e <__ctors_end>
       4:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
       8:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
       c:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
      10:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
      14:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
      18:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
      1c:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
      20:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
      24:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
      28:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
      2c:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
      30:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
      34:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
      38:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
      3c:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
      40:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
      44:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
      48:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
      4c:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
      50:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
      54:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
      58:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
      5c:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
      60:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
      64:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
      68:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
      6c:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>

00000070 <__trampolines_end>:
      70:	00 00       	nop
      72:	00 00       	nop
      74:	00 5c       	subi	r16, 0xC0	; 192
      76:	00 00       	nop
      78:	0c 00       	.word	0x000c	; ????
      7a:	0c 00       	.word	0x000c	; ????
      7c:	7c 28       	or	r7, r12
      7e:	7c 28       	or	r7, r12
      80:	58 dc       	rcall	.-1872   	; 0xfffff932 <__eeprom_end+0xff7ef932>
      82:	68 00       	.word	0x0068	; ????
      84:	24 10       	cpse	r2, r4
      86:	48 00       	.word	0x0048	; ????
      88:	28 54       	subi	r18, 0x48	; 72
      8a:	28 40       	sbci	r18, 0x08	; 8
      8c:	00 0c       	add	r0, r0
      8e:	00 00       	nop
      90:	00 78       	andi	r16, 0x80	; 128
      92:	84 00       	.word	0x0084	; ????
      94:	84 78       	andi	r24, 0x84	; 132
      96:	00 00       	nop
      98:	54 38       	cpi	r21, 0x84	; 132
      9a:	54 00       	.word	0x0054	; ????
      9c:	10 7c       	andi	r17, 0xC0	; 192
      9e:	10 00       	.word	0x0010	; ????
      a0:	80 40       	sbci	r24, 0x00	; 0
      a2:	00 00       	nop
      a4:	10 10       	cpse	r1, r0
      a6:	10 00       	.word	0x0010	; ????
      a8:	00 40       	sbci	r16, 0x00	; 0
      aa:	00 00       	nop
      ac:	60 10       	cpse	r6, r0
      ae:	0c 00       	.word	0x000c	; ????
      b0:	38 54       	subi	r19, 0x48	; 72
      b2:	38 00       	.word	0x0038	; ????
      b4:	48 7c       	andi	r20, 0xC8	; 200
      b6:	40 00       	.word	0x0040	; ????
      b8:	48 64       	ori	r20, 0x48	; 72
      ba:	58 00       	.word	0x0058	; ????
      bc:	44 54       	subi	r20, 0x44	; 68
      be:	2c 00       	.word	0x002c	; ????
      c0:	1c 10       	cpse	r1, r12
      c2:	7c 00       	.word	0x007c	; ????
      c4:	5c 54       	subi	r21, 0x4C	; 76
      c6:	24 00       	.word	0x0024	; ????
      c8:	38 54       	subi	r19, 0x48	; 72
      ca:	24 00       	.word	0x0024	; ????
      cc:	64 14       	cp	r6, r4
      ce:	0c 00       	.word	0x000c	; ????
      d0:	68 54       	subi	r22, 0x48	; 72
      d2:	2c 00       	.word	0x002c	; ????
      d4:	48 54       	subi	r20, 0x48	; 72
      d6:	38 00       	.word	0x0038	; ????
      d8:	00 48       	sbci	r16, 0x80	; 128
      da:	00 00       	nop
      dc:	80 48       	sbci	r24, 0x80	; 128
      de:	00 00       	nop
      e0:	10 28       	or	r1, r0
      e2:	44 00       	.word	0x0044	; ????
      e4:	28 28       	or	r2, r8
      e6:	28 00       	.word	0x0028	; ????
      e8:	44 28       	or	r4, r4
      ea:	10 00       	.word	0x0010	; ????
      ec:	04 54       	subi	r16, 0x44	; 68
      ee:	08 00       	.word	0x0008	; ????
      f0:	38 44       	sbci	r19, 0x48	; 72
      f2:	5c 00       	.word	0x005c	; ????
      f4:	78 14       	cp	r7, r8
      f6:	78 00       	.word	0x0078	; ????
      f8:	7c 54       	subi	r23, 0x4C	; 76
      fa:	28 00       	.word	0x0028	; ????
      fc:	38 44       	sbci	r19, 0x48	; 72
      fe:	28 00       	.word	0x0028	; ????
     100:	7c 44       	sbci	r23, 0x4C	; 76
     102:	38 00       	.word	0x0038	; ????
     104:	7c 54       	subi	r23, 0x4C	; 76
     106:	44 00       	.word	0x0044	; ????
     108:	7c 14       	cp	r7, r12
     10a:	04 00       	.word	0x0004	; ????
     10c:	38 44       	sbci	r19, 0x48	; 72
     10e:	74 00       	.word	0x0074	; ????
     110:	7c 10       	cpse	r7, r12
     112:	7c 00       	.word	0x007c	; ????
     114:	44 7c       	andi	r20, 0xC4	; 196
     116:	44 00       	.word	0x0044	; ????
     118:	20 40       	sbci	r18, 0x00	; 0
     11a:	3c 00       	.word	0x003c	; ????
     11c:	7c 10       	cpse	r7, r12
     11e:	6c 00       	.word	0x006c	; ????
     120:	7c 40       	sbci	r23, 0x0C	; 12
     122:	40 00       	.word	0x0040	; ????
     124:	7c 18       	sub	r7, r12
     126:	7c 00       	.word	0x007c	; ????
     128:	78 10       	cpse	r7, r8
     12a:	3c 00       	.word	0x003c	; ????
     12c:	38 44       	sbci	r19, 0x48	; 72
     12e:	38 00       	.word	0x0038	; ????
     130:	7c 14       	cp	r7, r12
     132:	08 00       	.word	0x0008	; ????
     134:	38 44       	sbci	r19, 0x48	; 72
     136:	b8 00       	.word	0x00b8	; ????
     138:	7c 14       	cp	r7, r12
     13a:	68 00       	.word	0x0068	; ????
     13c:	48 54       	subi	r20, 0x48	; 72
     13e:	24 00       	.word	0x0024	; ????
     140:	04 7c       	andi	r16, 0xC4	; 196
     142:	04 00       	.word	0x0004	; ????
     144:	7c 40       	sbci	r23, 0x0C	; 12
     146:	7c 00       	.word	0x007c	; ????
     148:	3c 60       	ori	r19, 0x0C	; 12
     14a:	3c 00       	.word	0x003c	; ????
     14c:	7c 30       	cpi	r23, 0x0C	; 12
     14e:	7c 00       	.word	0x007c	; ????
     150:	6c 10       	cpse	r6, r12
     152:	6c 00       	.word	0x006c	; ????
     154:	0c 70       	andi	r16, 0x0C	; 12
     156:	0c 00       	.word	0x000c	; ????
     158:	64 54       	subi	r22, 0x44	; 68
     15a:	4c 00       	.word	0x004c	; ????
     15c:	00 7c       	andi	r16, 0xC0	; 192
     15e:	44 00       	.word	0x0044	; ????
     160:	0c 10       	cpse	r0, r12
     162:	60 00       	.word	0x0060	; ????
     164:	44 7c       	andi	r20, 0xC4	; 196
     166:	00 00       	nop
     168:	08 04       	cpc	r0, r8
     16a:	08 00       	.word	0x0008	; ????
     16c:	80 80       	ld	r8, Z
     16e:	80 00       	.word	0x0080	; ????
     170:	00 04       	cpc	r0, r0
     172:	08 00       	.word	0x0008	; ????
     174:	30 48       	sbci	r19, 0x80	; 128
     176:	78 00       	.word	0x0078	; ????
     178:	7c 48       	sbci	r23, 0x8C	; 140
     17a:	30 00       	.word	0x0030	; ????
     17c:	30 48       	sbci	r19, 0x80	; 128
     17e:	48 00       	.word	0x0048	; ????
     180:	30 48       	sbci	r19, 0x80	; 128
     182:	7c 00       	.word	0x007c	; ????
     184:	30 68       	ori	r19, 0x80	; 128
     186:	50 00       	.word	0x0050	; ????
     188:	10 78       	andi	r17, 0x80	; 128
     18a:	14 00       	.word	0x0014	; ????
     18c:	90 a8       	ldd	r9, Z+48	; 0x30
     18e:	78 00       	.word	0x0078	; ????
     190:	7c 08       	sbc	r7, r12
     192:	70 00       	.word	0x0070	; ????
     194:	50 74       	andi	r21, 0x40	; 64
     196:	40 00       	.word	0x0040	; ????
     198:	80 80       	ld	r8, Z
     19a:	74 00       	.word	0x0074	; ????
     19c:	7c 10       	cpse	r7, r12
     19e:	68 00       	.word	0x0068	; ????
     1a0:	44 7c       	andi	r20, 0xC4	; 196
     1a2:	40 00       	.word	0x0040	; ????
     1a4:	78 10       	cpse	r7, r8
     1a6:	78 00       	.word	0x0078	; ????
     1a8:	78 08       	sbc	r7, r8
     1aa:	70 00       	.word	0x0070	; ????
     1ac:	30 48       	sbci	r19, 0x80	; 128
     1ae:	30 00       	.word	0x0030	; ????
     1b0:	f8 28       	or	r15, r8
     1b2:	10 00       	.word	0x0010	; ????
     1b4:	30 48       	sbci	r19, 0x80	; 128
     1b6:	f8 00       	.word	0x00f8	; ????
     1b8:	78 10       	cpse	r7, r8
     1ba:	08 00       	.word	0x0008	; ????
     1bc:	50 58       	subi	r21, 0x80	; 128
     1be:	28 00       	.word	0x0028	; ????
     1c0:	08 3c       	cpi	r16, 0xC8	; 200
     1c2:	48 00       	.word	0x0048	; ????
     1c4:	38 40       	sbci	r19, 0x08	; 8
     1c6:	78 00       	.word	0x0078	; ????
     1c8:	38 40       	sbci	r19, 0x08	; 8
     1ca:	38 00       	.word	0x0038	; ????
     1cc:	78 20       	and	r7, r8
     1ce:	78 00       	.word	0x0078	; ????
     1d0:	48 30       	cpi	r20, 0x08	; 8
     1d2:	48 00       	.word	0x0048	; ????
     1d4:	98 a0       	ldd	r9, Y+32	; 0x20
     1d6:	78 00       	.word	0x0078	; ????
     1d8:	48 68       	ori	r20, 0x88	; 136
     1da:	58 00       	.word	0x0058	; ????
     1dc:	10 78       	andi	r17, 0x80	; 128
     1de:	84 00       	.word	0x0084	; ????
     1e0:	00 7c       	andi	r16, 0xC0	; 192
     1e2:	00 00       	nop
     1e4:	84 78       	andi	r24, 0x84	; 132
     1e6:	10 00       	.word	0x0010	; ????
     1e8:	08 04       	cpc	r0, r8
     1ea:	08 04       	cpc	r0, r8

000001ec <font6>:
	...
     1f4:	5f 00 00 00 00 07 00 07 00 00 14 7f 14 7f 14 00     _...............
     204:	24 2a 7f 2a 12 00 23 13 08 64 62 00 36 49 55 22     $*.*..#..db.6IU"
     214:	50 00 00 05 03 00 00 00 00 1c 22 41 00 00 00 41     P........."A...A
     224:	22 1c 00 00 08 2a 1c 2a 08 00 08 08 3e 08 08 00     "....*.*....>...
     234:	00 50 30 00 00 00 08 08 08 08 08 00 00 60 60 00     .P0..........``.
     244:	00 00 20 10 08 04 02 00 3e 51 49 45 3e 00 00 42     .. .....>QIE>..B
     254:	7f 40 00 00 42 61 51 49 46 00 21 41 45 4b 31 00     .@..BaQIF.!AEK1.
     264:	18 14 12 7f 10 00 27 45 45 45 39 00 3c 4a 49 49     ......'EEE9.<JII
     274:	30 00 01 71 09 05 03 00 36 49 49 49 36 00 06 49     0..q....6III6..I
     284:	49 29 1e 00 00 36 36 00 00 00 00 56 36 00 00 00     I)...66....V6...
     294:	08 1c 2a 08 08 00 14 14 14 14 14 00 08 08 2a 1c     ..*...........*.
     2a4:	08 00 02 01 51 09 06 00 32 49 79 41 3e 00 7e 11     ....Q...2IyA>.~.
     2b4:	11 11 7e 00 7f 49 49 49 36 00 3e 41 41 41 22 00     ..~..III6.>AAA".
     2c4:	7f 41 41 22 1c 00 7f 49 49 49 41 00 7f 09 09 01     .AA"...IIIA.....
     2d4:	01 00 3e 41 41 51 32 00 7f 08 08 08 7f 00 00 41     ..>AAQ2........A
     2e4:	7f 41 00 00 20 40 41 3f 01 00 7f 08 14 22 41 00     .A.. @A?....."A.
     2f4:	7f 40 40 40 40 00 7f 02 04 02 7f 00 7f 04 08 10     .@@@@...........
     304:	7f 00 3e 41 41 41 3e 00 7f 09 09 09 06 00 3e 41     ..>AAA>.......>A
     314:	51 21 5e 00 7f 09 19 29 46 00 46 49 49 49 31 00     Q!^....)F.FIII1.
     324:	01 01 7f 01 01 00 3f 40 40 40 3f 00 1f 20 40 20     ......?@@@?.. @ 
     334:	1f 00 7f 20 18 20 7f 00 63 14 08 14 63 00 03 04     ... . ..c...c...
     344:	78 04 03 00 61 51 49 45 43 00 00 00 7f 41 41 00     x...aQIEC....AA.
     354:	02 04 08 10 20 00 41 41 7f 00 00 00 04 02 01 02     .... .AA........
     364:	04 00 40 40 40 40 40 00 00 01 02 04 00 00 20 54     ..@@@@@....... T
     374:	54 54 78 00 7f 48 44 44 38 00 38 44 44 44 20 00     TTx..HDD8.8DDD .
     384:	38 44 44 48 7f 00 38 54 54 54 18 00 08 7e 09 01     8DDH..8TTT...~..
     394:	02 00 08 14 54 54 3c 00 7f 08 04 04 78 00 00 44     ....TT<.....x..D
     3a4:	7d 40 00 00 20 40 44 3d 00 00 00 7f 10 28 44 00     }@.. @D=.....(D.
     3b4:	00 41 7f 40 00 00 7c 04 18 04 78 00 7c 08 04 04     .A.@..|...x.|...
     3c4:	78 00 38 44 44 44 38 00 7c 14 14 14 08 00 08 14     x.8DDD8.|.......
     3d4:	14 18 7c 00 7c 08 04 04 08 00 48 54 54 54 20 00     ..|.|.....HTTT .
     3e4:	04 3f 44 40 20 00 3c 40 40 20 7c 00 1c 20 40 20     .?D@ .<@@ |.. @ 
     3f4:	1c 00 3c 40 30 40 3c 00 44 28 10 28 44 00 0c 50     ..<@0@<.D(.(D..P
     404:	50 50 3c 00 44 64 54 4c 44 00 00 08 36 41 00 00     PP<.DdTLD...6A..
     414:	00 00 7f 00 00 00 00 41 36 08 00 00 02 01 03 02     .......A6.......
     424:	01 00                                               ..

00000426 <font8>:
	...
     42e:	00 06 5f 5f 06 00 00 00 00 07 07 00 07 07 00 00     ..__............
     43e:	14 7f 7f 14 7f 7f 14 00 24 2e 6b 6b 3a 12 00 00     ........$.kk:...
     44e:	46 66 30 18 0c 66 62 00 30 7a 4f 5d 37 7a 48 00     Ff0..fb.0zO]7zH.
     45e:	04 07 03 00 00 00 00 00 00 1c 3e 63 41 00 00 00     ..........>cA...
     46e:	00 41 63 3e 1c 00 00 00 08 2a 3e 1c 1c 3e 2a 08     .Ac>.....*>..>*.
     47e:	08 08 3e 3e 08 08 00 00 00 a0 e0 60 00 00 00 00     ..>>.......`....
     48e:	08 08 08 08 08 08 00 00 00 00 60 60 00 00 00 00     ..........``....
     49e:	60 30 18 0c 06 03 01 00 3e 7f 59 4d 7f 3e 00 00     `0......>.YM.>..
     4ae:	42 42 7f 7f 40 40 00 00 62 73 59 49 6f 66 00 00     BB..@@..bsYIof..
     4be:	22 63 49 49 7f 36 00 00 18 1c 16 13 7f 7f 10 00     "cII.6..........
     4ce:	27 67 45 45 7d 39 00 00 3c 7e 4b 49 79 30 00 00     'gEE}9..<~KIy0..
     4de:	03 63 71 19 0f 07 00 00 36 7f 49 49 7f 36 00 00     .cq.....6.II.6..
     4ee:	06 4f 49 69 3f 1e 00 00 00 00 6c 6c 00 00 00 00     .OIi?.....ll....
     4fe:	00 a0 ec 6c 00 00 00 00 18 24 42 99 24 42 81 00     ...l.....$B.$B..
     50e:	14 14 14 14 14 14 00 00 81 42 24 99 42 24 18 00     .........B$.B$..
     51e:	02 03 51 59 0f 06 00 00 3e 7f 41 5d 5d 1f 1e 00     ..QY....>.A]]...
     52e:	7c 7e 13 13 7e 7c 00 00 41 7f 7f 49 49 7f 36 00     |~..~|..A..II.6.
     53e:	1c 3e 63 41 41 63 22 00 41 7f 7f 41 63 7f 1c 00     .>cAAc".A..Ac...
     54e:	41 7f 7f 49 5d 41 63 00 41 7f 7f 49 1d 01 03 00     A..I]Ac.A..I....
     55e:	1c 3e 63 41 51 73 72 00 7f 7f 08 08 7f 7f 00 00     .>cAQsr.........
     56e:	00 41 7f 7f 41 00 00 00 30 70 40 41 7f 3f 01 00     .A..A...0p@A.?..
     57e:	41 7f 7f 08 1c 77 63 00 41 7f 7f 41 40 60 70 00     A....wc.A..A@`p.
     58e:	7f 7f 06 0c 06 7f 7f 00 7f 7f 06 0c 18 7f 7f 00     ................
     59e:	1c 3e 63 41 63 3e 1c 00 41 7f 7f 49 09 0f 06 00     .>cAc>..A..I....
     5ae:	1e 3f 21 71 7f 5e 00 00 41 7f 7f 19 39 6f 46 00     .?!q.^..A...9oF.
     5be:	26 67 4d 59 7b 32 00 00 03 41 7f 7f 41 03 00 00     &gMY{2...A..A...
     5ce:	7f 7f 40 40 7f 7f 00 00 1f 3f 60 60 3f 1f 00 00     ..@@.....?``?...
     5de:	7f 7f 30 18 30 7f 7f 00 63 77 1c 08 1c 77 63 00     ..0.0...cw...wc.
     5ee:	07 4f 78 78 4f 07 00 00 67 73 59 4d 47 63 71 00     .OxxO...gsYMGcq.
     5fe:	00 7f 7f 41 41 00 00 00 01 03 06 0c 18 30 60 00     ...AA........0`.
     60e:	00 41 41 7f 7f 00 00 00 08 0c 06 03 06 0c 08 00     .AA.............
     61e:	80 80 80 80 80 80 80 80 00 00 03 07 04 00 00 00     ................
     62e:	20 74 54 54 3c 78 40 00 41 3f 7f 44 44 7c 38 00      tTT<x@.A?.DD|8.
     63e:	38 7c 44 44 6c 28 00 00 30 78 48 49 3f 7f 40 00     8|DDl(..0xHI?.@.
     64e:	38 7c 54 54 5c 18 00 00 48 7e 7f 49 03 02 00 00     8|TT\...H~.I....
     65e:	98 bc a4 a4 f8 7c 04 00 41 7f 7f 08 04 7c 78 00     .....|..A....|x.
     66e:	00 44 7d 7d 40 00 00 00 40 c4 84 fd 7d 00 00 00     .D}}@...@...}...
     67e:	41 7f 7f 10 38 6c 44 00 00 41 7f 7f 40 00 00 00     A...8lD..A..@...
     68e:	7c 7c 0c 18 0c 7c 78 00 7c 7c 04 04 7c 78 00 00     ||...|x.||..|x..
     69e:	38 7c 44 44 7c 38 00 00 84 fc f8 a4 24 3c 18 00     8|DD|8......$<..
     6ae:	18 3c 24 a4 f8 fc 84 00 44 7c 78 44 1c 18 00 00     .<$.....D|xD....
     6be:	48 5c 54 54 74 24 00 00 00 04 3e 7f 44 24 00 00     H\TTt$....>.D$..
     6ce:	3c 7c 40 40 3c 7c 40 00 1c 3c 60 60 3c 1c 00 00     <|@@<|@..<``<...
     6de:	3c 7c 60 30 60 7c 3c 00 44 6c 38 10 38 6c 44 00     <|`0`|<.Dl8.8lD.
     6ee:	9c bc a0 a0 fc 7c 00 00 4c 64 74 5c 4c 64 00 00     .....|..Ldt\Ld..
     6fe:	08 08 3e 77 41 41 00 00 00 00 00 77 77 00 00 00     ..>wAA.....ww...
     70e:	41 41 77 3e 08 08 00 00 02 03 01 03 02 03 01 00     AAw>............

0000071e <__ctors_end>:
     71e:	11 24       	eor	r1, r1
     720:	1f be       	out	0x3f, r1	; 63
     722:	cf ef       	ldi	r28, 0xFF	; 255
     724:	d4 e0       	ldi	r29, 0x04	; 4
     726:	de bf       	out	0x3e, r29	; 62
     728:	cd bf       	out	0x3d, r28	; 61

0000072a <__do_copy_data>:
     72a:	11 e0       	ldi	r17, 0x01	; 1
     72c:	a0 e0       	ldi	r26, 0x00	; 0
     72e:	b1 e0       	ldi	r27, 0x01	; 1
     730:	ee eb       	ldi	r30, 0xBE	; 190
     732:	fc e1       	ldi	r31, 0x1C	; 28
     734:	02 c0       	rjmp	.+4      	; 0x73a <__do_copy_data+0x10>
     736:	05 90       	lpm	r0, Z+
     738:	0d 92       	st	X+, r0
     73a:	a6 3a       	cpi	r26, 0xA6	; 166
     73c:	b1 07       	cpc	r27, r17
     73e:	d9 f7       	brne	.-10     	; 0x736 <__do_copy_data+0xc>

00000740 <__do_clear_bss>:
     740:	21 e0       	ldi	r18, 0x01	; 1
     742:	a6 ea       	ldi	r26, 0xA6	; 166
     744:	b1 e0       	ldi	r27, 0x01	; 1
     746:	01 c0       	rjmp	.+2      	; 0x74a <.do_clear_bss_start>

00000748 <.do_clear_bss_loop>:
     748:	1d 92       	st	X+, r1

0000074a <.do_clear_bss_start>:
     74a:	aa 3b       	cpi	r26, 0xBA	; 186
     74c:	b2 07       	cpc	r27, r18
     74e:	e1 f7       	brne	.-8      	; 0x748 <.do_clear_bss_loop>
     750:	0e 94 02 09 	call	0x1204	; 0x1204 <main>
     754:	0c 94 5d 0e 	jmp	0x1cba	; 0x1cba <_exit>

00000758 <__bad_interrupt>:
     758:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000075c <clock_init>:
#define CONVERSION_DELAY 50


void clock_init(void){
	//Set pin pd4 as output
	DDRD |= (1 << DDD4);
     75c:	8c 9a       	sbi	0x11, 4	; 17
	
	// 1.3 MHz?
	cli(); //clears the global interrupt flag in SREG to prevent any form of interrupt occuring.
     75e:	f8 94       	cli
	TCCR3A |= (1 << COM3A0);
     760:	eb e8       	ldi	r30, 0x8B	; 139
     762:	f0 e0       	ldi	r31, 0x00	; 0
     764:	80 81       	ld	r24, Z
     766:	80 64       	ori	r24, 0x40	; 64
     768:	80 83       	st	Z, r24
	TCCR3B |= (1 << CS30);
     76a:	ea e8       	ldi	r30, 0x8A	; 138
     76c:	f0 e0       	ldi	r31, 0x00	; 0
     76e:	80 81       	ld	r24, Z
     770:	81 60       	ori	r24, 0x01	; 1
     772:	80 83       	st	Z, r24
	TCCR3B |= (1 << WGM32);
     774:	80 81       	ld	r24, Z
     776:	88 60       	ori	r24, 0x08	; 8
     778:	80 83       	st	Z, r24
	OCR3A = 1;
     77a:	81 e0       	ldi	r24, 0x01	; 1
     77c:	90 e0       	ldi	r25, 0x00	; 0
     77e:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
     782:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
	sei(); // Enables interrupts by setting the global interrupt mask.
     786:	78 94       	sei
     788:	08 95       	ret

0000078a <adc_init>:
};

void adc_init (void){
	//Configuration data to be written to ADC

	clock_init();
     78a:	0e 94 ae 03 	call	0x75c	; 0x75c <clock_init>
     78e:	08 95       	ret

00000790 <adc_read>:
		

	
}

int adc_read(int channel){
     790:	cf 93       	push	r28
     792:	c8 2f       	mov	r28, r24
	//D7 = 1, only the channel specified by An is converted. A single !RD pulse reads the result of that conversion

	uint8_t confData = 0b10000000 | channel;
	uint16_t adcMemArea = 0x400;

	xmem_init();
     794:	0e 94 f3 08 	call	0x11e6	; 0x11e6 <xmem_init>
	xmem_write(confData, adcMemArea);
     798:	60 e0       	ldi	r22, 0x00	; 0
     79a:	74 e0       	ldi	r23, 0x04	; 4
     79c:	8c 2f       	mov	r24, r28
     79e:	80 68       	ori	r24, 0x80	; 128
     7a0:	0e 94 fa 08 	call	0x11f4	; 0x11f4 <xmem_write>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     7a4:	80 e1       	ldi	r24, 0x10	; 16
     7a6:	8a 95       	dec	r24
     7a8:	f1 f7       	brne	.-4      	; 0x7a6 <adc_read+0x16>
     7aa:	00 c0       	rjmp	.+0      	; 0x7ac <adc_read+0x1c>
	_delay_us(CONVERSION_DELAY);
	uint8_t result = xmem_read(adcMemArea);
     7ac:	80 e0       	ldi	r24, 0x00	; 0
     7ae:	94 e0       	ldi	r25, 0x04	; 4
     7b0:	0e 94 fe 08 	call	0x11fc	; 0x11fc <xmem_read>
     7b4:	90 e1       	ldi	r25, 0x10	; 16
     7b6:	9a 95       	dec	r25
     7b8:	f1 f7       	brne	.-4      	; 0x7b6 <adc_read+0x26>
     7ba:	00 c0       	rjmp	.+0      	; 0x7bc <adc_read+0x2c>

	_delay_us(CONVERSION_DELAY);

	return result;
}
     7bc:	90 e0       	ldi	r25, 0x00	; 0
     7be:	cf 91       	pop	r28
     7c0:	08 95       	ret

000007c2 <joystick_calibrate>:


volatile uint8_t x_offset;
volatile uint8_t y_offset;

void joystick_calibrate(){
     7c2:	cf 92       	push	r12
     7c4:	df 92       	push	r13
     7c6:	ef 92       	push	r14
     7c8:	ff 92       	push	r15
     7ca:	0f 93       	push	r16
     7cc:	1f 93       	push	r17
     7ce:	cf 93       	push	r28
     7d0:	df 93       	push	r29
     7d2:	cd b7       	in	r28, 0x3d	; 61
     7d4:	de b7       	in	r29, 0x3e	; 62
     7d6:	c0 59       	subi	r28, 0x90	; 144
     7d8:	d1 40       	sbci	r29, 0x01	; 1
     7da:	0f b6       	in	r0, 0x3f	; 63
     7dc:	f8 94       	cli
     7de:	de bf       	out	0x3e, r29	; 62
     7e0:	0f be       	out	0x3f, r0	; 63
     7e2:	cd bf       	out	0x3d, r28	; 61
     7e4:	8e 01       	movw	r16, r28
     7e6:	07 53       	subi	r16, 0x37	; 55
     7e8:	1f 4f       	sbci	r17, 0xFF	; 255
     7ea:	ce 01       	movw	r24, r28
     7ec:	01 96       	adiw	r24, 0x01	; 1
     7ee:	7c 01       	movw	r14, r24
     7f0:	6e 01       	movw	r12, r28
     7f2:	9f e6       	ldi	r25, 0x6F	; 111
     7f4:	c9 1a       	sub	r12, r25
     7f6:	9e ef       	ldi	r25, 0xFE	; 254
     7f8:	d9 0a       	sbc	r13, r25
	int n=100,arrx[n],arry[n];
	for(int i = 0;i < n;i++) {
		arrx[i]=adc_read(1);
     7fa:	81 e0       	ldi	r24, 0x01	; 1
     7fc:	90 e0       	ldi	r25, 0x00	; 0
     7fe:	0e 94 c8 03 	call	0x790	; 0x790 <adc_read>
     802:	f8 01       	movw	r30, r16
     804:	81 93       	st	Z+, r24
     806:	91 93       	st	Z+, r25
     808:	8f 01       	movw	r16, r30
		arry[i]=adc_read(0);
     80a:	80 e0       	ldi	r24, 0x00	; 0
     80c:	90 e0       	ldi	r25, 0x00	; 0
     80e:	0e 94 c8 03 	call	0x790	; 0x790 <adc_read>
     812:	f7 01       	movw	r30, r14
     814:	81 93       	st	Z+, r24
     816:	91 93       	st	Z+, r25
     818:	7f 01       	movw	r14, r30
volatile uint8_t x_offset;
volatile uint8_t y_offset;

void joystick_calibrate(){
	int n=100,arrx[n],arry[n];
	for(int i = 0;i < n;i++) {
     81a:	0c 15       	cp	r16, r12
     81c:	1d 05       	cpc	r17, r13
     81e:	69 f7       	brne	.-38     	; 0x7fa <joystick_calibrate+0x38>
		arrx[i]=adc_read(1);
		arry[i]=adc_read(0);
	}
	
	x_offset = util_median(arrx,n);
     820:	64 e6       	ldi	r22, 0x64	; 100
     822:	70 e0       	ldi	r23, 0x00	; 0
     824:	ce 01       	movw	r24, r28
     826:	87 53       	subi	r24, 0x37	; 55
     828:	9f 4f       	sbci	r25, 0xFF	; 255
     82a:	0e 94 44 09 	call	0x1288	; 0x1288 <util_median>
     82e:	80 93 ab 01 	sts	0x01AB, r24	; 0x8001ab <x_offset>
	y_offset = util_median(arry,n);
     832:	64 e6       	ldi	r22, 0x64	; 100
     834:	70 e0       	ldi	r23, 0x00	; 0
     836:	ce 01       	movw	r24, r28
     838:	01 96       	adiw	r24, 0x01	; 1
     83a:	0e 94 44 09 	call	0x1288	; 0x1288 <util_median>
     83e:	80 93 aa 01 	sts	0x01AA, r24	; 0x8001aa <y_offset>
}
     842:	c0 57       	subi	r28, 0x70	; 112
     844:	de 4f       	sbci	r29, 0xFE	; 254
     846:	0f b6       	in	r0, 0x3f	; 63
     848:	f8 94       	cli
     84a:	de bf       	out	0x3e, r29	; 62
     84c:	0f be       	out	0x3f, r0	; 63
     84e:	cd bf       	out	0x3d, r28	; 61
     850:	df 91       	pop	r29
     852:	cf 91       	pop	r28
     854:	1f 91       	pop	r17
     856:	0f 91       	pop	r16
     858:	ff 90       	pop	r15
     85a:	ef 90       	pop	r14
     85c:	df 90       	pop	r13
     85e:	cf 90       	pop	r12
     860:	08 95       	ret

00000862 <joystick_getPosition>:

joystick_position joystick_getPosition(void){
     862:	1f 93       	push	r17
     864:	cf 93       	push	r28
     866:	df 93       	push	r29
	joystick_position position;
	uint8_t x = adc_read(1);
     868:	81 e0       	ldi	r24, 0x01	; 1
     86a:	90 e0       	ldi	r25, 0x00	; 0
     86c:	0e 94 c8 03 	call	0x790	; 0x790 <adc_read>
     870:	ec 01       	movw	r28, r24
	uint8_t y = adc_read(0);
     872:	80 e0       	ldi	r24, 0x00	; 0
     874:	90 e0       	ldi	r25, 0x00	; 0
     876:	0e 94 c8 03 	call	0x790	; 0x790 <adc_read>
     87a:	9c 01       	movw	r18, r24
     87c:	48 2f       	mov	r20, r24

	if(x > x_offset){
     87e:	80 91 ab 01 	lds	r24, 0x01AB	; 0x8001ab <x_offset>
     882:	8c 17       	cp	r24, r28
     884:	a8 f4       	brcc	.+42     	; 0x8b0 <joystick_getPosition+0x4e>
			position.x_pos = 100*(x-x_offset)/(0xFF - x_offset);
     886:	80 91 ab 01 	lds	r24, 0x01AB	; 0x8001ab <x_offset>
     88a:	50 91 ab 01 	lds	r21, 0x01AB	; 0x8001ab <x_offset>
     88e:	dd 27       	eor	r29, r29
     890:	c8 1b       	sub	r28, r24
     892:	d1 09       	sbc	r29, r1
     894:	64 e6       	ldi	r22, 0x64	; 100
     896:	6c 9f       	mul	r22, r28
     898:	c0 01       	movw	r24, r0
     89a:	6d 9f       	mul	r22, r29
     89c:	90 0d       	add	r25, r0
     89e:	11 24       	eor	r1, r1
     8a0:	6f ef       	ldi	r22, 0xFF	; 255
     8a2:	70 e0       	ldi	r23, 0x00	; 0
     8a4:	65 1b       	sub	r22, r21
     8a6:	71 09       	sbc	r23, r1
     8a8:	0e 94 5c 09 	call	0x12b8	; 0x12b8 <__divmodhi4>
     8ac:	fb 01       	movw	r30, r22
     8ae:	18 c0       	rjmp	.+48     	; 0x8e0 <joystick_getPosition+0x7e>
	}
	else if (x < x_offset){
     8b0:	80 91 ab 01 	lds	r24, 0x01AB	; 0x8001ab <x_offset>
     8b4:	c8 17       	cp	r28, r24
     8b6:	90 f4       	brcc	.+36     	; 0x8dc <joystick_getPosition+0x7a>
		position.x_pos = 100*(x-x_offset)/(x_offset - 0);
     8b8:	80 91 ab 01 	lds	r24, 0x01AB	; 0x8001ab <x_offset>
     8bc:	60 91 ab 01 	lds	r22, 0x01AB	; 0x8001ab <x_offset>
     8c0:	dd 27       	eor	r29, r29
     8c2:	c8 1b       	sub	r28, r24
     8c4:	d1 09       	sbc	r29, r1
     8c6:	54 e6       	ldi	r21, 0x64	; 100
     8c8:	5c 9f       	mul	r21, r28
     8ca:	c0 01       	movw	r24, r0
     8cc:	5d 9f       	mul	r21, r29
     8ce:	90 0d       	add	r25, r0
     8d0:	11 24       	eor	r1, r1
     8d2:	70 e0       	ldi	r23, 0x00	; 0
     8d4:	0e 94 5c 09 	call	0x12b8	; 0x12b8 <__divmodhi4>
     8d8:	fb 01       	movw	r30, r22
     8da:	02 c0       	rjmp	.+4      	; 0x8e0 <joystick_getPosition+0x7e>
	}
	else {
		position.x_pos = 0;
     8dc:	e0 e0       	ldi	r30, 0x00	; 0
     8de:	f0 e0       	ldi	r31, 0x00	; 0
	}

	if(y > y_offset){
     8e0:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <y_offset>
     8e4:	84 17       	cp	r24, r20
     8e6:	a8 f4       	brcc	.+42     	; 0x912 <joystick_getPosition+0xb0>
		position.y_pos = 100*(y-y_offset)/(0xFF - y_offset);
     8e8:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <y_offset>
     8ec:	40 91 aa 01 	lds	r20, 0x01AA	; 0x8001aa <y_offset>
     8f0:	33 27       	eor	r19, r19
     8f2:	28 1b       	sub	r18, r24
     8f4:	31 09       	sbc	r19, r1
     8f6:	54 e6       	ldi	r21, 0x64	; 100
     8f8:	52 9f       	mul	r21, r18
     8fa:	c0 01       	movw	r24, r0
     8fc:	53 9f       	mul	r21, r19
     8fe:	90 0d       	add	r25, r0
     900:	11 24       	eor	r1, r1
     902:	6f ef       	ldi	r22, 0xFF	; 255
     904:	70 e0       	ldi	r23, 0x00	; 0
     906:	64 1b       	sub	r22, r20
     908:	71 09       	sbc	r23, r1
     90a:	0e 94 5c 09 	call	0x12b8	; 0x12b8 <__divmodhi4>
     90e:	9b 01       	movw	r18, r22
     910:	18 c0       	rjmp	.+48     	; 0x942 <joystick_getPosition+0xe0>
	}
	else if (y < y_offset){
     912:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <y_offset>
     916:	48 17       	cp	r20, r24
     918:	90 f4       	brcc	.+36     	; 0x93e <joystick_getPosition+0xdc>
		position.y_pos = 100*(y-y_offset)/(y_offset - 0);
     91a:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <y_offset>
     91e:	60 91 aa 01 	lds	r22, 0x01AA	; 0x8001aa <y_offset>
     922:	33 27       	eor	r19, r19
     924:	28 1b       	sub	r18, r24
     926:	31 09       	sbc	r19, r1
     928:	44 e6       	ldi	r20, 0x64	; 100
     92a:	42 9f       	mul	r20, r18
     92c:	c0 01       	movw	r24, r0
     92e:	43 9f       	mul	r20, r19
     930:	90 0d       	add	r25, r0
     932:	11 24       	eor	r1, r1
     934:	70 e0       	ldi	r23, 0x00	; 0
     936:	0e 94 5c 09 	call	0x12b8	; 0x12b8 <__divmodhi4>
     93a:	9b 01       	movw	r18, r22
     93c:	02 c0       	rjmp	.+4      	; 0x942 <joystick_getPosition+0xe0>
	}
	else {
		position.y_pos = 0;
     93e:	20 e0       	ldi	r18, 0x00	; 0
     940:	30 e0       	ldi	r19, 0x00	; 0
	}
	
	return position;
     942:	bf 01       	movw	r22, r30
     944:	c9 01       	movw	r24, r18
}
     946:	df 91       	pop	r29
     948:	cf 91       	pop	r28
     94a:	1f 91       	pop	r17
     94c:	08 95       	ret

0000094e <joystick_getDirection>:

joystick_direction joystick_getDirection(void){
	//enums LEFT = 0, RIGHT = 1, DOWN = 2, UP = 3, NEUTRAL = 4
	joystick_position position;

	position = joystick_getPosition();
     94e:	0e 94 31 04 	call	0x862	; 0x862 <joystick_getPosition>
	
	if(position.x_pos < -50){
     952:	6e 3c       	cpi	r22, 0xCE	; 206
     954:	ef ef       	ldi	r30, 0xFF	; 255
     956:	7e 07       	cpc	r23, r30
     958:	84 f0       	brlt	.+32     	; 0x97a <joystick_getDirection+0x2c>
		return LEFT;
	}
	else if(position.x_pos > 50){
     95a:	63 33       	cpi	r22, 0x33	; 51
     95c:	71 05       	cpc	r23, r1
     95e:	7c f4       	brge	.+30     	; 0x97e <joystick_getDirection+0x30>
		return RIGHT;	
	}

	if(position.y_pos < -50){
     960:	8e 3c       	cpi	r24, 0xCE	; 206
     962:	2f ef       	ldi	r18, 0xFF	; 255
     964:	92 07       	cpc	r25, r18
     966:	6c f0       	brlt	.+26     	; 0x982 <joystick_getDirection+0x34>
		return DOWN;
	}
	else if(position.y_pos > 50){
     968:	c3 97       	sbiw	r24, 0x33	; 51
     96a:	6c f4       	brge	.+26     	; 0x986 <joystick_getDirection+0x38>
		return UP;
	}
	
	if(position.x_pos <= 50 && position.x_pos >= -50 && position.y_pos <= 50 && position.y_pos >= -50){
     96c:	6e 5c       	subi	r22, 0xCE	; 206
     96e:	7f 4f       	sbci	r23, 0xFF	; 255
     970:	65 36       	cpi	r22, 0x65	; 101
     972:	71 05       	cpc	r23, r1
     974:	50 f0       	brcs	.+20     	; 0x98a <joystick_getDirection+0x3c>
		return NEUTRAL;
	}
	return 0;
     976:	80 e0       	ldi	r24, 0x00	; 0
     978:	08 95       	ret
	joystick_position position;

	position = joystick_getPosition();
	
	if(position.x_pos < -50){
		return LEFT;
     97a:	80 e0       	ldi	r24, 0x00	; 0
     97c:	08 95       	ret
	}
	else if(position.x_pos > 50){
		return RIGHT;	
     97e:	81 e0       	ldi	r24, 0x01	; 1
     980:	08 95       	ret
	}

	if(position.y_pos < -50){
		return DOWN;
     982:	82 e0       	ldi	r24, 0x02	; 2
     984:	08 95       	ret
	}
	else if(position.y_pos > 50){
		return UP;
     986:	83 e0       	ldi	r24, 0x03	; 3
     988:	08 95       	ret
	}
	
	if(position.x_pos <= 50 && position.x_pos >= -50 && position.y_pos <= 50 && position.y_pos >= -50){
		return NEUTRAL;
     98a:	84 e0       	ldi	r24, 0x04	; 4
	}
	return 0;
     98c:	08 95       	ret

0000098e <f_newgame>:
	
	return new_submenu;
}

void f_newgame(){
	oled_reset();
     98e:	0e 94 66 07 	call	0xecc	; 0xecc <oled_reset>
	oled_center_print("New Game", 8);
     992:	68 e0       	ldi	r22, 0x08	; 8
     994:	70 e0       	ldi	r23, 0x00	; 0
     996:	8c e0       	ldi	r24, 0x0C	; 12
     998:	91 e0       	ldi	r25, 0x01	; 1
     99a:	0e 94 25 08 	call	0x104a	; 0x104a <oled_center_print>
     99e:	08 95       	ret

000009a0 <f_debugging>:
}


void f_debugging(){
	oled_reset();
     9a0:	0e 94 66 07 	call	0xecc	; 0xecc <oled_reset>
	oled_center_print("Debugging", 8);
     9a4:	68 e0       	ldi	r22, 0x08	; 8
     9a6:	70 e0       	ldi	r23, 0x00	; 0
     9a8:	85 e1       	ldi	r24, 0x15	; 21
     9aa:	91 e0       	ldi	r25, 0x01	; 1
     9ac:	0e 94 25 08 	call	0x104a	; 0x104a <oled_center_print>
     9b0:	08 95       	ret

000009b2 <f_difficulty>:
}

void f_difficulty(){
	oled_reset();
     9b2:	0e 94 66 07 	call	0xecc	; 0xecc <oled_reset>
	oled_center_print("Difficulty", 8);
     9b6:	68 e0       	ldi	r22, 0x08	; 8
     9b8:	70 e0       	ldi	r23, 0x00	; 0
     9ba:	8f e1       	ldi	r24, 0x1F	; 31
     9bc:	91 e0       	ldi	r25, 0x01	; 1
     9be:	0e 94 25 08 	call	0x104a	; 0x104a <oled_center_print>
     9c2:	08 95       	ret

000009c4 <f_calibrate>:
}

void f_calibrate(){
	oled_reset();
     9c4:	0e 94 66 07 	call	0xecc	; 0xecc <oled_reset>
	oled_center_print("Calibrate", 8);
     9c8:	68 e0       	ldi	r22, 0x08	; 8
     9ca:	70 e0       	ldi	r23, 0x00	; 0
     9cc:	8a e2       	ldi	r24, 0x2A	; 42
     9ce:	91 e0       	ldi	r25, 0x01	; 1
     9d0:	0e 94 25 08 	call	0x104a	; 0x104a <oled_center_print>
     9d4:	08 95       	ret

000009d6 <f_high_score>:
}

void f_high_score(){
	oled_reset();
     9d6:	0e 94 66 07 	call	0xecc	; 0xecc <oled_reset>
	oled_center_print("High Score", 8);
     9da:	68 e0       	ldi	r22, 0x08	; 8
     9dc:	70 e0       	ldi	r23, 0x00	; 0
     9de:	84 e3       	ldi	r24, 0x34	; 52
     9e0:	91 e0       	ldi	r25, 0x01	; 1
     9e2:	0e 94 25 08 	call	0x104a	; 0x104a <oled_center_print>
     9e6:	08 95       	ret

000009e8 <Menu_new_submenu>:
	
	curr_menu = main_menu;
	
}

menu_item* Menu_new_submenu(menu_item* self, char* name, void (*function)(char*)){
     9e8:	cf 92       	push	r12
     9ea:	df 92       	push	r13
     9ec:	ef 92       	push	r14
     9ee:	ff 92       	push	r15
     9f0:	0f 93       	push	r16
     9f2:	1f 93       	push	r17
     9f4:	cf 93       	push	r28
     9f6:	df 93       	push	r29
     9f8:	8c 01       	movw	r16, r24
     9fa:	7b 01       	movw	r14, r22
     9fc:	6a 01       	movw	r12, r20
	menu_item* new_submenu = malloc(sizeof(menu_item));
     9fe:	8c e0       	ldi	r24, 0x0C	; 12
     a00:	90 e0       	ldi	r25, 0x00	; 0
     a02:	0e 94 84 09 	call	0x1308	; 0x1308 <malloc>
     a06:	ec 01       	movw	r28, r24
	
	new_submenu->parent=self;
     a08:	19 83       	std	Y+1, r17	; 0x01
     a0a:	08 83       	st	Y, r16
	new_submenu->children=NULL;
     a0c:	1d 82       	std	Y+5, r1	; 0x05
     a0e:	1c 82       	std	Y+4, r1	; 0x04
	new_submenu->numOfChildren=0;
     a10:	1f 82       	std	Y+7, r1	; 0x07
     a12:	1e 82       	std	Y+6, r1	; 0x06
	new_submenu->name=name;
     a14:	f9 86       	std	Y+9, r15	; 0x09
     a16:	e8 86       	std	Y+8, r14	; 0x08
	new_submenu->nameArrow=oled_arrow(name);
     a18:	c7 01       	movw	r24, r14
     a1a:	0e 94 48 08 	call	0x1090	; 0x1090 <oled_arrow>
     a1e:	9b 87       	std	Y+11, r25	; 0x0b
     a20:	8a 87       	std	Y+10, r24	; 0x0a
	new_submenu->function = function;
     a22:	db 82       	std	Y+3, r13	; 0x03
     a24:	ca 82       	std	Y+2, r12	; 0x02
		
	self->children=realloc(self->children, (self->numOfChildren+1)*sizeof(menu_item*));
     a26:	f8 01       	movw	r30, r16
     a28:	66 81       	ldd	r22, Z+6	; 0x06
     a2a:	77 81       	ldd	r23, Z+7	; 0x07
     a2c:	6f 5f       	subi	r22, 0xFF	; 255
     a2e:	7f 4f       	sbci	r23, 0xFF	; 255
     a30:	66 0f       	add	r22, r22
     a32:	77 1f       	adc	r23, r23
     a34:	84 81       	ldd	r24, Z+4	; 0x04
     a36:	95 81       	ldd	r25, Z+5	; 0x05
     a38:	0e 94 a5 0a 	call	0x154a	; 0x154a <realloc>
     a3c:	f8 01       	movw	r30, r16
     a3e:	95 83       	std	Z+5, r25	; 0x05
     a40:	84 83       	std	Z+4, r24	; 0x04
	self->children[self->numOfChildren]=new_submenu;
     a42:	26 81       	ldd	r18, Z+6	; 0x06
     a44:	37 81       	ldd	r19, Z+7	; 0x07
     a46:	a9 01       	movw	r20, r18
     a48:	44 0f       	add	r20, r20
     a4a:	55 1f       	adc	r21, r21
     a4c:	fc 01       	movw	r30, r24
     a4e:	e4 0f       	add	r30, r20
     a50:	f5 1f       	adc	r31, r21
     a52:	d1 83       	std	Z+1, r29	; 0x01
     a54:	c0 83       	st	Z, r28
	
	self->numOfChildren++;
     a56:	2f 5f       	subi	r18, 0xFF	; 255
     a58:	3f 4f       	sbci	r19, 0xFF	; 255
     a5a:	f8 01       	movw	r30, r16
     a5c:	37 83       	std	Z+7, r19	; 0x07
     a5e:	26 83       	std	Z+6, r18	; 0x06
	
	return new_submenu;
}
     a60:	ce 01       	movw	r24, r28
     a62:	df 91       	pop	r29
     a64:	cf 91       	pop	r28
     a66:	1f 91       	pop	r17
     a68:	0f 91       	pop	r16
     a6a:	ff 90       	pop	r15
     a6c:	ef 90       	pop	r14
     a6e:	df 90       	pop	r13
     a70:	cf 90       	pop	r12
     a72:	08 95       	ret

00000a74 <menu_init>:
	struct menu_item* children[8];
	int numOfChildren=0;
	char name[];
} menu_item;
*/
void menu_init(){
     a74:	ff 92       	push	r15
     a76:	0f 93       	push	r16
     a78:	1f 93       	push	r17
     a7a:	cf 93       	push	r28
     a7c:	df 93       	push	r29
	
	menu_item* main_menu = malloc(sizeof(menu_item));
     a7e:	8c e0       	ldi	r24, 0x0C	; 12
     a80:	90 e0       	ldi	r25, 0x00	; 0
     a82:	0e 94 84 09 	call	0x1308	; 0x1308 <malloc>
     a86:	8c 01       	movw	r16, r24
	
	main_menu->name = "Main Menu";
     a88:	8f e3       	ldi	r24, 0x3F	; 63
     a8a:	91 e0       	ldi	r25, 0x01	; 1
     a8c:	d8 01       	movw	r26, r16
     a8e:	19 96       	adiw	r26, 0x09	; 9
     a90:	9c 93       	st	X, r25
     a92:	8e 93       	st	-X, r24
     a94:	18 97       	sbiw	r26, 0x08	; 8
	main_menu->nameArrow= NULL;
     a96:	1b 96       	adiw	r26, 0x0b	; 11
     a98:	1c 92       	st	X, r1
     a9a:	1e 92       	st	-X, r1
     a9c:	1a 97       	sbiw	r26, 0x0a	; 10
	main_menu->numOfChildren = 0;
     a9e:	17 96       	adiw	r26, 0x07	; 7
     aa0:	1c 92       	st	X, r1
     aa2:	1e 92       	st	-X, r1
     aa4:	16 97       	sbiw	r26, 0x06	; 6
	main_menu->parent = NULL;
     aa6:	11 96       	adiw	r26, 0x01	; 1
     aa8:	1c 92       	st	X, r1
     aaa:	1e 92       	st	-X, r1
	main_menu->function = NULL;
     aac:	13 96       	adiw	r26, 0x03	; 3
     aae:	1c 92       	st	X, r1
     ab0:	1e 92       	st	-X, r1
     ab2:	12 97       	sbiw	r26, 0x02	; 2
	Menu_new_submenu(main_menu, "HIGH SCORE", ">HIGH SCORE<", &f_high_score);
	Menu_new_submenu(main_menu, "CALIBRATE", ">CALIBRATE<", &f_calibrate);
	Menu_new_submenu(main_menu, "DIFFICULTY", ">DIFFICULTY<", &f_difficulty);
	Menu_new_submenu(main_menu, "DEBUGGING", ">DEBUGGING<", &f_debugging); */
	
	Menu_new_submenu(main_menu, "NEW GAME", &f_newgame);
     ab4:	47 ec       	ldi	r20, 0xC7	; 199
     ab6:	54 e0       	ldi	r21, 0x04	; 4
     ab8:	69 e4       	ldi	r22, 0x49	; 73
     aba:	71 e0       	ldi	r23, 0x01	; 1
     abc:	c8 01       	movw	r24, r16
     abe:	0e 94 f4 04 	call	0x9e8	; 0x9e8 <Menu_new_submenu>
	Menu_new_submenu(main_menu, "HIGH SCORE", &f_high_score);
     ac2:	4b ee       	ldi	r20, 0xEB	; 235
     ac4:	54 e0       	ldi	r21, 0x04	; 4
     ac6:	62 e5       	ldi	r22, 0x52	; 82
     ac8:	71 e0       	ldi	r23, 0x01	; 1
     aca:	c8 01       	movw	r24, r16
     acc:	0e 94 f4 04 	call	0x9e8	; 0x9e8 <Menu_new_submenu>
	Menu_new_submenu(main_menu, "CALIBRATE", &f_calibrate);
     ad0:	42 ee       	ldi	r20, 0xE2	; 226
     ad2:	54 e0       	ldi	r21, 0x04	; 4
     ad4:	6d e5       	ldi	r22, 0x5D	; 93
     ad6:	71 e0       	ldi	r23, 0x01	; 1
     ad8:	c8 01       	movw	r24, r16
     ada:	0e 94 f4 04 	call	0x9e8	; 0x9e8 <Menu_new_submenu>
	Menu_new_submenu(main_menu, "DIFFICULTY", &f_difficulty);
     ade:	49 ed       	ldi	r20, 0xD9	; 217
     ae0:	54 e0       	ldi	r21, 0x04	; 4
     ae2:	67 e6       	ldi	r22, 0x67	; 103
     ae4:	71 e0       	ldi	r23, 0x01	; 1
     ae6:	c8 01       	movw	r24, r16
     ae8:	0e 94 f4 04 	call	0x9e8	; 0x9e8 <Menu_new_submenu>
	Menu_new_submenu(main_menu, "DEBUGGING", &f_debugging);
     aec:	40 ed       	ldi	r20, 0xD0	; 208
     aee:	54 e0       	ldi	r21, 0x04	; 4
     af0:	62 e7       	ldi	r22, 0x72	; 114
     af2:	71 e0       	ldi	r23, 0x01	; 1
     af4:	c8 01       	movw	r24, r16
     af6:	0e 94 f4 04 	call	0x9e8	; 0x9e8 <Menu_new_submenu>
	
	oled_center_print("PINGPONG",8);
     afa:	68 e0       	ldi	r22, 0x08	; 8
     afc:	70 e0       	ldi	r23, 0x00	; 0
     afe:	8c e7       	ldi	r24, 0x7C	; 124
     b00:	91 e0       	ldi	r25, 0x01	; 1
     b02:	0e 94 25 08 	call	0x104a	; 0x104a <oled_center_print>
	for (int i=0; i < (main_menu->numOfChildren); i++){
     b06:	f8 01       	movw	r30, r16
     b08:	86 81       	ldd	r24, Z+6	; 0x06
     b0a:	97 81       	ldd	r25, Z+7	; 0x07
     b0c:	18 16       	cp	r1, r24
     b0e:	19 06       	cpc	r1, r25
     b10:	2c f5       	brge	.+74     	; 0xb5c <menu_init+0xe8>
     b12:	68 94       	set
     b14:	ff 24       	eor	r15, r15
     b16:	f1 f8       	bld	r15, 1
     b18:	c0 e0       	ldi	r28, 0x00	; 0
     b1a:	d0 e0       	ldi	r29, 0x00	; 0
		oled_goto_page(header_pages+i);
     b1c:	8f 2d       	mov	r24, r15
     b1e:	0e 94 e3 06 	call	0xdc6	; 0xdc6 <oled_goto_page>
		oled_center_print(main_menu->children[i]->name, fontsize);
     b22:	60 91 0a 01 	lds	r22, 0x010A	; 0x80010a <fontsize>
     b26:	70 91 0b 01 	lds	r23, 0x010B	; 0x80010b <fontsize+0x1>
     b2a:	ce 01       	movw	r24, r28
     b2c:	88 0f       	add	r24, r24
     b2e:	99 1f       	adc	r25, r25
     b30:	d8 01       	movw	r26, r16
     b32:	14 96       	adiw	r26, 0x04	; 4
     b34:	ed 91       	ld	r30, X+
     b36:	fc 91       	ld	r31, X
     b38:	15 97       	sbiw	r26, 0x05	; 5
     b3a:	e8 0f       	add	r30, r24
     b3c:	f9 1f       	adc	r31, r25
     b3e:	01 90       	ld	r0, Z+
     b40:	f0 81       	ld	r31, Z
     b42:	e0 2d       	mov	r30, r0
     b44:	80 85       	ldd	r24, Z+8	; 0x08
     b46:	91 85       	ldd	r25, Z+9	; 0x09
     b48:	0e 94 25 08 	call	0x104a	; 0x104a <oled_center_print>
	Menu_new_submenu(main_menu, "CALIBRATE", &f_calibrate);
	Menu_new_submenu(main_menu, "DIFFICULTY", &f_difficulty);
	Menu_new_submenu(main_menu, "DEBUGGING", &f_debugging);
	
	oled_center_print("PINGPONG",8);
	for (int i=0; i < (main_menu->numOfChildren); i++){
     b4c:	21 96       	adiw	r28, 0x01	; 1
     b4e:	f3 94       	inc	r15
     b50:	f8 01       	movw	r30, r16
     b52:	86 81       	ldd	r24, Z+6	; 0x06
     b54:	97 81       	ldd	r25, Z+7	; 0x07
     b56:	c8 17       	cp	r28, r24
     b58:	d9 07       	cpc	r29, r25
     b5a:	04 f3       	brlt	.-64     	; 0xb1c <menu_init+0xa8>
		oled_goto_page(header_pages+i);
		oled_center_print(main_menu->children[i]->name, fontsize);
	}
	oled_goto_page(header_pages);
     b5c:	82 e0       	ldi	r24, 0x02	; 2
     b5e:	0e 94 e3 06 	call	0xdc6	; 0xdc6 <oled_goto_page>
	oled_center_print(main_menu->children[0]->nameArrow,fontsize);
     b62:	60 91 0a 01 	lds	r22, 0x010A	; 0x80010a <fontsize>
     b66:	70 91 0b 01 	lds	r23, 0x010B	; 0x80010b <fontsize+0x1>
     b6a:	d8 01       	movw	r26, r16
     b6c:	14 96       	adiw	r26, 0x04	; 4
     b6e:	ed 91       	ld	r30, X+
     b70:	fc 91       	ld	r31, X
     b72:	15 97       	sbiw	r26, 0x05	; 5
     b74:	01 90       	ld	r0, Z+
     b76:	f0 81       	ld	r31, Z
     b78:	e0 2d       	mov	r30, r0
     b7a:	82 85       	ldd	r24, Z+10	; 0x0a
     b7c:	93 85       	ldd	r25, Z+11	; 0x0b
     b7e:	0e 94 25 08 	call	0x104a	; 0x104a <oled_center_print>
	
	curr_menu = main_menu;
     b82:	10 93 a7 01 	sts	0x01A7, r17	; 0x8001a7 <__data_end+0x1>
     b86:	00 93 a6 01 	sts	0x01A6, r16	; 0x8001a6 <__data_end>
	
}
     b8a:	df 91       	pop	r29
     b8c:	cf 91       	pop	r28
     b8e:	1f 91       	pop	r17
     b90:	0f 91       	pop	r16
     b92:	ff 90       	pop	r15
     b94:	08 95       	ret

00000b96 <navigate>:
	oled_reset();
	oled_center_print("High Score", 8);
}


void navigate(){
     b96:	cf 93       	push	r28
     b98:	df 93       	push	r29
switch (joystick_getDirection()){
     b9a:	0e 94 a7 04 	call	0x94e	; 0x94e <joystick_getDirection>
     b9e:	81 30       	cpi	r24, 0x01	; 1
     ba0:	09 f4       	brne	.+2      	; 0xba4 <navigate+0xe>
     ba2:	df c0       	rjmp	.+446    	; 0xd62 <navigate+0x1cc>
     ba4:	08 f4       	brcc	.+2      	; 0xba8 <navigate+0x12>
     ba6:	c3 c0       	rjmp	.+390    	; 0xd2e <navigate+0x198>
     ba8:	82 30       	cpi	r24, 0x02	; 2
     baa:	09 f4       	brne	.+2      	; 0xbae <navigate+0x18>
     bac:	5e c0       	rjmp	.+188    	; 0xc6a <navigate+0xd4>
     bae:	83 30       	cpi	r24, 0x03	; 3
     bb0:	09 f0       	breq	.+2      	; 0xbb4 <navigate+0x1e>
     bb2:	fa c0       	rjmp	.+500    	; 0xda8 <navigate+0x212>
	case UP:
		if(pos_child>0){
     bb4:	80 91 a8 01 	lds	r24, 0x01A8	; 0x8001a8 <pos_child>
     bb8:	90 91 a9 01 	lds	r25, 0x01A9	; 0x8001a9 <pos_child+0x1>
     bbc:	18 16       	cp	r1, r24
     bbe:	19 06       	cpc	r1, r25
     bc0:	0c f0       	brlt	.+2      	; 0xbc4 <navigate+0x2e>
     bc2:	f2 c0       	rjmp	.+484    	; 0xda8 <navigate+0x212>
			oled_goto_page(pos_child+header_pages);
     bc4:	8e 5f       	subi	r24, 0xFE	; 254
     bc6:	0e 94 e3 06 	call	0xdc6	; 0xdc6 <oled_goto_page>
			oled_clear_page(pos_child+header_pages);
     bca:	c8 ea       	ldi	r28, 0xA8	; 168
     bcc:	d1 e0       	ldi	r29, 0x01	; 1
     bce:	88 81       	ld	r24, Y
     bd0:	8e 5f       	subi	r24, 0xFE	; 254
     bd2:	0e 94 2a 07 	call	0xe54	; 0xe54 <oled_clear_page>
			oled_center_print(curr_menu->children[pos_child]->name,fontsize);
     bd6:	60 91 0a 01 	lds	r22, 0x010A	; 0x80010a <fontsize>
     bda:	70 91 0b 01 	lds	r23, 0x010B	; 0x80010b <fontsize+0x1>
     bde:	a0 91 a6 01 	lds	r26, 0x01A6	; 0x8001a6 <__data_end>
     be2:	b0 91 a7 01 	lds	r27, 0x01A7	; 0x8001a7 <__data_end+0x1>
     be6:	e0 91 a8 01 	lds	r30, 0x01A8	; 0x8001a8 <pos_child>
     bea:	f0 91 a9 01 	lds	r31, 0x01A9	; 0x8001a9 <pos_child+0x1>
     bee:	ee 0f       	add	r30, r30
     bf0:	ff 1f       	adc	r31, r31
     bf2:	14 96       	adiw	r26, 0x04	; 4
     bf4:	8d 91       	ld	r24, X+
     bf6:	9c 91       	ld	r25, X
     bf8:	15 97       	sbiw	r26, 0x05	; 5
     bfa:	e8 0f       	add	r30, r24
     bfc:	f9 1f       	adc	r31, r25
     bfe:	01 90       	ld	r0, Z+
     c00:	f0 81       	ld	r31, Z
     c02:	e0 2d       	mov	r30, r0
     c04:	80 85       	ldd	r24, Z+8	; 0x08
     c06:	91 85       	ldd	r25, Z+9	; 0x09
     c08:	0e 94 25 08 	call	0x104a	; 0x104a <oled_center_print>
			
			oled_goto_page(pos_child+header_pages-1);
     c0c:	88 81       	ld	r24, Y
     c0e:	8f 5f       	subi	r24, 0xFF	; 255
     c10:	0e 94 e3 06 	call	0xdc6	; 0xdc6 <oled_goto_page>
			oled_clear_page(pos_child+header_pages-1);
     c14:	88 81       	ld	r24, Y
     c16:	8f 5f       	subi	r24, 0xFF	; 255
     c18:	0e 94 2a 07 	call	0xe54	; 0xe54 <oled_clear_page>
			oled_center_print(curr_menu->children[pos_child-1]->nameArrow,fontsize);
     c1c:	60 91 0a 01 	lds	r22, 0x010A	; 0x80010a <fontsize>
     c20:	70 91 0b 01 	lds	r23, 0x010B	; 0x80010b <fontsize+0x1>
     c24:	a0 91 a6 01 	lds	r26, 0x01A6	; 0x8001a6 <__data_end>
     c28:	b0 91 a7 01 	lds	r27, 0x01A7	; 0x8001a7 <__data_end+0x1>
     c2c:	e0 91 a8 01 	lds	r30, 0x01A8	; 0x8001a8 <pos_child>
     c30:	f0 91 a9 01 	lds	r31, 0x01A9	; 0x8001a9 <pos_child+0x1>
     c34:	e1 50       	subi	r30, 0x01	; 1
     c36:	f0 48       	sbci	r31, 0x80	; 128
     c38:	ee 0f       	add	r30, r30
     c3a:	ff 1f       	adc	r31, r31
     c3c:	14 96       	adiw	r26, 0x04	; 4
     c3e:	8d 91       	ld	r24, X+
     c40:	9c 91       	ld	r25, X
     c42:	15 97       	sbiw	r26, 0x05	; 5
     c44:	e8 0f       	add	r30, r24
     c46:	f9 1f       	adc	r31, r25
     c48:	01 90       	ld	r0, Z+
     c4a:	f0 81       	ld	r31, Z
     c4c:	e0 2d       	mov	r30, r0
     c4e:	82 85       	ldd	r24, Z+10	; 0x0a
     c50:	93 85       	ldd	r25, Z+11	; 0x0b
     c52:	0e 94 25 08 	call	0x104a	; 0x104a <oled_center_print>
			
			pos_child -= 1;
     c56:	80 91 a8 01 	lds	r24, 0x01A8	; 0x8001a8 <pos_child>
     c5a:	90 91 a9 01 	lds	r25, 0x01A9	; 0x8001a9 <pos_child+0x1>
     c5e:	01 97       	sbiw	r24, 0x01	; 1
     c60:	90 93 a9 01 	sts	0x01A9, r25	; 0x8001a9 <pos_child+0x1>
     c64:	80 93 a8 01 	sts	0x01A8, r24	; 0x8001a8 <pos_child>
     c68:	9f c0       	rjmp	.+318    	; 0xda8 <navigate+0x212>
		}
		break;
	case DOWN:
		if(pos_child < curr_menu->numOfChildren-1){
     c6a:	80 91 a8 01 	lds	r24, 0x01A8	; 0x8001a8 <pos_child>
     c6e:	90 91 a9 01 	lds	r25, 0x01A9	; 0x8001a9 <pos_child+0x1>
     c72:	e0 91 a6 01 	lds	r30, 0x01A6	; 0x8001a6 <__data_end>
     c76:	f0 91 a7 01 	lds	r31, 0x01A7	; 0x8001a7 <__data_end+0x1>
     c7a:	26 81       	ldd	r18, Z+6	; 0x06
     c7c:	37 81       	ldd	r19, Z+7	; 0x07
     c7e:	21 50       	subi	r18, 0x01	; 1
     c80:	31 09       	sbc	r19, r1
     c82:	82 17       	cp	r24, r18
     c84:	93 07       	cpc	r25, r19
     c86:	0c f0       	brlt	.+2      	; 0xc8a <navigate+0xf4>
     c88:	8f c0       	rjmp	.+286    	; 0xda8 <navigate+0x212>
			oled_goto_page(pos_child+header_pages);
     c8a:	8e 5f       	subi	r24, 0xFE	; 254
     c8c:	0e 94 e3 06 	call	0xdc6	; 0xdc6 <oled_goto_page>
			oled_clear_page(pos_child+header_pages);
     c90:	c8 ea       	ldi	r28, 0xA8	; 168
     c92:	d1 e0       	ldi	r29, 0x01	; 1
     c94:	88 81       	ld	r24, Y
     c96:	8e 5f       	subi	r24, 0xFE	; 254
     c98:	0e 94 2a 07 	call	0xe54	; 0xe54 <oled_clear_page>
			oled_center_print(curr_menu->children[pos_child]->name,fontsize);
     c9c:	60 91 0a 01 	lds	r22, 0x010A	; 0x80010a <fontsize>
     ca0:	70 91 0b 01 	lds	r23, 0x010B	; 0x80010b <fontsize+0x1>
     ca4:	a0 91 a6 01 	lds	r26, 0x01A6	; 0x8001a6 <__data_end>
     ca8:	b0 91 a7 01 	lds	r27, 0x01A7	; 0x8001a7 <__data_end+0x1>
     cac:	e0 91 a8 01 	lds	r30, 0x01A8	; 0x8001a8 <pos_child>
     cb0:	f0 91 a9 01 	lds	r31, 0x01A9	; 0x8001a9 <pos_child+0x1>
     cb4:	ee 0f       	add	r30, r30
     cb6:	ff 1f       	adc	r31, r31
     cb8:	14 96       	adiw	r26, 0x04	; 4
     cba:	8d 91       	ld	r24, X+
     cbc:	9c 91       	ld	r25, X
     cbe:	15 97       	sbiw	r26, 0x05	; 5
     cc0:	e8 0f       	add	r30, r24
     cc2:	f9 1f       	adc	r31, r25
     cc4:	01 90       	ld	r0, Z+
     cc6:	f0 81       	ld	r31, Z
     cc8:	e0 2d       	mov	r30, r0
     cca:	80 85       	ldd	r24, Z+8	; 0x08
     ccc:	91 85       	ldd	r25, Z+9	; 0x09
     cce:	0e 94 25 08 	call	0x104a	; 0x104a <oled_center_print>
			
			oled_goto_page(pos_child+header_pages+1);
     cd2:	88 81       	ld	r24, Y
     cd4:	8d 5f       	subi	r24, 0xFD	; 253
     cd6:	0e 94 e3 06 	call	0xdc6	; 0xdc6 <oled_goto_page>
			oled_clear_page(pos_child+header_pages+1);
     cda:	88 81       	ld	r24, Y
     cdc:	8d 5f       	subi	r24, 0xFD	; 253
     cde:	0e 94 2a 07 	call	0xe54	; 0xe54 <oled_clear_page>
			oled_center_print(curr_menu->children[pos_child+1]->nameArrow,fontsize);
     ce2:	60 91 0a 01 	lds	r22, 0x010A	; 0x80010a <fontsize>
     ce6:	70 91 0b 01 	lds	r23, 0x010B	; 0x80010b <fontsize+0x1>
     cea:	a0 91 a6 01 	lds	r26, 0x01A6	; 0x8001a6 <__data_end>
     cee:	b0 91 a7 01 	lds	r27, 0x01A7	; 0x8001a7 <__data_end+0x1>
     cf2:	e0 91 a8 01 	lds	r30, 0x01A8	; 0x8001a8 <pos_child>
     cf6:	f0 91 a9 01 	lds	r31, 0x01A9	; 0x8001a9 <pos_child+0x1>
     cfa:	31 96       	adiw	r30, 0x01	; 1
     cfc:	ee 0f       	add	r30, r30
     cfe:	ff 1f       	adc	r31, r31
     d00:	14 96       	adiw	r26, 0x04	; 4
     d02:	8d 91       	ld	r24, X+
     d04:	9c 91       	ld	r25, X
     d06:	15 97       	sbiw	r26, 0x05	; 5
     d08:	e8 0f       	add	r30, r24
     d0a:	f9 1f       	adc	r31, r25
     d0c:	01 90       	ld	r0, Z+
     d0e:	f0 81       	ld	r31, Z
     d10:	e0 2d       	mov	r30, r0
     d12:	82 85       	ldd	r24, Z+10	; 0x0a
     d14:	93 85       	ldd	r25, Z+11	; 0x0b
     d16:	0e 94 25 08 	call	0x104a	; 0x104a <oled_center_print>
			
			pos_child += 1;
     d1a:	80 91 a8 01 	lds	r24, 0x01A8	; 0x8001a8 <pos_child>
     d1e:	90 91 a9 01 	lds	r25, 0x01A9	; 0x8001a9 <pos_child+0x1>
     d22:	01 96       	adiw	r24, 0x01	; 1
     d24:	90 93 a9 01 	sts	0x01A9, r25	; 0x8001a9 <pos_child+0x1>
     d28:	80 93 a8 01 	sts	0x01A8, r24	; 0x8001a8 <pos_child>
     d2c:	3d c0       	rjmp	.+122    	; 0xda8 <navigate+0x212>
		}
		break;
	case LEFT:
		if(curr_menu->parent!=NULL){
     d2e:	e0 91 a6 01 	lds	r30, 0x01A6	; 0x8001a6 <__data_end>
     d32:	f0 91 a7 01 	lds	r31, 0x01A7	; 0x8001a7 <__data_end+0x1>
     d36:	a0 81       	ld	r26, Z
     d38:	b1 81       	ldd	r27, Z+1	; 0x01
     d3a:	10 97       	sbiw	r26, 0x00	; 0
     d3c:	a9 f1       	breq	.+106    	; 0xda8 <navigate+0x212>
			curr_menu=curr_menu->parent;
     d3e:	b0 93 a7 01 	sts	0x01A7, r27	; 0x8001a7 <__data_end+0x1>
     d42:	a0 93 a6 01 	sts	0x01A6, r26	; 0x8001a6 <__data_end>
			pos_child=0;
     d46:	10 92 a9 01 	sts	0x01A9, r1	; 0x8001a9 <pos_child+0x1>
     d4a:	10 92 a8 01 	sts	0x01A8, r1	; 0x8001a8 <pos_child>
			(*curr_menu->function)(curr_menu->name);
     d4e:	12 96       	adiw	r26, 0x02	; 2
     d50:	ed 91       	ld	r30, X+
     d52:	fc 91       	ld	r31, X
     d54:	13 97       	sbiw	r26, 0x03	; 3
     d56:	18 96       	adiw	r26, 0x08	; 8
     d58:	8d 91       	ld	r24, X+
     d5a:	9c 91       	ld	r25, X
     d5c:	19 97       	sbiw	r26, 0x09	; 9
     d5e:	09 95       	icall
     d60:	23 c0       	rjmp	.+70     	; 0xda8 <navigate+0x212>
			
		}
	
		break;
	case RIGHT:
		if(curr_menu->children!= NULL){
     d62:	e0 91 a6 01 	lds	r30, 0x01A6	; 0x8001a6 <__data_end>
     d66:	f0 91 a7 01 	lds	r31, 0x01A7	; 0x8001a7 <__data_end+0x1>
     d6a:	84 81       	ldd	r24, Z+4	; 0x04
     d6c:	95 81       	ldd	r25, Z+5	; 0x05
     d6e:	00 97       	sbiw	r24, 0x00	; 0
     d70:	d9 f0       	breq	.+54     	; 0xda8 <navigate+0x212>
			curr_menu=curr_menu->children[pos_child];
     d72:	e0 91 a8 01 	lds	r30, 0x01A8	; 0x8001a8 <pos_child>
     d76:	f0 91 a9 01 	lds	r31, 0x01A9	; 0x8001a9 <pos_child+0x1>
     d7a:	ee 0f       	add	r30, r30
     d7c:	ff 1f       	adc	r31, r31
     d7e:	e8 0f       	add	r30, r24
     d80:	f9 1f       	adc	r31, r25
     d82:	a0 81       	ld	r26, Z
     d84:	b1 81       	ldd	r27, Z+1	; 0x01
     d86:	b0 93 a7 01 	sts	0x01A7, r27	; 0x8001a7 <__data_end+0x1>
     d8a:	a0 93 a6 01 	sts	0x01A6, r26	; 0x8001a6 <__data_end>
			pos_child=0;
     d8e:	10 92 a9 01 	sts	0x01A9, r1	; 0x8001a9 <pos_child+0x1>
     d92:	10 92 a8 01 	sts	0x01A8, r1	; 0x8001a8 <pos_child>
			(*curr_menu->function)(curr_menu->name);
     d96:	12 96       	adiw	r26, 0x02	; 2
     d98:	ed 91       	ld	r30, X+
     d9a:	fc 91       	ld	r31, X
     d9c:	13 97       	sbiw	r26, 0x03	; 3
     d9e:	18 96       	adiw	r26, 0x08	; 8
     da0:	8d 91       	ld	r24, X+
     da2:	9c 91       	ld	r25, X
     da4:	19 97       	sbiw	r26, 0x09	; 9
     da6:	09 95       	icall
	case NEUTRAL:
	
		break;
	}
		
}
     da8:	df 91       	pop	r29
     daa:	cf 91       	pop	r28
     dac:	08 95       	ret

00000dae <oled_mode>:
	}
	oled_goto_pos(4,0);
	for (int j=0; j<1024; j++){
		ext_oled_data[j] = 0xff;
	}
	oled_mode(PAGE_MODE);
     dae:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
     db2:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
     db6:	90 e2       	ldi	r25, 0x20	; 32
     db8:	90 83       	st	Z, r25
     dba:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
     dbe:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
     dc2:	80 83       	st	Z, r24
     dc4:	08 95       	ret

00000dc6 <oled_goto_page>:
     dc6:	88 30       	cpi	r24, 0x08	; 8
     dc8:	48 f0       	brcs	.+18     	; 0xddc <oled_goto_page+0x16>
     dca:	85 e8       	ldi	r24, 0x85	; 133
     dcc:	91 e0       	ldi	r25, 0x01	; 1
     dce:	9f 93       	push	r25
     dd0:	8f 93       	push	r24
     dd2:	0e 94 7f 0b 	call	0x16fe	; 0x16fe <printf>
     dd6:	0f 90       	pop	r0
     dd8:	0f 90       	pop	r0
     dda:	08 95       	ret
     ddc:	90 eb       	ldi	r25, 0xB0	; 176
     dde:	98 0f       	add	r25, r24
     de0:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
     de4:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
     de8:	90 83       	st	Z, r25
     dea:	90 e0       	ldi	r25, 0x00	; 0
     dec:	90 93 ad 01 	sts	0x01AD, r25	; 0x8001ad <oled_position+0x1>
     df0:	80 93 ac 01 	sts	0x01AC, r24	; 0x8001ac <oled_position>
     df4:	08 95       	ret

00000df6 <oled_goto_col>:
     df6:	88 23       	and	r24, r24
     df8:	4c f4       	brge	.+18     	; 0xe0c <oled_goto_col+0x16>
     dfa:	85 e8       	ldi	r24, 0x85	; 133
     dfc:	91 e0       	ldi	r25, 0x01	; 1
     dfe:	9f 93       	push	r25
     e00:	8f 93       	push	r24
     e02:	0e 94 7f 0b 	call	0x16fe	; 0x16fe <printf>
     e06:	0f 90       	pop	r0
     e08:	0f 90       	pop	r0
     e0a:	08 95       	ret
     e0c:	28 2f       	mov	r18, r24
     e0e:	2f 70       	andi	r18, 0x0F	; 15
     e10:	98 2f       	mov	r25, r24
     e12:	92 95       	swap	r25
     e14:	9f 70       	andi	r25, 0x0F	; 15
     e16:	90 5f       	subi	r25, 0xF0	; 240
     e18:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
     e1c:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
     e20:	90 83       	st	Z, r25
     e22:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
     e26:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
     e2a:	20 83       	st	Z, r18
     e2c:	90 e0       	ldi	r25, 0x00	; 0
     e2e:	90 93 af 01 	sts	0x01AF, r25	; 0x8001af <oled_position+0x3>
     e32:	80 93 ae 01 	sts	0x01AE, r24	; 0x8001ae <oled_position+0x2>
     e36:	08 95       	ret

00000e38 <oled_goto_pos>:
     e38:	cf 93       	push	r28
     e3a:	c6 2f       	mov	r28, r22
     e3c:	0e 94 e3 06 	call	0xdc6	; 0xdc6 <oled_goto_page>
     e40:	8c 2f       	mov	r24, r28
     e42:	0e 94 fb 06 	call	0xdf6	; 0xdf6 <oled_goto_col>
     e46:	cf 91       	pop	r28
     e48:	08 95       	ret

00000e4a <oled_home>:
     e4a:	60 e0       	ldi	r22, 0x00	; 0
     e4c:	80 e0       	ldi	r24, 0x00	; 0
     e4e:	0e 94 1c 07 	call	0xe38	; 0xe38 <oled_goto_pos>
     e52:	08 95       	ret

00000e54 <oled_clear_page>:
     e54:	60 e0       	ldi	r22, 0x00	; 0
     e56:	0e 94 1c 07 	call	0xe38	; 0xe38 <oled_goto_pos>
     e5a:	80 e0       	ldi	r24, 0x00	; 0
     e5c:	90 e0       	ldi	r25, 0x00	; 0
     e5e:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <ext_oled_data>
     e62:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <ext_oled_data+0x1>
     e66:	e8 0f       	add	r30, r24
     e68:	f9 1f       	adc	r31, r25
     e6a:	10 82       	st	Z, r1
     e6c:	01 96       	adiw	r24, 0x01	; 1
     e6e:	80 38       	cpi	r24, 0x80	; 128
     e70:	91 05       	cpc	r25, r1
     e72:	a9 f7       	brne	.-22     	; 0xe5e <oled_clear_page+0xa>
     e74:	08 95       	ret

00000e76 <oled_clear_screen>:
     e76:	60 e0       	ldi	r22, 0x00	; 0
     e78:	80 e0       	ldi	r24, 0x00	; 0
     e7a:	0e 94 1c 07 	call	0xe38	; 0xe38 <oled_goto_pos>
     e7e:	80 e0       	ldi	r24, 0x00	; 0
     e80:	0e 94 d7 06 	call	0xdae	; 0xdae <oled_mode>
     e84:	80 e0       	ldi	r24, 0x00	; 0
     e86:	90 e0       	ldi	r25, 0x00	; 0
     e88:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <ext_oled_data>
     e8c:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <ext_oled_data+0x1>
     e90:	e8 0f       	add	r30, r24
     e92:	f9 1f       	adc	r31, r25
     e94:	10 82       	st	Z, r1
     e96:	01 96       	adiw	r24, 0x01	; 1
     e98:	81 15       	cp	r24, r1
     e9a:	24 e0       	ldi	r18, 0x04	; 4
     e9c:	92 07       	cpc	r25, r18
     e9e:	a1 f7       	brne	.-24     	; 0xe88 <oled_clear_screen+0x12>
     ea0:	60 e0       	ldi	r22, 0x00	; 0
     ea2:	84 e0       	ldi	r24, 0x04	; 4
     ea4:	0e 94 1c 07 	call	0xe38	; 0xe38 <oled_goto_pos>
     ea8:	80 e0       	ldi	r24, 0x00	; 0
     eaa:	90 e0       	ldi	r25, 0x00	; 0
     eac:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <ext_oled_data>
     eb0:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <ext_oled_data+0x1>
     eb4:	e8 0f       	add	r30, r24
     eb6:	f9 1f       	adc	r31, r25
     eb8:	10 82       	st	Z, r1
     eba:	01 96       	adiw	r24, 0x01	; 1
     ebc:	81 15       	cp	r24, r1
     ebe:	24 e0       	ldi	r18, 0x04	; 4
     ec0:	92 07       	cpc	r25, r18
     ec2:	a1 f7       	brne	.-24     	; 0xeac <oled_clear_screen+0x36>
     ec4:	82 e0       	ldi	r24, 0x02	; 2
     ec6:	0e 94 d7 06 	call	0xdae	; 0xdae <oled_mode>
     eca:	08 95       	ret

00000ecc <oled_reset>:
     ecc:	0e 94 25 07 	call	0xe4a	; 0xe4a <oled_home>
     ed0:	0e 94 3b 07 	call	0xe76	; 0xe76 <oled_clear_screen>
     ed4:	82 e0       	ldi	r24, 0x02	; 2
     ed6:	0e 94 d7 06 	call	0xdae	; 0xdae <oled_mode>
     eda:	08 95       	ret

00000edc <oled_write_char>:
}


void oled_write_char(char c, int fs){
	c=c-32;
     edc:	80 52       	subi	r24, 0x20	; 32
	
	switch(fs){
     ede:	66 30       	cpi	r22, 0x06	; 6
     ee0:	71 05       	cpc	r23, r1
     ee2:	09 f4       	brne	.+2      	; 0xee6 <oled_write_char+0xa>
     ee4:	3b c0       	rjmp	.+118    	; 0xf5c <oled_write_char+0x80>
     ee6:	68 30       	cpi	r22, 0x08	; 8
     ee8:	71 05       	cpc	r23, r1
     eea:	29 f0       	breq	.+10     	; 0xef6 <oled_write_char+0x1a>
     eec:	64 30       	cpi	r22, 0x04	; 4
     eee:	71 05       	cpc	r23, r1
     ef0:	09 f0       	breq	.+2      	; 0xef4 <oled_write_char+0x18>
     ef2:	80 c0       	rjmp	.+256    	; 0xff4 <oled_write_char+0x118>
     ef4:	5b c0       	rjmp	.+182    	; 0xfac <oled_write_char+0xd0>
		case 8 :
			for(int i=0; i<fontsize;i++){
     ef6:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <fontsize>
     efa:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <fontsize+0x1>
     efe:	12 16       	cp	r1, r18
     f00:	13 06       	cpc	r1, r19
     f02:	0c f0       	brlt	.+2      	; 0xf06 <oled_write_char+0x2a>
     f04:	77 c0       	rjmp	.+238    	; 0xff4 <oled_write_char+0x118>
     f06:	90 e0       	ldi	r25, 0x00	; 0
     f08:	88 0f       	add	r24, r24
     f0a:	99 1f       	adc	r25, r25
     f0c:	88 0f       	add	r24, r24
     f0e:	99 1f       	adc	r25, r25
     f10:	88 0f       	add	r24, r24
     f12:	99 1f       	adc	r25, r25
     f14:	20 e0       	ldi	r18, 0x00	; 0
     f16:	30 e0       	ldi	r19, 0x00	; 0
				oled_wrd(pgm_read_word(&font8[c][i]));
				oled_position.coloumn++;
     f18:	ac ea       	ldi	r26, 0xAC	; 172
     f1a:	b1 e0       	ldi	r27, 0x01	; 1
	c=c-32;
	
	switch(fs){
		case 8 :
			for(int i=0; i<fontsize;i++){
				oled_wrd(pgm_read_word(&font8[c][i]));
     f1c:	f9 01       	movw	r30, r18
     f1e:	e8 0f       	add	r30, r24
     f20:	f9 1f       	adc	r31, r25
     f22:	ea 5d       	subi	r30, 0xDA	; 218
     f24:	fb 4f       	sbci	r31, 0xFB	; 251
     f26:	45 91       	lpm	r20, Z+
     f28:	54 91       	lpm	r21, Z
void oled_wrc(uint8_t data){
	ext_oled_command[0] = data;
}
//oled write data
void oled_wrd(uint8_t data){
	ext_oled_data[0] = data;
     f2a:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <ext_oled_data>
     f2e:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <ext_oled_data+0x1>
     f32:	40 83       	st	Z, r20
	
	switch(fs){
		case 8 :
			for(int i=0; i<fontsize;i++){
				oled_wrd(pgm_read_word(&font8[c][i]));
				oled_position.coloumn++;
     f34:	12 96       	adiw	r26, 0x02	; 2
     f36:	4d 91       	ld	r20, X+
     f38:	5c 91       	ld	r21, X
     f3a:	13 97       	sbiw	r26, 0x03	; 3
     f3c:	4f 5f       	subi	r20, 0xFF	; 255
     f3e:	5f 4f       	sbci	r21, 0xFF	; 255
     f40:	13 96       	adiw	r26, 0x03	; 3
     f42:	5c 93       	st	X, r21
     f44:	4e 93       	st	-X, r20
     f46:	12 97       	sbiw	r26, 0x02	; 2
void oled_write_char(char c, int fs){
	c=c-32;
	
	switch(fs){
		case 8 :
			for(int i=0; i<fontsize;i++){
     f48:	2f 5f       	subi	r18, 0xFF	; 255
     f4a:	3f 4f       	sbci	r19, 0xFF	; 255
     f4c:	40 91 0a 01 	lds	r20, 0x010A	; 0x80010a <fontsize>
     f50:	50 91 0b 01 	lds	r21, 0x010B	; 0x80010b <fontsize+0x1>
     f54:	24 17       	cp	r18, r20
     f56:	35 07       	cpc	r19, r21
     f58:	0c f3       	brlt	.-62     	; 0xf1c <oled_write_char+0x40>
     f5a:	08 95       	ret
     f5c:	90 e0       	ldi	r25, 0x00	; 0
     f5e:	9c 01       	movw	r18, r24
     f60:	22 0f       	add	r18, r18
     f62:	33 1f       	adc	r19, r19
     f64:	82 0f       	add	r24, r18
     f66:	93 1f       	adc	r25, r19
     f68:	88 0f       	add	r24, r24
     f6a:	99 1f       	adc	r25, r25


void oled_write_char(char c, int fs){
	c=c-32;
	
	switch(fs){
     f6c:	20 e0       	ldi	r18, 0x00	; 0
     f6e:	30 e0       	ldi	r19, 0x00	; 0
			}
			break;
		case 6 :
			for(int i=0; i<6;i++){
				oled_wrd(pgm_read_word(&font6[c][i]));
				oled_position.coloumn++;
     f70:	ac ea       	ldi	r26, 0xAC	; 172
     f72:	b1 e0       	ldi	r27, 0x01	; 1
				oled_position.coloumn++;
			}
			break;
		case 6 :
			for(int i=0; i<6;i++){
				oled_wrd(pgm_read_word(&font6[c][i]));
     f74:	f9 01       	movw	r30, r18
     f76:	e8 0f       	add	r30, r24
     f78:	f9 1f       	adc	r31, r25
     f7a:	e4 51       	subi	r30, 0x14	; 20
     f7c:	fe 4f       	sbci	r31, 0xFE	; 254
     f7e:	45 91       	lpm	r20, Z+
     f80:	54 91       	lpm	r21, Z
void oled_wrc(uint8_t data){
	ext_oled_command[0] = data;
}
//oled write data
void oled_wrd(uint8_t data){
	ext_oled_data[0] = data;
     f82:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <ext_oled_data>
     f86:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <ext_oled_data+0x1>
     f8a:	40 83       	st	Z, r20
			}
			break;
		case 6 :
			for(int i=0; i<6;i++){
				oled_wrd(pgm_read_word(&font6[c][i]));
				oled_position.coloumn++;
     f8c:	12 96       	adiw	r26, 0x02	; 2
     f8e:	4d 91       	ld	r20, X+
     f90:	5c 91       	ld	r21, X
     f92:	13 97       	sbiw	r26, 0x03	; 3
     f94:	4f 5f       	subi	r20, 0xFF	; 255
     f96:	5f 4f       	sbci	r21, 0xFF	; 255
     f98:	13 96       	adiw	r26, 0x03	; 3
     f9a:	5c 93       	st	X, r21
     f9c:	4e 93       	st	-X, r20
     f9e:	12 97       	sbiw	r26, 0x02	; 2
				oled_wrd(pgm_read_word(&font8[c][i]));
				oled_position.coloumn++;
			}
			break;
		case 6 :
			for(int i=0; i<6;i++){
     fa0:	2f 5f       	subi	r18, 0xFF	; 255
     fa2:	3f 4f       	sbci	r19, 0xFF	; 255
     fa4:	26 30       	cpi	r18, 0x06	; 6
     fa6:	31 05       	cpc	r19, r1
     fa8:	29 f7       	brne	.-54     	; 0xf74 <oled_write_char+0x98>
     faa:	08 95       	ret
     fac:	90 e0       	ldi	r25, 0x00	; 0
     fae:	88 0f       	add	r24, r24
     fb0:	99 1f       	adc	r25, r25
     fb2:	88 0f       	add	r24, r24
     fb4:	99 1f       	adc	r25, r25


void oled_write_char(char c, int fs){
	c=c-32;
	
	switch(fs){
     fb6:	20 e0       	ldi	r18, 0x00	; 0
     fb8:	30 e0       	ldi	r19, 0x00	; 0
			}
			break;
		case 4 :
			for(int i=0; i<4;i++){
				oled_wrd(pgm_read_word(&font4[c][i]));
				oled_position.coloumn++;
     fba:	ac ea       	ldi	r26, 0xAC	; 172
     fbc:	b1 e0       	ldi	r27, 0x01	; 1
				oled_position.coloumn++;
			}
			break;
		case 4 :
			for(int i=0; i<4;i++){
				oled_wrd(pgm_read_word(&font4[c][i]));
     fbe:	f9 01       	movw	r30, r18
     fc0:	e8 0f       	add	r30, r24
     fc2:	f9 1f       	adc	r31, r25
     fc4:	e0 59       	subi	r30, 0x90	; 144
     fc6:	ff 4f       	sbci	r31, 0xFF	; 255
     fc8:	45 91       	lpm	r20, Z+
     fca:	54 91       	lpm	r21, Z
void oled_wrc(uint8_t data){
	ext_oled_command[0] = data;
}
//oled write data
void oled_wrd(uint8_t data){
	ext_oled_data[0] = data;
     fcc:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <ext_oled_data>
     fd0:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <ext_oled_data+0x1>
     fd4:	40 83       	st	Z, r20
			}
			break;
		case 4 :
			for(int i=0; i<4;i++){
				oled_wrd(pgm_read_word(&font4[c][i]));
				oled_position.coloumn++;
     fd6:	12 96       	adiw	r26, 0x02	; 2
     fd8:	4d 91       	ld	r20, X+
     fda:	5c 91       	ld	r21, X
     fdc:	13 97       	sbiw	r26, 0x03	; 3
     fde:	4f 5f       	subi	r20, 0xFF	; 255
     fe0:	5f 4f       	sbci	r21, 0xFF	; 255
     fe2:	13 96       	adiw	r26, 0x03	; 3
     fe4:	5c 93       	st	X, r21
     fe6:	4e 93       	st	-X, r20
     fe8:	12 97       	sbiw	r26, 0x02	; 2
				oled_wrd(pgm_read_word(&font6[c][i]));
				oled_position.coloumn++;
			}
			break;
		case 4 :
			for(int i=0; i<4;i++){
     fea:	2f 5f       	subi	r18, 0xFF	; 255
     fec:	3f 4f       	sbci	r19, 0xFF	; 255
     fee:	24 30       	cpi	r18, 0x04	; 4
     ff0:	31 05       	cpc	r19, r1
     ff2:	29 f7       	brne	.-54     	; 0xfbe <oled_write_char+0xe2>
     ff4:	08 95       	ret

00000ff6 <oled_print>:
	
}



void oled_print(char* word, int fs){
     ff6:	cf 92       	push	r12
     ff8:	df 92       	push	r13
     ffa:	ef 92       	push	r14
     ffc:	ff 92       	push	r15
     ffe:	0f 93       	push	r16
    1000:	1f 93       	push	r17
    1002:	cf 93       	push	r28
    1004:	df 93       	push	r29
    1006:	ec 01       	movw	r28, r24
    1008:	7b 01       	movw	r14, r22
    100a:	8c 01       	movw	r16, r24
	for( int i = 0; i < strlen(word); i++){
    100c:	c1 2c       	mov	r12, r1
    100e:	d1 2c       	mov	r13, r1
    1010:	09 c0       	rjmp	.+18     	; 0x1024 <oled_print+0x2e>
		oled_write_char(word[i], fs);
    1012:	b7 01       	movw	r22, r14
    1014:	f8 01       	movw	r30, r16
    1016:	81 91       	ld	r24, Z+
    1018:	8f 01       	movw	r16, r30
    101a:	0e 94 6e 07 	call	0xedc	; 0xedc <oled_write_char>
}



void oled_print(char* word, int fs){
	for( int i = 0; i < strlen(word); i++){
    101e:	ff ef       	ldi	r31, 0xFF	; 255
    1020:	cf 1a       	sub	r12, r31
    1022:	df 0a       	sbc	r13, r31
    1024:	fe 01       	movw	r30, r28
    1026:	01 90       	ld	r0, Z+
    1028:	00 20       	and	r0, r0
    102a:	e9 f7       	brne	.-6      	; 0x1026 <oled_print+0x30>
    102c:	31 97       	sbiw	r30, 0x01	; 1
    102e:	ec 1b       	sub	r30, r28
    1030:	fd 0b       	sbc	r31, r29
    1032:	ce 16       	cp	r12, r30
    1034:	df 06       	cpc	r13, r31
    1036:	68 f3       	brcs	.-38     	; 0x1012 <oled_print+0x1c>
		oled_write_char(word[i], fs);
	}
}
    1038:	df 91       	pop	r29
    103a:	cf 91       	pop	r28
    103c:	1f 91       	pop	r17
    103e:	0f 91       	pop	r16
    1040:	ff 90       	pop	r15
    1042:	ef 90       	pop	r14
    1044:	df 90       	pop	r13
    1046:	cf 90       	pop	r12
    1048:	08 95       	ret

0000104a <oled_center_print>:

void oled_center_print(char* word, int fs){
    104a:	0f 93       	push	r16
    104c:	1f 93       	push	r17
    104e:	cf 93       	push	r28
    1050:	df 93       	push	r29
    1052:	ec 01       	movw	r28, r24
    1054:	8b 01       	movw	r16, r22
	oled_goto_col(63-(strlen(word)*fs/2));
    1056:	fc 01       	movw	r30, r24
    1058:	01 90       	ld	r0, Z+
    105a:	00 20       	and	r0, r0
    105c:	e9 f7       	brne	.-6      	; 0x1058 <oled_center_print+0xe>
    105e:	31 97       	sbiw	r30, 0x01	; 1
    1060:	e8 1b       	sub	r30, r24
    1062:	f9 0b       	sbc	r31, r25
    1064:	6e 9f       	mul	r22, r30
    1066:	90 01       	movw	r18, r0
    1068:	6f 9f       	mul	r22, r31
    106a:	30 0d       	add	r19, r0
    106c:	7e 9f       	mul	r23, r30
    106e:	30 0d       	add	r19, r0
    1070:	11 24       	eor	r1, r1
    1072:	36 95       	lsr	r19
    1074:	27 95       	ror	r18
    1076:	8f e3       	ldi	r24, 0x3F	; 63
    1078:	82 1b       	sub	r24, r18
    107a:	0e 94 fb 06 	call	0xdf6	; 0xdf6 <oled_goto_col>
	oled_print(word, fs);
    107e:	b8 01       	movw	r22, r16
    1080:	ce 01       	movw	r24, r28
    1082:	0e 94 fb 07 	call	0xff6	; 0xff6 <oled_print>
}
    1086:	df 91       	pop	r29
    1088:	cf 91       	pop	r28
    108a:	1f 91       	pop	r17
    108c:	0f 91       	pop	r16
    108e:	08 95       	ret

00001090 <oled_arrow>:

char* oled_arrow(char* name){
    1090:	0f 93       	push	r16
    1092:	1f 93       	push	r17
    1094:	cf 93       	push	r28
    1096:	df 93       	push	r29
    1098:	8c 01       	movw	r16, r24
	char* str = malloc(sizeof(char)*20);
    109a:	84 e1       	ldi	r24, 0x14	; 20
    109c:	90 e0       	ldi	r25, 0x00	; 0
    109e:	0e 94 84 09 	call	0x1308	; 0x1308 <malloc>
    10a2:	ec 01       	movw	r28, r24
	strcpy(str,">");
    10a4:	8e e3       	ldi	r24, 0x3E	; 62
    10a6:	90 e0       	ldi	r25, 0x00	; 0
    10a8:	99 83       	std	Y+1, r25	; 0x01
    10aa:	88 83       	st	Y, r24
	strcat(str,name);
    10ac:	b8 01       	movw	r22, r16
    10ae:	ce 01       	movw	r24, r28
    10b0:	0e 94 74 0b 	call	0x16e8	; 0x16e8 <strcat>
	strcat(str,"<");
    10b4:	fe 01       	movw	r30, r28
    10b6:	01 90       	ld	r0, Z+
    10b8:	00 20       	and	r0, r0
    10ba:	e9 f7       	brne	.-6      	; 0x10b6 <oled_arrow+0x26>
    10bc:	31 97       	sbiw	r30, 0x01	; 1
    10be:	8c e3       	ldi	r24, 0x3C	; 60
    10c0:	90 e0       	ldi	r25, 0x00	; 0
    10c2:	91 83       	std	Z+1, r25	; 0x01
    10c4:	80 83       	st	Z, r24
	return str;
}
    10c6:	ce 01       	movw	r24, r28
    10c8:	df 91       	pop	r29
    10ca:	cf 91       	pop	r28
    10cc:	1f 91       	pop	r17
    10ce:	0f 91       	pop	r16
    10d0:	08 95       	ret

000010d2 <oled_init>:
int fontsize = 8;


//oled write command
void oled_wrc(uint8_t data){
	ext_oled_command[0] = data;
    10d2:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
    10d6:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
    10da:	8e ea       	ldi	r24, 0xAE	; 174
    10dc:	80 83       	st	Z, r24
    10de:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
    10e2:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
    10e6:	81 ea       	ldi	r24, 0xA1	; 161
    10e8:	80 83       	st	Z, r24
    10ea:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
    10ee:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
    10f2:	8a ed       	ldi	r24, 0xDA	; 218
    10f4:	80 83       	st	Z, r24
    10f6:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
    10fa:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
    10fe:	82 e1       	ldi	r24, 0x12	; 18
    1100:	80 83       	st	Z, r24
    1102:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
    1106:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
    110a:	88 ec       	ldi	r24, 0xC8	; 200
    110c:	80 83       	st	Z, r24
    110e:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
    1112:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
    1116:	88 ea       	ldi	r24, 0xA8	; 168
    1118:	80 83       	st	Z, r24
    111a:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
    111e:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
    1122:	8f e3       	ldi	r24, 0x3F	; 63
    1124:	80 83       	st	Z, r24
    1126:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
    112a:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
    112e:	85 ed       	ldi	r24, 0xD5	; 213
    1130:	80 83       	st	Z, r24
    1132:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
    1136:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
    113a:	80 e8       	ldi	r24, 0x80	; 128
    113c:	80 83       	st	Z, r24
    113e:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
    1142:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
    1146:	81 e8       	ldi	r24, 0x81	; 129
    1148:	80 83       	st	Z, r24
    114a:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
    114e:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
    1152:	80 e5       	ldi	r24, 0x50	; 80
    1154:	80 83       	st	Z, r24
    1156:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
    115a:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
    115e:	89 ed       	ldi	r24, 0xD9	; 217
    1160:	80 83       	st	Z, r24
    1162:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
    1166:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
    116a:	81 e2       	ldi	r24, 0x21	; 33
    116c:	80 83       	st	Z, r24
    116e:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
    1172:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
    1176:	80 e2       	ldi	r24, 0x20	; 32
    1178:	80 83       	st	Z, r24
    117a:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
    117e:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
    1182:	82 e0       	ldi	r24, 0x02	; 2
    1184:	80 83       	st	Z, r24
    1186:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
    118a:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
    118e:	8b ed       	ldi	r24, 0xDB	; 219
    1190:	80 83       	st	Z, r24
    1192:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
    1196:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
    119a:	80 e3       	ldi	r24, 0x30	; 48
    119c:	80 83       	st	Z, r24
    119e:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
    11a2:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
    11a6:	8d ea       	ldi	r24, 0xAD	; 173
    11a8:	80 83       	st	Z, r24
    11aa:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
    11ae:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
    11b2:	10 82       	st	Z, r1
    11b4:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
    11b8:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
    11bc:	84 ea       	ldi	r24, 0xA4	; 164
    11be:	80 83       	st	Z, r24
    11c0:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
    11c4:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
    11c8:	86 ea       	ldi	r24, 0xA6	; 166
    11ca:	80 83       	st	Z, r24
    11cc:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
    11d0:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
    11d4:	8f ea       	ldi	r24, 0xAF	; 175
    11d6:	80 83       	st	Z, r24
	      oled_wrc(0xad);        //master configuration
	      oled_wrc(0x00);
	      oled_wrc(0xa4);        //out follows RAM content
	      oled_wrc(0xa6);        //set normal display
	      oled_wrc(0xaf);        // display on
		  oled_clear_screen();
    11d8:	0e 94 3b 07 	call	0xe76	; 0xe76 <oled_clear_screen>
		  oled_goto_pos(0,0);
    11dc:	60 e0       	ldi	r22, 0x00	; 0
    11de:	80 e0       	ldi	r24, 0x00	; 0
    11e0:	0e 94 1c 07 	call	0xe38	; 0xe38 <oled_goto_pos>
    11e4:	08 95       	ret

000011e6 <xmem_init>:
#include <avr/io.h>
#include "DRIVER_XMEM.h"

//Init function
void xmem_init(void){
	MCUCR |= (1 << SRE); //enable XMEM
    11e6:	85 b7       	in	r24, 0x35	; 53
    11e8:	80 68       	ori	r24, 0x80	; 128
    11ea:	85 bf       	out	0x35, r24	; 53
	SFIOR |= (1 << XMM2); //Mask unused bits/pins, which is PC4-PC7
    11ec:	80 b7       	in	r24, 0x30	; 48
    11ee:	80 62       	ori	r24, 0x20	; 32
    11f0:	80 bf       	out	0x30, r24	; 48
    11f2:	08 95       	ret

000011f4 <xmem_write>:
}
//Write function. //Somehow works badly when calling this function from main? Works perfectly by just copy-pasting code to main.
void xmem_write(uint8_t data, uint16_t addr){
	volatile char *ext_mem = (char *) 0x1000;
	ext_mem[addr] = data;
    11f4:	fb 01       	movw	r30, r22
    11f6:	f0 5f       	subi	r31, 0xF0	; 240
    11f8:	80 83       	st	Z, r24
    11fa:	08 95       	ret

000011fc <xmem_read>:
}

//Read function
uint8_t xmem_read(uint16_t addr){
	volatile char *ext_mem = (char *) 0x1000;
	uint8_t ret_val = ext_mem[addr];
    11fc:	90 5f       	subi	r25, 0xF0	; 240
    11fe:	fc 01       	movw	r30, r24
    1200:	80 81       	ld	r24, Z
	return ret_val;
}
    1202:	08 95       	ret

00001204 <main>:
#include "DRIVER_MENU.h"
#define MYUBRR FOSC/16/BAUD-1 //UART Baud Rate Register

int main(void){
	
	xmem_init();
    1204:	0e 94 f3 08 	call	0x11e6	; 0x11e6 <xmem_init>
	oled_init();
    1208:	0e 94 69 08 	call	0x10d2	; 0x10d2 <oled_init>
	menu_init();
    120c:	0e 94 3a 05 	call	0xa74	; 0xa74 <menu_init>
	adc_init();
    1210:	0e 94 c5 03 	call	0x78a	; 0x78a <adc_init>
	joystick_calibrate();
    1214:	0e 94 e1 03 	call	0x7c2	; 0x7c2 <joystick_calibrate>
	
	while(1){
		navigate();
    1218:	0e 94 cb 05 	call	0xb96	; 0xb96 <navigate>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    121c:	2f ef       	ldi	r18, 0xFF	; 255
    121e:	87 ee       	ldi	r24, 0xE7	; 231
    1220:	93 e0       	ldi	r25, 0x03	; 3
    1222:	21 50       	subi	r18, 0x01	; 1
    1224:	80 40       	sbci	r24, 0x00	; 0
    1226:	90 40       	sbci	r25, 0x00	; 0
    1228:	e1 f7       	brne	.-8      	; 0x1222 <main+0x1e>
    122a:	00 c0       	rjmp	.+0      	; 0x122c <main+0x28>
    122c:	00 00       	nop
    122e:	f4 cf       	rjmp	.-24     	; 0x1218 <main+0x14>

00001230 <util_sort>:
	t=*p;
	*p=*q;
	*q=t;
}

void util_sort(int a[],int n) {
    1230:	cf 93       	push	r28
    1232:	df 93       	push	r29
	int i,j,temp;

	for(i = 0;i < n-1;i++) {
    1234:	eb 01       	movw	r28, r22
    1236:	21 97       	sbiw	r28, 0x01	; 1
    1238:	1c 16       	cp	r1, r28
    123a:	1d 06       	cpc	r1, r29
    123c:	14 f5       	brge	.+68     	; 0x1282 <util_sort+0x52>
    123e:	61 50       	subi	r22, 0x01	; 1
    1240:	70 48       	sbci	r23, 0x80	; 128
    1242:	66 0f       	add	r22, r22
    1244:	77 1f       	adc	r23, r23
    1246:	68 0f       	add	r22, r24
    1248:	79 1f       	adc	r23, r25
    124a:	17 c0       	rjmp	.+46     	; 0x127a <util_sort+0x4a>
		for(j = 0;j < n-i-1;j++) {
    124c:	fc 01       	movw	r30, r24
			if(a[j] > a[j+1])
    124e:	21 91       	ld	r18, Z+
    1250:	31 91       	ld	r19, Z+
    1252:	40 81       	ld	r20, Z
    1254:	51 81       	ldd	r21, Z+1	; 0x01
    1256:	42 17       	cp	r20, r18
    1258:	53 07       	cpc	r21, r19
    125a:	34 f4       	brge	.+12     	; 0x1268 <util_sort+0x38>
#include "util.h"

void util_swap(int *p,int *q) {
	int t;
	t=*p;
	*p=*q;
    125c:	df 01       	movw	r26, r30
    125e:	12 97       	sbiw	r26, 0x02	; 2
    1260:	4d 93       	st	X+, r20
    1262:	5c 93       	st	X, r21
	*q=t;
    1264:	31 83       	std	Z+1, r19	; 0x01
    1266:	20 83       	st	Z, r18

void util_sort(int a[],int n) {
	int i,j,temp;

	for(i = 0;i < n-1;i++) {
		for(j = 0;j < n-i-1;j++) {
    1268:	e6 17       	cp	r30, r22
    126a:	f7 07       	cpc	r31, r23
    126c:	81 f7       	brne	.-32     	; 0x124e <util_sort+0x1e>
    126e:	21 97       	sbiw	r28, 0x01	; 1
    1270:	62 50       	subi	r22, 0x02	; 2
    1272:	71 09       	sbc	r23, r1
}

void util_sort(int a[],int n) {
	int i,j,temp;

	for(i = 0;i < n-1;i++) {
    1274:	68 17       	cp	r22, r24
    1276:	79 07       	cpc	r23, r25
    1278:	21 f0       	breq	.+8      	; 0x1282 <util_sort+0x52>
		for(j = 0;j < n-i-1;j++) {
    127a:	1c 16       	cp	r1, r28
    127c:	1d 06       	cpc	r1, r29
    127e:	34 f3       	brlt	.-52     	; 0x124c <util_sort+0x1c>
    1280:	f6 cf       	rjmp	.-20     	; 0x126e <util_sort+0x3e>
			if(a[j] > a[j+1])
			util_swap(&a[j],&a[j+1]);
		}
	}
}
    1282:	df 91       	pop	r29
    1284:	cf 91       	pop	r28
    1286:	08 95       	ret

00001288 <util_median>:
int util_median(int a[], int n){
    1288:	0f 93       	push	r16
    128a:	1f 93       	push	r17
    128c:	cf 93       	push	r28
    128e:	df 93       	push	r29
    1290:	8c 01       	movw	r16, r24
    1292:	eb 01       	movw	r28, r22
	util_sort(a,n);
    1294:	0e 94 18 09 	call	0x1230	; 0x1230 <util_sort>
	n=((n+1)/2)-1;
    1298:	21 96       	adiw	r28, 0x01	; 1
    129a:	ce 01       	movw	r24, r28
    129c:	0a f4       	brpl	.+2      	; 0x12a0 <util_median+0x18>
    129e:	01 96       	adiw	r24, 0x01	; 1
	return a[n];
    12a0:	fc 01       	movw	r30, r24
    12a2:	ee 7f       	andi	r30, 0xFE	; 254
    12a4:	32 97       	sbiw	r30, 0x02	; 2
    12a6:	e0 0f       	add	r30, r16
    12a8:	f1 1f       	adc	r31, r17
    12aa:	80 81       	ld	r24, Z
    12ac:	91 81       	ldd	r25, Z+1	; 0x01
    12ae:	df 91       	pop	r29
    12b0:	cf 91       	pop	r28
    12b2:	1f 91       	pop	r17
    12b4:	0f 91       	pop	r16
    12b6:	08 95       	ret

000012b8 <__divmodhi4>:
    12b8:	97 fb       	bst	r25, 7
    12ba:	07 2e       	mov	r0, r23
    12bc:	16 f4       	brtc	.+4      	; 0x12c2 <__divmodhi4+0xa>
    12be:	00 94       	com	r0
    12c0:	07 d0       	rcall	.+14     	; 0x12d0 <__divmodhi4_neg1>
    12c2:	77 fd       	sbrc	r23, 7
    12c4:	09 d0       	rcall	.+18     	; 0x12d8 <__divmodhi4_neg2>
    12c6:	0e 94 70 09 	call	0x12e0	; 0x12e0 <__udivmodhi4>
    12ca:	07 fc       	sbrc	r0, 7
    12cc:	05 d0       	rcall	.+10     	; 0x12d8 <__divmodhi4_neg2>
    12ce:	3e f4       	brtc	.+14     	; 0x12de <__divmodhi4_exit>

000012d0 <__divmodhi4_neg1>:
    12d0:	90 95       	com	r25
    12d2:	81 95       	neg	r24
    12d4:	9f 4f       	sbci	r25, 0xFF	; 255
    12d6:	08 95       	ret

000012d8 <__divmodhi4_neg2>:
    12d8:	70 95       	com	r23
    12da:	61 95       	neg	r22
    12dc:	7f 4f       	sbci	r23, 0xFF	; 255

000012de <__divmodhi4_exit>:
    12de:	08 95       	ret

000012e0 <__udivmodhi4>:
    12e0:	aa 1b       	sub	r26, r26
    12e2:	bb 1b       	sub	r27, r27
    12e4:	51 e1       	ldi	r21, 0x11	; 17
    12e6:	07 c0       	rjmp	.+14     	; 0x12f6 <__udivmodhi4_ep>

000012e8 <__udivmodhi4_loop>:
    12e8:	aa 1f       	adc	r26, r26
    12ea:	bb 1f       	adc	r27, r27
    12ec:	a6 17       	cp	r26, r22
    12ee:	b7 07       	cpc	r27, r23
    12f0:	10 f0       	brcs	.+4      	; 0x12f6 <__udivmodhi4_ep>
    12f2:	a6 1b       	sub	r26, r22
    12f4:	b7 0b       	sbc	r27, r23

000012f6 <__udivmodhi4_ep>:
    12f6:	88 1f       	adc	r24, r24
    12f8:	99 1f       	adc	r25, r25
    12fa:	5a 95       	dec	r21
    12fc:	a9 f7       	brne	.-22     	; 0x12e8 <__udivmodhi4_loop>
    12fe:	80 95       	com	r24
    1300:	90 95       	com	r25
    1302:	bc 01       	movw	r22, r24
    1304:	cd 01       	movw	r24, r26
    1306:	08 95       	ret

00001308 <malloc>:
    1308:	0f 93       	push	r16
    130a:	1f 93       	push	r17
    130c:	cf 93       	push	r28
    130e:	df 93       	push	r29
    1310:	82 30       	cpi	r24, 0x02	; 2
    1312:	91 05       	cpc	r25, r1
    1314:	10 f4       	brcc	.+4      	; 0x131a <malloc+0x12>
    1316:	82 e0       	ldi	r24, 0x02	; 2
    1318:	90 e0       	ldi	r25, 0x00	; 0
    131a:	e0 91 b2 01 	lds	r30, 0x01B2	; 0x8001b2 <__flp>
    131e:	f0 91 b3 01 	lds	r31, 0x01B3	; 0x8001b3 <__flp+0x1>
    1322:	20 e0       	ldi	r18, 0x00	; 0
    1324:	30 e0       	ldi	r19, 0x00	; 0
    1326:	a0 e0       	ldi	r26, 0x00	; 0
    1328:	b0 e0       	ldi	r27, 0x00	; 0
    132a:	30 97       	sbiw	r30, 0x00	; 0
    132c:	19 f1       	breq	.+70     	; 0x1374 <malloc+0x6c>
    132e:	40 81       	ld	r20, Z
    1330:	51 81       	ldd	r21, Z+1	; 0x01
    1332:	02 81       	ldd	r16, Z+2	; 0x02
    1334:	13 81       	ldd	r17, Z+3	; 0x03
    1336:	48 17       	cp	r20, r24
    1338:	59 07       	cpc	r21, r25
    133a:	c8 f0       	brcs	.+50     	; 0x136e <malloc+0x66>
    133c:	84 17       	cp	r24, r20
    133e:	95 07       	cpc	r25, r21
    1340:	69 f4       	brne	.+26     	; 0x135c <malloc+0x54>
    1342:	10 97       	sbiw	r26, 0x00	; 0
    1344:	31 f0       	breq	.+12     	; 0x1352 <malloc+0x4a>
    1346:	12 96       	adiw	r26, 0x02	; 2
    1348:	0c 93       	st	X, r16
    134a:	12 97       	sbiw	r26, 0x02	; 2
    134c:	13 96       	adiw	r26, 0x03	; 3
    134e:	1c 93       	st	X, r17
    1350:	27 c0       	rjmp	.+78     	; 0x13a0 <malloc+0x98>
    1352:	00 93 b2 01 	sts	0x01B2, r16	; 0x8001b2 <__flp>
    1356:	10 93 b3 01 	sts	0x01B3, r17	; 0x8001b3 <__flp+0x1>
    135a:	22 c0       	rjmp	.+68     	; 0x13a0 <malloc+0x98>
    135c:	21 15       	cp	r18, r1
    135e:	31 05       	cpc	r19, r1
    1360:	19 f0       	breq	.+6      	; 0x1368 <malloc+0x60>
    1362:	42 17       	cp	r20, r18
    1364:	53 07       	cpc	r21, r19
    1366:	18 f4       	brcc	.+6      	; 0x136e <malloc+0x66>
    1368:	9a 01       	movw	r18, r20
    136a:	bd 01       	movw	r22, r26
    136c:	ef 01       	movw	r28, r30
    136e:	df 01       	movw	r26, r30
    1370:	f8 01       	movw	r30, r16
    1372:	db cf       	rjmp	.-74     	; 0x132a <malloc+0x22>
    1374:	21 15       	cp	r18, r1
    1376:	31 05       	cpc	r19, r1
    1378:	f9 f0       	breq	.+62     	; 0x13b8 <malloc+0xb0>
    137a:	28 1b       	sub	r18, r24
    137c:	39 0b       	sbc	r19, r25
    137e:	24 30       	cpi	r18, 0x04	; 4
    1380:	31 05       	cpc	r19, r1
    1382:	80 f4       	brcc	.+32     	; 0x13a4 <malloc+0x9c>
    1384:	8a 81       	ldd	r24, Y+2	; 0x02
    1386:	9b 81       	ldd	r25, Y+3	; 0x03
    1388:	61 15       	cp	r22, r1
    138a:	71 05       	cpc	r23, r1
    138c:	21 f0       	breq	.+8      	; 0x1396 <malloc+0x8e>
    138e:	fb 01       	movw	r30, r22
    1390:	93 83       	std	Z+3, r25	; 0x03
    1392:	82 83       	std	Z+2, r24	; 0x02
    1394:	04 c0       	rjmp	.+8      	; 0x139e <malloc+0x96>
    1396:	90 93 b3 01 	sts	0x01B3, r25	; 0x8001b3 <__flp+0x1>
    139a:	80 93 b2 01 	sts	0x01B2, r24	; 0x8001b2 <__flp>
    139e:	fe 01       	movw	r30, r28
    13a0:	32 96       	adiw	r30, 0x02	; 2
    13a2:	44 c0       	rjmp	.+136    	; 0x142c <malloc+0x124>
    13a4:	fe 01       	movw	r30, r28
    13a6:	e2 0f       	add	r30, r18
    13a8:	f3 1f       	adc	r31, r19
    13aa:	81 93       	st	Z+, r24
    13ac:	91 93       	st	Z+, r25
    13ae:	22 50       	subi	r18, 0x02	; 2
    13b0:	31 09       	sbc	r19, r1
    13b2:	39 83       	std	Y+1, r19	; 0x01
    13b4:	28 83       	st	Y, r18
    13b6:	3a c0       	rjmp	.+116    	; 0x142c <malloc+0x124>
    13b8:	20 91 b0 01 	lds	r18, 0x01B0	; 0x8001b0 <__brkval>
    13bc:	30 91 b1 01 	lds	r19, 0x01B1	; 0x8001b1 <__brkval+0x1>
    13c0:	23 2b       	or	r18, r19
    13c2:	41 f4       	brne	.+16     	; 0x13d4 <malloc+0xcc>
    13c4:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
    13c8:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
    13cc:	30 93 b1 01 	sts	0x01B1, r19	; 0x8001b1 <__brkval+0x1>
    13d0:	20 93 b0 01 	sts	0x01B0, r18	; 0x8001b0 <__brkval>
    13d4:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
    13d8:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
    13dc:	21 15       	cp	r18, r1
    13de:	31 05       	cpc	r19, r1
    13e0:	41 f4       	brne	.+16     	; 0x13f2 <malloc+0xea>
    13e2:	2d b7       	in	r18, 0x3d	; 61
    13e4:	3e b7       	in	r19, 0x3e	; 62
    13e6:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    13ea:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    13ee:	24 1b       	sub	r18, r20
    13f0:	35 0b       	sbc	r19, r21
    13f2:	e0 91 b0 01 	lds	r30, 0x01B0	; 0x8001b0 <__brkval>
    13f6:	f0 91 b1 01 	lds	r31, 0x01B1	; 0x8001b1 <__brkval+0x1>
    13fa:	e2 17       	cp	r30, r18
    13fc:	f3 07       	cpc	r31, r19
    13fe:	a0 f4       	brcc	.+40     	; 0x1428 <malloc+0x120>
    1400:	2e 1b       	sub	r18, r30
    1402:	3f 0b       	sbc	r19, r31
    1404:	28 17       	cp	r18, r24
    1406:	39 07       	cpc	r19, r25
    1408:	78 f0       	brcs	.+30     	; 0x1428 <malloc+0x120>
    140a:	ac 01       	movw	r20, r24
    140c:	4e 5f       	subi	r20, 0xFE	; 254
    140e:	5f 4f       	sbci	r21, 0xFF	; 255
    1410:	24 17       	cp	r18, r20
    1412:	35 07       	cpc	r19, r21
    1414:	48 f0       	brcs	.+18     	; 0x1428 <malloc+0x120>
    1416:	4e 0f       	add	r20, r30
    1418:	5f 1f       	adc	r21, r31
    141a:	50 93 b1 01 	sts	0x01B1, r21	; 0x8001b1 <__brkval+0x1>
    141e:	40 93 b0 01 	sts	0x01B0, r20	; 0x8001b0 <__brkval>
    1422:	81 93       	st	Z+, r24
    1424:	91 93       	st	Z+, r25
    1426:	02 c0       	rjmp	.+4      	; 0x142c <malloc+0x124>
    1428:	e0 e0       	ldi	r30, 0x00	; 0
    142a:	f0 e0       	ldi	r31, 0x00	; 0
    142c:	cf 01       	movw	r24, r30
    142e:	df 91       	pop	r29
    1430:	cf 91       	pop	r28
    1432:	1f 91       	pop	r17
    1434:	0f 91       	pop	r16
    1436:	08 95       	ret

00001438 <free>:
    1438:	cf 93       	push	r28
    143a:	df 93       	push	r29
    143c:	00 97       	sbiw	r24, 0x00	; 0
    143e:	09 f4       	brne	.+2      	; 0x1442 <free+0xa>
    1440:	81 c0       	rjmp	.+258    	; 0x1544 <free+0x10c>
    1442:	fc 01       	movw	r30, r24
    1444:	32 97       	sbiw	r30, 0x02	; 2
    1446:	13 82       	std	Z+3, r1	; 0x03
    1448:	12 82       	std	Z+2, r1	; 0x02
    144a:	a0 91 b2 01 	lds	r26, 0x01B2	; 0x8001b2 <__flp>
    144e:	b0 91 b3 01 	lds	r27, 0x01B3	; 0x8001b3 <__flp+0x1>
    1452:	10 97       	sbiw	r26, 0x00	; 0
    1454:	81 f4       	brne	.+32     	; 0x1476 <free+0x3e>
    1456:	20 81       	ld	r18, Z
    1458:	31 81       	ldd	r19, Z+1	; 0x01
    145a:	82 0f       	add	r24, r18
    145c:	93 1f       	adc	r25, r19
    145e:	20 91 b0 01 	lds	r18, 0x01B0	; 0x8001b0 <__brkval>
    1462:	30 91 b1 01 	lds	r19, 0x01B1	; 0x8001b1 <__brkval+0x1>
    1466:	28 17       	cp	r18, r24
    1468:	39 07       	cpc	r19, r25
    146a:	51 f5       	brne	.+84     	; 0x14c0 <free+0x88>
    146c:	f0 93 b1 01 	sts	0x01B1, r31	; 0x8001b1 <__brkval+0x1>
    1470:	e0 93 b0 01 	sts	0x01B0, r30	; 0x8001b0 <__brkval>
    1474:	67 c0       	rjmp	.+206    	; 0x1544 <free+0x10c>
    1476:	ed 01       	movw	r28, r26
    1478:	20 e0       	ldi	r18, 0x00	; 0
    147a:	30 e0       	ldi	r19, 0x00	; 0
    147c:	ce 17       	cp	r28, r30
    147e:	df 07       	cpc	r29, r31
    1480:	40 f4       	brcc	.+16     	; 0x1492 <free+0x5a>
    1482:	4a 81       	ldd	r20, Y+2	; 0x02
    1484:	5b 81       	ldd	r21, Y+3	; 0x03
    1486:	9e 01       	movw	r18, r28
    1488:	41 15       	cp	r20, r1
    148a:	51 05       	cpc	r21, r1
    148c:	f1 f0       	breq	.+60     	; 0x14ca <free+0x92>
    148e:	ea 01       	movw	r28, r20
    1490:	f5 cf       	rjmp	.-22     	; 0x147c <free+0x44>
    1492:	d3 83       	std	Z+3, r29	; 0x03
    1494:	c2 83       	std	Z+2, r28	; 0x02
    1496:	40 81       	ld	r20, Z
    1498:	51 81       	ldd	r21, Z+1	; 0x01
    149a:	84 0f       	add	r24, r20
    149c:	95 1f       	adc	r25, r21
    149e:	c8 17       	cp	r28, r24
    14a0:	d9 07       	cpc	r29, r25
    14a2:	59 f4       	brne	.+22     	; 0x14ba <free+0x82>
    14a4:	88 81       	ld	r24, Y
    14a6:	99 81       	ldd	r25, Y+1	; 0x01
    14a8:	84 0f       	add	r24, r20
    14aa:	95 1f       	adc	r25, r21
    14ac:	02 96       	adiw	r24, 0x02	; 2
    14ae:	91 83       	std	Z+1, r25	; 0x01
    14b0:	80 83       	st	Z, r24
    14b2:	8a 81       	ldd	r24, Y+2	; 0x02
    14b4:	9b 81       	ldd	r25, Y+3	; 0x03
    14b6:	93 83       	std	Z+3, r25	; 0x03
    14b8:	82 83       	std	Z+2, r24	; 0x02
    14ba:	21 15       	cp	r18, r1
    14bc:	31 05       	cpc	r19, r1
    14be:	29 f4       	brne	.+10     	; 0x14ca <free+0x92>
    14c0:	f0 93 b3 01 	sts	0x01B3, r31	; 0x8001b3 <__flp+0x1>
    14c4:	e0 93 b2 01 	sts	0x01B2, r30	; 0x8001b2 <__flp>
    14c8:	3d c0       	rjmp	.+122    	; 0x1544 <free+0x10c>
    14ca:	e9 01       	movw	r28, r18
    14cc:	fb 83       	std	Y+3, r31	; 0x03
    14ce:	ea 83       	std	Y+2, r30	; 0x02
    14d0:	49 91       	ld	r20, Y+
    14d2:	59 91       	ld	r21, Y+
    14d4:	c4 0f       	add	r28, r20
    14d6:	d5 1f       	adc	r29, r21
    14d8:	ec 17       	cp	r30, r28
    14da:	fd 07       	cpc	r31, r29
    14dc:	61 f4       	brne	.+24     	; 0x14f6 <free+0xbe>
    14de:	80 81       	ld	r24, Z
    14e0:	91 81       	ldd	r25, Z+1	; 0x01
    14e2:	84 0f       	add	r24, r20
    14e4:	95 1f       	adc	r25, r21
    14e6:	02 96       	adiw	r24, 0x02	; 2
    14e8:	e9 01       	movw	r28, r18
    14ea:	99 83       	std	Y+1, r25	; 0x01
    14ec:	88 83       	st	Y, r24
    14ee:	82 81       	ldd	r24, Z+2	; 0x02
    14f0:	93 81       	ldd	r25, Z+3	; 0x03
    14f2:	9b 83       	std	Y+3, r25	; 0x03
    14f4:	8a 83       	std	Y+2, r24	; 0x02
    14f6:	e0 e0       	ldi	r30, 0x00	; 0
    14f8:	f0 e0       	ldi	r31, 0x00	; 0
    14fa:	12 96       	adiw	r26, 0x02	; 2
    14fc:	8d 91       	ld	r24, X+
    14fe:	9c 91       	ld	r25, X
    1500:	13 97       	sbiw	r26, 0x03	; 3
    1502:	00 97       	sbiw	r24, 0x00	; 0
    1504:	19 f0       	breq	.+6      	; 0x150c <free+0xd4>
    1506:	fd 01       	movw	r30, r26
    1508:	dc 01       	movw	r26, r24
    150a:	f7 cf       	rjmp	.-18     	; 0x14fa <free+0xc2>
    150c:	8d 91       	ld	r24, X+
    150e:	9c 91       	ld	r25, X
    1510:	11 97       	sbiw	r26, 0x01	; 1
    1512:	9d 01       	movw	r18, r26
    1514:	2e 5f       	subi	r18, 0xFE	; 254
    1516:	3f 4f       	sbci	r19, 0xFF	; 255
    1518:	82 0f       	add	r24, r18
    151a:	93 1f       	adc	r25, r19
    151c:	20 91 b0 01 	lds	r18, 0x01B0	; 0x8001b0 <__brkval>
    1520:	30 91 b1 01 	lds	r19, 0x01B1	; 0x8001b1 <__brkval+0x1>
    1524:	28 17       	cp	r18, r24
    1526:	39 07       	cpc	r19, r25
    1528:	69 f4       	brne	.+26     	; 0x1544 <free+0x10c>
    152a:	30 97       	sbiw	r30, 0x00	; 0
    152c:	29 f4       	brne	.+10     	; 0x1538 <free+0x100>
    152e:	10 92 b3 01 	sts	0x01B3, r1	; 0x8001b3 <__flp+0x1>
    1532:	10 92 b2 01 	sts	0x01B2, r1	; 0x8001b2 <__flp>
    1536:	02 c0       	rjmp	.+4      	; 0x153c <free+0x104>
    1538:	13 82       	std	Z+3, r1	; 0x03
    153a:	12 82       	std	Z+2, r1	; 0x02
    153c:	b0 93 b1 01 	sts	0x01B1, r27	; 0x8001b1 <__brkval+0x1>
    1540:	a0 93 b0 01 	sts	0x01B0, r26	; 0x8001b0 <__brkval>
    1544:	df 91       	pop	r29
    1546:	cf 91       	pop	r28
    1548:	08 95       	ret

0000154a <realloc>:
    154a:	a0 e0       	ldi	r26, 0x00	; 0
    154c:	b0 e0       	ldi	r27, 0x00	; 0
    154e:	eb ea       	ldi	r30, 0xAB	; 171
    1550:	fa e0       	ldi	r31, 0x0A	; 10
    1552:	0c 94 2a 0e 	jmp	0x1c54	; 0x1c54 <__prologue_saves__+0x8>
    1556:	ec 01       	movw	r28, r24
    1558:	00 97       	sbiw	r24, 0x00	; 0
    155a:	21 f4       	brne	.+8      	; 0x1564 <realloc+0x1a>
    155c:	cb 01       	movw	r24, r22
    155e:	0e 94 84 09 	call	0x1308	; 0x1308 <malloc>
    1562:	b4 c0       	rjmp	.+360    	; 0x16cc <realloc+0x182>
    1564:	fc 01       	movw	r30, r24
    1566:	e6 0f       	add	r30, r22
    1568:	f7 1f       	adc	r31, r23
    156a:	9c 01       	movw	r18, r24
    156c:	22 50       	subi	r18, 0x02	; 2
    156e:	31 09       	sbc	r19, r1
    1570:	e2 17       	cp	r30, r18
    1572:	f3 07       	cpc	r31, r19
    1574:	08 f4       	brcc	.+2      	; 0x1578 <realloc+0x2e>
    1576:	a8 c0       	rjmp	.+336    	; 0x16c8 <realloc+0x17e>
    1578:	d9 01       	movw	r26, r18
    157a:	0d 91       	ld	r16, X+
    157c:	1c 91       	ld	r17, X
    157e:	11 97       	sbiw	r26, 0x01	; 1
    1580:	06 17       	cp	r16, r22
    1582:	17 07       	cpc	r17, r23
    1584:	b0 f0       	brcs	.+44     	; 0x15b2 <realloc+0x68>
    1586:	05 30       	cpi	r16, 0x05	; 5
    1588:	11 05       	cpc	r17, r1
    158a:	08 f4       	brcc	.+2      	; 0x158e <realloc+0x44>
    158c:	9b c0       	rjmp	.+310    	; 0x16c4 <realloc+0x17a>
    158e:	c8 01       	movw	r24, r16
    1590:	04 97       	sbiw	r24, 0x04	; 4
    1592:	86 17       	cp	r24, r22
    1594:	97 07       	cpc	r25, r23
    1596:	08 f4       	brcc	.+2      	; 0x159a <realloc+0x50>
    1598:	95 c0       	rjmp	.+298    	; 0x16c4 <realloc+0x17a>
    159a:	02 50       	subi	r16, 0x02	; 2
    159c:	11 09       	sbc	r17, r1
    159e:	06 1b       	sub	r16, r22
    15a0:	17 0b       	sbc	r17, r23
    15a2:	01 93       	st	Z+, r16
    15a4:	11 93       	st	Z+, r17
    15a6:	6d 93       	st	X+, r22
    15a8:	7c 93       	st	X, r23
    15aa:	cf 01       	movw	r24, r30
    15ac:	0e 94 1c 0a 	call	0x1438	; 0x1438 <free>
    15b0:	89 c0       	rjmp	.+274    	; 0x16c4 <realloc+0x17a>
    15b2:	5b 01       	movw	r10, r22
    15b4:	a0 1a       	sub	r10, r16
    15b6:	b1 0a       	sbc	r11, r17
    15b8:	4c 01       	movw	r8, r24
    15ba:	80 0e       	add	r8, r16
    15bc:	91 1e       	adc	r9, r17
    15be:	a0 91 b2 01 	lds	r26, 0x01B2	; 0x8001b2 <__flp>
    15c2:	b0 91 b3 01 	lds	r27, 0x01B3	; 0x8001b3 <__flp+0x1>
    15c6:	61 2c       	mov	r6, r1
    15c8:	71 2c       	mov	r7, r1
    15ca:	e1 2c       	mov	r14, r1
    15cc:	f1 2c       	mov	r15, r1
    15ce:	10 97       	sbiw	r26, 0x00	; 0
    15d0:	09 f4       	brne	.+2      	; 0x15d4 <realloc+0x8a>
    15d2:	46 c0       	rjmp	.+140    	; 0x1660 <realloc+0x116>
    15d4:	8d 91       	ld	r24, X+
    15d6:	9c 91       	ld	r25, X
    15d8:	11 97       	sbiw	r26, 0x01	; 1
    15da:	a8 15       	cp	r26, r8
    15dc:	b9 05       	cpc	r27, r9
    15de:	b1 f5       	brne	.+108    	; 0x164c <realloc+0x102>
    15e0:	6c 01       	movw	r12, r24
    15e2:	42 e0       	ldi	r20, 0x02	; 2
    15e4:	c4 0e       	add	r12, r20
    15e6:	d1 1c       	adc	r13, r1
    15e8:	ca 14       	cp	r12, r10
    15ea:	db 04       	cpc	r13, r11
    15ec:	78 f1       	brcs	.+94     	; 0x164c <realloc+0x102>
    15ee:	4c 01       	movw	r8, r24
    15f0:	8a 18       	sub	r8, r10
    15f2:	9b 08       	sbc	r9, r11
    15f4:	64 01       	movw	r12, r8
    15f6:	42 e0       	ldi	r20, 0x02	; 2
    15f8:	c4 0e       	add	r12, r20
    15fa:	d1 1c       	adc	r13, r1
    15fc:	12 96       	adiw	r26, 0x02	; 2
    15fe:	bc 90       	ld	r11, X
    1600:	12 97       	sbiw	r26, 0x02	; 2
    1602:	13 96       	adiw	r26, 0x03	; 3
    1604:	ac 91       	ld	r26, X
    1606:	b5 e0       	ldi	r27, 0x05	; 5
    1608:	cb 16       	cp	r12, r27
    160a:	d1 04       	cpc	r13, r1
    160c:	40 f0       	brcs	.+16     	; 0x161e <realloc+0xd4>
    160e:	b2 82       	std	Z+2, r11	; 0x02
    1610:	a3 83       	std	Z+3, r26	; 0x03
    1612:	91 82       	std	Z+1, r9	; 0x01
    1614:	80 82       	st	Z, r8
    1616:	d9 01       	movw	r26, r18
    1618:	6d 93       	st	X+, r22
    161a:	7c 93       	st	X, r23
    161c:	09 c0       	rjmp	.+18     	; 0x1630 <realloc+0xe6>
    161e:	0e 5f       	subi	r16, 0xFE	; 254
    1620:	1f 4f       	sbci	r17, 0xFF	; 255
    1622:	80 0f       	add	r24, r16
    1624:	91 1f       	adc	r25, r17
    1626:	f9 01       	movw	r30, r18
    1628:	91 83       	std	Z+1, r25	; 0x01
    162a:	80 83       	st	Z, r24
    162c:	eb 2d       	mov	r30, r11
    162e:	fa 2f       	mov	r31, r26
    1630:	e1 14       	cp	r14, r1
    1632:	f1 04       	cpc	r15, r1
    1634:	31 f0       	breq	.+12     	; 0x1642 <realloc+0xf8>
    1636:	d7 01       	movw	r26, r14
    1638:	13 96       	adiw	r26, 0x03	; 3
    163a:	fc 93       	st	X, r31
    163c:	ee 93       	st	-X, r30
    163e:	12 97       	sbiw	r26, 0x02	; 2
    1640:	41 c0       	rjmp	.+130    	; 0x16c4 <realloc+0x17a>
    1642:	f0 93 b3 01 	sts	0x01B3, r31	; 0x8001b3 <__flp+0x1>
    1646:	e0 93 b2 01 	sts	0x01B2, r30	; 0x8001b2 <__flp>
    164a:	3c c0       	rjmp	.+120    	; 0x16c4 <realloc+0x17a>
    164c:	68 16       	cp	r6, r24
    164e:	79 06       	cpc	r7, r25
    1650:	08 f4       	brcc	.+2      	; 0x1654 <realloc+0x10a>
    1652:	3c 01       	movw	r6, r24
    1654:	7d 01       	movw	r14, r26
    1656:	12 96       	adiw	r26, 0x02	; 2
    1658:	0d 90       	ld	r0, X+
    165a:	bc 91       	ld	r27, X
    165c:	a0 2d       	mov	r26, r0
    165e:	b7 cf       	rjmp	.-146    	; 0x15ce <realloc+0x84>
    1660:	80 91 b0 01 	lds	r24, 0x01B0	; 0x8001b0 <__brkval>
    1664:	90 91 b1 01 	lds	r25, 0x01B1	; 0x8001b1 <__brkval+0x1>
    1668:	88 16       	cp	r8, r24
    166a:	99 06       	cpc	r9, r25
    166c:	e1 f4       	brne	.+56     	; 0x16a6 <realloc+0x15c>
    166e:	66 16       	cp	r6, r22
    1670:	77 06       	cpc	r7, r23
    1672:	c8 f4       	brcc	.+50     	; 0x16a6 <realloc+0x15c>
    1674:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    1678:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
    167c:	00 97       	sbiw	r24, 0x00	; 0
    167e:	41 f4       	brne	.+16     	; 0x1690 <realloc+0x146>
    1680:	8d b7       	in	r24, 0x3d	; 61
    1682:	9e b7       	in	r25, 0x3e	; 62
    1684:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    1688:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    168c:	84 1b       	sub	r24, r20
    168e:	95 0b       	sbc	r25, r21
    1690:	e8 17       	cp	r30, r24
    1692:	f9 07       	cpc	r31, r25
    1694:	c8 f4       	brcc	.+50     	; 0x16c8 <realloc+0x17e>
    1696:	f0 93 b1 01 	sts	0x01B1, r31	; 0x8001b1 <__brkval+0x1>
    169a:	e0 93 b0 01 	sts	0x01B0, r30	; 0x8001b0 <__brkval>
    169e:	f9 01       	movw	r30, r18
    16a0:	71 83       	std	Z+1, r23	; 0x01
    16a2:	60 83       	st	Z, r22
    16a4:	0f c0       	rjmp	.+30     	; 0x16c4 <realloc+0x17a>
    16a6:	cb 01       	movw	r24, r22
    16a8:	0e 94 84 09 	call	0x1308	; 0x1308 <malloc>
    16ac:	7c 01       	movw	r14, r24
    16ae:	00 97       	sbiw	r24, 0x00	; 0
    16b0:	59 f0       	breq	.+22     	; 0x16c8 <realloc+0x17e>
    16b2:	a8 01       	movw	r20, r16
    16b4:	be 01       	movw	r22, r28
    16b6:	0e 94 6b 0b 	call	0x16d6	; 0x16d6 <memcpy>
    16ba:	ce 01       	movw	r24, r28
    16bc:	0e 94 1c 0a 	call	0x1438	; 0x1438 <free>
    16c0:	c7 01       	movw	r24, r14
    16c2:	04 c0       	rjmp	.+8      	; 0x16cc <realloc+0x182>
    16c4:	ce 01       	movw	r24, r28
    16c6:	02 c0       	rjmp	.+4      	; 0x16cc <realloc+0x182>
    16c8:	80 e0       	ldi	r24, 0x00	; 0
    16ca:	90 e0       	ldi	r25, 0x00	; 0
    16cc:	cd b7       	in	r28, 0x3d	; 61
    16ce:	de b7       	in	r29, 0x3e	; 62
    16d0:	ee e0       	ldi	r30, 0x0E	; 14
    16d2:	0c 94 46 0e 	jmp	0x1c8c	; 0x1c8c <__epilogue_restores__+0x8>

000016d6 <memcpy>:
    16d6:	fb 01       	movw	r30, r22
    16d8:	dc 01       	movw	r26, r24
    16da:	02 c0       	rjmp	.+4      	; 0x16e0 <memcpy+0xa>
    16dc:	01 90       	ld	r0, Z+
    16de:	0d 92       	st	X+, r0
    16e0:	41 50       	subi	r20, 0x01	; 1
    16e2:	50 40       	sbci	r21, 0x00	; 0
    16e4:	d8 f7       	brcc	.-10     	; 0x16dc <memcpy+0x6>
    16e6:	08 95       	ret

000016e8 <strcat>:
    16e8:	fb 01       	movw	r30, r22
    16ea:	dc 01       	movw	r26, r24
    16ec:	0d 90       	ld	r0, X+
    16ee:	00 20       	and	r0, r0
    16f0:	e9 f7       	brne	.-6      	; 0x16ec <strcat+0x4>
    16f2:	11 97       	sbiw	r26, 0x01	; 1
    16f4:	01 90       	ld	r0, Z+
    16f6:	0d 92       	st	X+, r0
    16f8:	00 20       	and	r0, r0
    16fa:	e1 f7       	brne	.-8      	; 0x16f4 <strcat+0xc>
    16fc:	08 95       	ret

000016fe <printf>:
    16fe:	a0 e0       	ldi	r26, 0x00	; 0
    1700:	b0 e0       	ldi	r27, 0x00	; 0
    1702:	e5 e8       	ldi	r30, 0x85	; 133
    1704:	fb e0       	ldi	r31, 0x0B	; 11
    1706:	0c 94 36 0e 	jmp	0x1c6c	; 0x1c6c <__prologue_saves__+0x20>
    170a:	ae 01       	movw	r20, r28
    170c:	4b 5f       	subi	r20, 0xFB	; 251
    170e:	5f 4f       	sbci	r21, 0xFF	; 255
    1710:	fa 01       	movw	r30, r20
    1712:	61 91       	ld	r22, Z+
    1714:	71 91       	ld	r23, Z+
    1716:	af 01       	movw	r20, r30
    1718:	80 91 b6 01 	lds	r24, 0x01B6	; 0x8001b6 <__iob+0x2>
    171c:	90 91 b7 01 	lds	r25, 0x01B7	; 0x8001b7 <__iob+0x3>
    1720:	0e 94 95 0b 	call	0x172a	; 0x172a <vfprintf>
    1724:	e2 e0       	ldi	r30, 0x02	; 2
    1726:	0c 94 52 0e 	jmp	0x1ca4	; 0x1ca4 <__epilogue_restores__+0x20>

0000172a <vfprintf>:
    172a:	ab e0       	ldi	r26, 0x0B	; 11
    172c:	b0 e0       	ldi	r27, 0x00	; 0
    172e:	eb e9       	ldi	r30, 0x9B	; 155
    1730:	fb e0       	ldi	r31, 0x0B	; 11
    1732:	0c 94 26 0e 	jmp	0x1c4c	; 0x1c4c <__prologue_saves__>
    1736:	6c 01       	movw	r12, r24
    1738:	7b 01       	movw	r14, r22
    173a:	8a 01       	movw	r16, r20
    173c:	fc 01       	movw	r30, r24
    173e:	17 82       	std	Z+7, r1	; 0x07
    1740:	16 82       	std	Z+6, r1	; 0x06
    1742:	83 81       	ldd	r24, Z+3	; 0x03
    1744:	81 ff       	sbrs	r24, 1
    1746:	cc c1       	rjmp	.+920    	; 0x1ae0 <vfprintf+0x3b6>
    1748:	ce 01       	movw	r24, r28
    174a:	01 96       	adiw	r24, 0x01	; 1
    174c:	3c 01       	movw	r6, r24
    174e:	f6 01       	movw	r30, r12
    1750:	93 81       	ldd	r25, Z+3	; 0x03
    1752:	f7 01       	movw	r30, r14
    1754:	93 fd       	sbrc	r25, 3
    1756:	85 91       	lpm	r24, Z+
    1758:	93 ff       	sbrs	r25, 3
    175a:	81 91       	ld	r24, Z+
    175c:	7f 01       	movw	r14, r30
    175e:	88 23       	and	r24, r24
    1760:	09 f4       	brne	.+2      	; 0x1764 <vfprintf+0x3a>
    1762:	ba c1       	rjmp	.+884    	; 0x1ad8 <vfprintf+0x3ae>
    1764:	85 32       	cpi	r24, 0x25	; 37
    1766:	39 f4       	brne	.+14     	; 0x1776 <vfprintf+0x4c>
    1768:	93 fd       	sbrc	r25, 3
    176a:	85 91       	lpm	r24, Z+
    176c:	93 ff       	sbrs	r25, 3
    176e:	81 91       	ld	r24, Z+
    1770:	7f 01       	movw	r14, r30
    1772:	85 32       	cpi	r24, 0x25	; 37
    1774:	29 f4       	brne	.+10     	; 0x1780 <vfprintf+0x56>
    1776:	b6 01       	movw	r22, r12
    1778:	90 e0       	ldi	r25, 0x00	; 0
    177a:	0e 94 8c 0d 	call	0x1b18	; 0x1b18 <fputc>
    177e:	e7 cf       	rjmp	.-50     	; 0x174e <vfprintf+0x24>
    1780:	91 2c       	mov	r9, r1
    1782:	21 2c       	mov	r2, r1
    1784:	31 2c       	mov	r3, r1
    1786:	ff e1       	ldi	r31, 0x1F	; 31
    1788:	f3 15       	cp	r31, r3
    178a:	d8 f0       	brcs	.+54     	; 0x17c2 <vfprintf+0x98>
    178c:	8b 32       	cpi	r24, 0x2B	; 43
    178e:	79 f0       	breq	.+30     	; 0x17ae <vfprintf+0x84>
    1790:	38 f4       	brcc	.+14     	; 0x17a0 <vfprintf+0x76>
    1792:	80 32       	cpi	r24, 0x20	; 32
    1794:	79 f0       	breq	.+30     	; 0x17b4 <vfprintf+0x8a>
    1796:	83 32       	cpi	r24, 0x23	; 35
    1798:	a1 f4       	brne	.+40     	; 0x17c2 <vfprintf+0x98>
    179a:	23 2d       	mov	r18, r3
    179c:	20 61       	ori	r18, 0x10	; 16
    179e:	1d c0       	rjmp	.+58     	; 0x17da <vfprintf+0xb0>
    17a0:	8d 32       	cpi	r24, 0x2D	; 45
    17a2:	61 f0       	breq	.+24     	; 0x17bc <vfprintf+0x92>
    17a4:	80 33       	cpi	r24, 0x30	; 48
    17a6:	69 f4       	brne	.+26     	; 0x17c2 <vfprintf+0x98>
    17a8:	23 2d       	mov	r18, r3
    17aa:	21 60       	ori	r18, 0x01	; 1
    17ac:	16 c0       	rjmp	.+44     	; 0x17da <vfprintf+0xb0>
    17ae:	83 2d       	mov	r24, r3
    17b0:	82 60       	ori	r24, 0x02	; 2
    17b2:	38 2e       	mov	r3, r24
    17b4:	e3 2d       	mov	r30, r3
    17b6:	e4 60       	ori	r30, 0x04	; 4
    17b8:	3e 2e       	mov	r3, r30
    17ba:	2a c0       	rjmp	.+84     	; 0x1810 <vfprintf+0xe6>
    17bc:	f3 2d       	mov	r31, r3
    17be:	f8 60       	ori	r31, 0x08	; 8
    17c0:	1d c0       	rjmp	.+58     	; 0x17fc <vfprintf+0xd2>
    17c2:	37 fc       	sbrc	r3, 7
    17c4:	2d c0       	rjmp	.+90     	; 0x1820 <vfprintf+0xf6>
    17c6:	20 ed       	ldi	r18, 0xD0	; 208
    17c8:	28 0f       	add	r18, r24
    17ca:	2a 30       	cpi	r18, 0x0A	; 10
    17cc:	40 f0       	brcs	.+16     	; 0x17de <vfprintf+0xb4>
    17ce:	8e 32       	cpi	r24, 0x2E	; 46
    17d0:	b9 f4       	brne	.+46     	; 0x1800 <vfprintf+0xd6>
    17d2:	36 fc       	sbrc	r3, 6
    17d4:	81 c1       	rjmp	.+770    	; 0x1ad8 <vfprintf+0x3ae>
    17d6:	23 2d       	mov	r18, r3
    17d8:	20 64       	ori	r18, 0x40	; 64
    17da:	32 2e       	mov	r3, r18
    17dc:	19 c0       	rjmp	.+50     	; 0x1810 <vfprintf+0xe6>
    17de:	36 fe       	sbrs	r3, 6
    17e0:	06 c0       	rjmp	.+12     	; 0x17ee <vfprintf+0xc4>
    17e2:	8a e0       	ldi	r24, 0x0A	; 10
    17e4:	98 9e       	mul	r9, r24
    17e6:	20 0d       	add	r18, r0
    17e8:	11 24       	eor	r1, r1
    17ea:	92 2e       	mov	r9, r18
    17ec:	11 c0       	rjmp	.+34     	; 0x1810 <vfprintf+0xe6>
    17ee:	ea e0       	ldi	r30, 0x0A	; 10
    17f0:	2e 9e       	mul	r2, r30
    17f2:	20 0d       	add	r18, r0
    17f4:	11 24       	eor	r1, r1
    17f6:	22 2e       	mov	r2, r18
    17f8:	f3 2d       	mov	r31, r3
    17fa:	f0 62       	ori	r31, 0x20	; 32
    17fc:	3f 2e       	mov	r3, r31
    17fe:	08 c0       	rjmp	.+16     	; 0x1810 <vfprintf+0xe6>
    1800:	8c 36       	cpi	r24, 0x6C	; 108
    1802:	21 f4       	brne	.+8      	; 0x180c <vfprintf+0xe2>
    1804:	83 2d       	mov	r24, r3
    1806:	80 68       	ori	r24, 0x80	; 128
    1808:	38 2e       	mov	r3, r24
    180a:	02 c0       	rjmp	.+4      	; 0x1810 <vfprintf+0xe6>
    180c:	88 36       	cpi	r24, 0x68	; 104
    180e:	41 f4       	brne	.+16     	; 0x1820 <vfprintf+0xf6>
    1810:	f7 01       	movw	r30, r14
    1812:	93 fd       	sbrc	r25, 3
    1814:	85 91       	lpm	r24, Z+
    1816:	93 ff       	sbrs	r25, 3
    1818:	81 91       	ld	r24, Z+
    181a:	7f 01       	movw	r14, r30
    181c:	81 11       	cpse	r24, r1
    181e:	b3 cf       	rjmp	.-154    	; 0x1786 <vfprintf+0x5c>
    1820:	98 2f       	mov	r25, r24
    1822:	9f 7d       	andi	r25, 0xDF	; 223
    1824:	95 54       	subi	r25, 0x45	; 69
    1826:	93 30       	cpi	r25, 0x03	; 3
    1828:	28 f4       	brcc	.+10     	; 0x1834 <vfprintf+0x10a>
    182a:	0c 5f       	subi	r16, 0xFC	; 252
    182c:	1f 4f       	sbci	r17, 0xFF	; 255
    182e:	9f e3       	ldi	r25, 0x3F	; 63
    1830:	99 83       	std	Y+1, r25	; 0x01
    1832:	0d c0       	rjmp	.+26     	; 0x184e <vfprintf+0x124>
    1834:	83 36       	cpi	r24, 0x63	; 99
    1836:	31 f0       	breq	.+12     	; 0x1844 <vfprintf+0x11a>
    1838:	83 37       	cpi	r24, 0x73	; 115
    183a:	71 f0       	breq	.+28     	; 0x1858 <vfprintf+0x12e>
    183c:	83 35       	cpi	r24, 0x53	; 83
    183e:	09 f0       	breq	.+2      	; 0x1842 <vfprintf+0x118>
    1840:	59 c0       	rjmp	.+178    	; 0x18f4 <vfprintf+0x1ca>
    1842:	21 c0       	rjmp	.+66     	; 0x1886 <vfprintf+0x15c>
    1844:	f8 01       	movw	r30, r16
    1846:	80 81       	ld	r24, Z
    1848:	89 83       	std	Y+1, r24	; 0x01
    184a:	0e 5f       	subi	r16, 0xFE	; 254
    184c:	1f 4f       	sbci	r17, 0xFF	; 255
    184e:	88 24       	eor	r8, r8
    1850:	83 94       	inc	r8
    1852:	91 2c       	mov	r9, r1
    1854:	53 01       	movw	r10, r6
    1856:	13 c0       	rjmp	.+38     	; 0x187e <vfprintf+0x154>
    1858:	28 01       	movw	r4, r16
    185a:	f2 e0       	ldi	r31, 0x02	; 2
    185c:	4f 0e       	add	r4, r31
    185e:	51 1c       	adc	r5, r1
    1860:	f8 01       	movw	r30, r16
    1862:	a0 80       	ld	r10, Z
    1864:	b1 80       	ldd	r11, Z+1	; 0x01
    1866:	36 fe       	sbrs	r3, 6
    1868:	03 c0       	rjmp	.+6      	; 0x1870 <vfprintf+0x146>
    186a:	69 2d       	mov	r22, r9
    186c:	70 e0       	ldi	r23, 0x00	; 0
    186e:	02 c0       	rjmp	.+4      	; 0x1874 <vfprintf+0x14a>
    1870:	6f ef       	ldi	r22, 0xFF	; 255
    1872:	7f ef       	ldi	r23, 0xFF	; 255
    1874:	c5 01       	movw	r24, r10
    1876:	0e 94 81 0d 	call	0x1b02	; 0x1b02 <strnlen>
    187a:	4c 01       	movw	r8, r24
    187c:	82 01       	movw	r16, r4
    187e:	f3 2d       	mov	r31, r3
    1880:	ff 77       	andi	r31, 0x7F	; 127
    1882:	3f 2e       	mov	r3, r31
    1884:	16 c0       	rjmp	.+44     	; 0x18b2 <vfprintf+0x188>
    1886:	28 01       	movw	r4, r16
    1888:	22 e0       	ldi	r18, 0x02	; 2
    188a:	42 0e       	add	r4, r18
    188c:	51 1c       	adc	r5, r1
    188e:	f8 01       	movw	r30, r16
    1890:	a0 80       	ld	r10, Z
    1892:	b1 80       	ldd	r11, Z+1	; 0x01
    1894:	36 fe       	sbrs	r3, 6
    1896:	03 c0       	rjmp	.+6      	; 0x189e <vfprintf+0x174>
    1898:	69 2d       	mov	r22, r9
    189a:	70 e0       	ldi	r23, 0x00	; 0
    189c:	02 c0       	rjmp	.+4      	; 0x18a2 <vfprintf+0x178>
    189e:	6f ef       	ldi	r22, 0xFF	; 255
    18a0:	7f ef       	ldi	r23, 0xFF	; 255
    18a2:	c5 01       	movw	r24, r10
    18a4:	0e 94 76 0d 	call	0x1aec	; 0x1aec <strnlen_P>
    18a8:	4c 01       	movw	r8, r24
    18aa:	f3 2d       	mov	r31, r3
    18ac:	f0 68       	ori	r31, 0x80	; 128
    18ae:	3f 2e       	mov	r3, r31
    18b0:	82 01       	movw	r16, r4
    18b2:	33 fc       	sbrc	r3, 3
    18b4:	1b c0       	rjmp	.+54     	; 0x18ec <vfprintf+0x1c2>
    18b6:	82 2d       	mov	r24, r2
    18b8:	90 e0       	ldi	r25, 0x00	; 0
    18ba:	88 16       	cp	r8, r24
    18bc:	99 06       	cpc	r9, r25
    18be:	b0 f4       	brcc	.+44     	; 0x18ec <vfprintf+0x1c2>
    18c0:	b6 01       	movw	r22, r12
    18c2:	80 e2       	ldi	r24, 0x20	; 32
    18c4:	90 e0       	ldi	r25, 0x00	; 0
    18c6:	0e 94 8c 0d 	call	0x1b18	; 0x1b18 <fputc>
    18ca:	2a 94       	dec	r2
    18cc:	f4 cf       	rjmp	.-24     	; 0x18b6 <vfprintf+0x18c>
    18ce:	f5 01       	movw	r30, r10
    18d0:	37 fc       	sbrc	r3, 7
    18d2:	85 91       	lpm	r24, Z+
    18d4:	37 fe       	sbrs	r3, 7
    18d6:	81 91       	ld	r24, Z+
    18d8:	5f 01       	movw	r10, r30
    18da:	b6 01       	movw	r22, r12
    18dc:	90 e0       	ldi	r25, 0x00	; 0
    18de:	0e 94 8c 0d 	call	0x1b18	; 0x1b18 <fputc>
    18e2:	21 10       	cpse	r2, r1
    18e4:	2a 94       	dec	r2
    18e6:	21 e0       	ldi	r18, 0x01	; 1
    18e8:	82 1a       	sub	r8, r18
    18ea:	91 08       	sbc	r9, r1
    18ec:	81 14       	cp	r8, r1
    18ee:	91 04       	cpc	r9, r1
    18f0:	71 f7       	brne	.-36     	; 0x18ce <vfprintf+0x1a4>
    18f2:	e8 c0       	rjmp	.+464    	; 0x1ac4 <vfprintf+0x39a>
    18f4:	84 36       	cpi	r24, 0x64	; 100
    18f6:	11 f0       	breq	.+4      	; 0x18fc <vfprintf+0x1d2>
    18f8:	89 36       	cpi	r24, 0x69	; 105
    18fa:	41 f5       	brne	.+80     	; 0x194c <vfprintf+0x222>
    18fc:	f8 01       	movw	r30, r16
    18fe:	37 fe       	sbrs	r3, 7
    1900:	07 c0       	rjmp	.+14     	; 0x1910 <vfprintf+0x1e6>
    1902:	60 81       	ld	r22, Z
    1904:	71 81       	ldd	r23, Z+1	; 0x01
    1906:	82 81       	ldd	r24, Z+2	; 0x02
    1908:	93 81       	ldd	r25, Z+3	; 0x03
    190a:	0c 5f       	subi	r16, 0xFC	; 252
    190c:	1f 4f       	sbci	r17, 0xFF	; 255
    190e:	08 c0       	rjmp	.+16     	; 0x1920 <vfprintf+0x1f6>
    1910:	60 81       	ld	r22, Z
    1912:	71 81       	ldd	r23, Z+1	; 0x01
    1914:	07 2e       	mov	r0, r23
    1916:	00 0c       	add	r0, r0
    1918:	88 0b       	sbc	r24, r24
    191a:	99 0b       	sbc	r25, r25
    191c:	0e 5f       	subi	r16, 0xFE	; 254
    191e:	1f 4f       	sbci	r17, 0xFF	; 255
    1920:	f3 2d       	mov	r31, r3
    1922:	ff 76       	andi	r31, 0x6F	; 111
    1924:	3f 2e       	mov	r3, r31
    1926:	97 ff       	sbrs	r25, 7
    1928:	09 c0       	rjmp	.+18     	; 0x193c <vfprintf+0x212>
    192a:	90 95       	com	r25
    192c:	80 95       	com	r24
    192e:	70 95       	com	r23
    1930:	61 95       	neg	r22
    1932:	7f 4f       	sbci	r23, 0xFF	; 255
    1934:	8f 4f       	sbci	r24, 0xFF	; 255
    1936:	9f 4f       	sbci	r25, 0xFF	; 255
    1938:	f0 68       	ori	r31, 0x80	; 128
    193a:	3f 2e       	mov	r3, r31
    193c:	2a e0       	ldi	r18, 0x0A	; 10
    193e:	30 e0       	ldi	r19, 0x00	; 0
    1940:	a3 01       	movw	r20, r6
    1942:	0e 94 c8 0d 	call	0x1b90	; 0x1b90 <__ultoa_invert>
    1946:	88 2e       	mov	r8, r24
    1948:	86 18       	sub	r8, r6
    194a:	45 c0       	rjmp	.+138    	; 0x19d6 <vfprintf+0x2ac>
    194c:	85 37       	cpi	r24, 0x75	; 117
    194e:	31 f4       	brne	.+12     	; 0x195c <vfprintf+0x232>
    1950:	23 2d       	mov	r18, r3
    1952:	2f 7e       	andi	r18, 0xEF	; 239
    1954:	b2 2e       	mov	r11, r18
    1956:	2a e0       	ldi	r18, 0x0A	; 10
    1958:	30 e0       	ldi	r19, 0x00	; 0
    195a:	25 c0       	rjmp	.+74     	; 0x19a6 <vfprintf+0x27c>
    195c:	93 2d       	mov	r25, r3
    195e:	99 7f       	andi	r25, 0xF9	; 249
    1960:	b9 2e       	mov	r11, r25
    1962:	8f 36       	cpi	r24, 0x6F	; 111
    1964:	c1 f0       	breq	.+48     	; 0x1996 <vfprintf+0x26c>
    1966:	18 f4       	brcc	.+6      	; 0x196e <vfprintf+0x244>
    1968:	88 35       	cpi	r24, 0x58	; 88
    196a:	79 f0       	breq	.+30     	; 0x198a <vfprintf+0x260>
    196c:	b5 c0       	rjmp	.+362    	; 0x1ad8 <vfprintf+0x3ae>
    196e:	80 37       	cpi	r24, 0x70	; 112
    1970:	19 f0       	breq	.+6      	; 0x1978 <vfprintf+0x24e>
    1972:	88 37       	cpi	r24, 0x78	; 120
    1974:	21 f0       	breq	.+8      	; 0x197e <vfprintf+0x254>
    1976:	b0 c0       	rjmp	.+352    	; 0x1ad8 <vfprintf+0x3ae>
    1978:	e9 2f       	mov	r30, r25
    197a:	e0 61       	ori	r30, 0x10	; 16
    197c:	be 2e       	mov	r11, r30
    197e:	b4 fe       	sbrs	r11, 4
    1980:	0d c0       	rjmp	.+26     	; 0x199c <vfprintf+0x272>
    1982:	fb 2d       	mov	r31, r11
    1984:	f4 60       	ori	r31, 0x04	; 4
    1986:	bf 2e       	mov	r11, r31
    1988:	09 c0       	rjmp	.+18     	; 0x199c <vfprintf+0x272>
    198a:	34 fe       	sbrs	r3, 4
    198c:	0a c0       	rjmp	.+20     	; 0x19a2 <vfprintf+0x278>
    198e:	29 2f       	mov	r18, r25
    1990:	26 60       	ori	r18, 0x06	; 6
    1992:	b2 2e       	mov	r11, r18
    1994:	06 c0       	rjmp	.+12     	; 0x19a2 <vfprintf+0x278>
    1996:	28 e0       	ldi	r18, 0x08	; 8
    1998:	30 e0       	ldi	r19, 0x00	; 0
    199a:	05 c0       	rjmp	.+10     	; 0x19a6 <vfprintf+0x27c>
    199c:	20 e1       	ldi	r18, 0x10	; 16
    199e:	30 e0       	ldi	r19, 0x00	; 0
    19a0:	02 c0       	rjmp	.+4      	; 0x19a6 <vfprintf+0x27c>
    19a2:	20 e1       	ldi	r18, 0x10	; 16
    19a4:	32 e0       	ldi	r19, 0x02	; 2
    19a6:	f8 01       	movw	r30, r16
    19a8:	b7 fe       	sbrs	r11, 7
    19aa:	07 c0       	rjmp	.+14     	; 0x19ba <vfprintf+0x290>
    19ac:	60 81       	ld	r22, Z
    19ae:	71 81       	ldd	r23, Z+1	; 0x01
    19b0:	82 81       	ldd	r24, Z+2	; 0x02
    19b2:	93 81       	ldd	r25, Z+3	; 0x03
    19b4:	0c 5f       	subi	r16, 0xFC	; 252
    19b6:	1f 4f       	sbci	r17, 0xFF	; 255
    19b8:	06 c0       	rjmp	.+12     	; 0x19c6 <vfprintf+0x29c>
    19ba:	60 81       	ld	r22, Z
    19bc:	71 81       	ldd	r23, Z+1	; 0x01
    19be:	80 e0       	ldi	r24, 0x00	; 0
    19c0:	90 e0       	ldi	r25, 0x00	; 0
    19c2:	0e 5f       	subi	r16, 0xFE	; 254
    19c4:	1f 4f       	sbci	r17, 0xFF	; 255
    19c6:	a3 01       	movw	r20, r6
    19c8:	0e 94 c8 0d 	call	0x1b90	; 0x1b90 <__ultoa_invert>
    19cc:	88 2e       	mov	r8, r24
    19ce:	86 18       	sub	r8, r6
    19d0:	fb 2d       	mov	r31, r11
    19d2:	ff 77       	andi	r31, 0x7F	; 127
    19d4:	3f 2e       	mov	r3, r31
    19d6:	36 fe       	sbrs	r3, 6
    19d8:	0d c0       	rjmp	.+26     	; 0x19f4 <vfprintf+0x2ca>
    19da:	23 2d       	mov	r18, r3
    19dc:	2e 7f       	andi	r18, 0xFE	; 254
    19de:	a2 2e       	mov	r10, r18
    19e0:	89 14       	cp	r8, r9
    19e2:	58 f4       	brcc	.+22     	; 0x19fa <vfprintf+0x2d0>
    19e4:	34 fe       	sbrs	r3, 4
    19e6:	0b c0       	rjmp	.+22     	; 0x19fe <vfprintf+0x2d4>
    19e8:	32 fc       	sbrc	r3, 2
    19ea:	09 c0       	rjmp	.+18     	; 0x19fe <vfprintf+0x2d4>
    19ec:	83 2d       	mov	r24, r3
    19ee:	8e 7e       	andi	r24, 0xEE	; 238
    19f0:	a8 2e       	mov	r10, r24
    19f2:	05 c0       	rjmp	.+10     	; 0x19fe <vfprintf+0x2d4>
    19f4:	b8 2c       	mov	r11, r8
    19f6:	a3 2c       	mov	r10, r3
    19f8:	03 c0       	rjmp	.+6      	; 0x1a00 <vfprintf+0x2d6>
    19fa:	b8 2c       	mov	r11, r8
    19fc:	01 c0       	rjmp	.+2      	; 0x1a00 <vfprintf+0x2d6>
    19fe:	b9 2c       	mov	r11, r9
    1a00:	a4 fe       	sbrs	r10, 4
    1a02:	0f c0       	rjmp	.+30     	; 0x1a22 <vfprintf+0x2f8>
    1a04:	fe 01       	movw	r30, r28
    1a06:	e8 0d       	add	r30, r8
    1a08:	f1 1d       	adc	r31, r1
    1a0a:	80 81       	ld	r24, Z
    1a0c:	80 33       	cpi	r24, 0x30	; 48
    1a0e:	21 f4       	brne	.+8      	; 0x1a18 <vfprintf+0x2ee>
    1a10:	9a 2d       	mov	r25, r10
    1a12:	99 7e       	andi	r25, 0xE9	; 233
    1a14:	a9 2e       	mov	r10, r25
    1a16:	09 c0       	rjmp	.+18     	; 0x1a2a <vfprintf+0x300>
    1a18:	a2 fe       	sbrs	r10, 2
    1a1a:	06 c0       	rjmp	.+12     	; 0x1a28 <vfprintf+0x2fe>
    1a1c:	b3 94       	inc	r11
    1a1e:	b3 94       	inc	r11
    1a20:	04 c0       	rjmp	.+8      	; 0x1a2a <vfprintf+0x300>
    1a22:	8a 2d       	mov	r24, r10
    1a24:	86 78       	andi	r24, 0x86	; 134
    1a26:	09 f0       	breq	.+2      	; 0x1a2a <vfprintf+0x300>
    1a28:	b3 94       	inc	r11
    1a2a:	a3 fc       	sbrc	r10, 3
    1a2c:	11 c0       	rjmp	.+34     	; 0x1a50 <vfprintf+0x326>
    1a2e:	a0 fe       	sbrs	r10, 0
    1a30:	06 c0       	rjmp	.+12     	; 0x1a3e <vfprintf+0x314>
    1a32:	b2 14       	cp	r11, r2
    1a34:	88 f4       	brcc	.+34     	; 0x1a58 <vfprintf+0x32e>
    1a36:	28 0c       	add	r2, r8
    1a38:	92 2c       	mov	r9, r2
    1a3a:	9b 18       	sub	r9, r11
    1a3c:	0e c0       	rjmp	.+28     	; 0x1a5a <vfprintf+0x330>
    1a3e:	b2 14       	cp	r11, r2
    1a40:	60 f4       	brcc	.+24     	; 0x1a5a <vfprintf+0x330>
    1a42:	b6 01       	movw	r22, r12
    1a44:	80 e2       	ldi	r24, 0x20	; 32
    1a46:	90 e0       	ldi	r25, 0x00	; 0
    1a48:	0e 94 8c 0d 	call	0x1b18	; 0x1b18 <fputc>
    1a4c:	b3 94       	inc	r11
    1a4e:	f7 cf       	rjmp	.-18     	; 0x1a3e <vfprintf+0x314>
    1a50:	b2 14       	cp	r11, r2
    1a52:	18 f4       	brcc	.+6      	; 0x1a5a <vfprintf+0x330>
    1a54:	2b 18       	sub	r2, r11
    1a56:	02 c0       	rjmp	.+4      	; 0x1a5c <vfprintf+0x332>
    1a58:	98 2c       	mov	r9, r8
    1a5a:	21 2c       	mov	r2, r1
    1a5c:	a4 fe       	sbrs	r10, 4
    1a5e:	10 c0       	rjmp	.+32     	; 0x1a80 <vfprintf+0x356>
    1a60:	b6 01       	movw	r22, r12
    1a62:	80 e3       	ldi	r24, 0x30	; 48
    1a64:	90 e0       	ldi	r25, 0x00	; 0
    1a66:	0e 94 8c 0d 	call	0x1b18	; 0x1b18 <fputc>
    1a6a:	a2 fe       	sbrs	r10, 2
    1a6c:	17 c0       	rjmp	.+46     	; 0x1a9c <vfprintf+0x372>
    1a6e:	a1 fc       	sbrc	r10, 1
    1a70:	03 c0       	rjmp	.+6      	; 0x1a78 <vfprintf+0x34e>
    1a72:	88 e7       	ldi	r24, 0x78	; 120
    1a74:	90 e0       	ldi	r25, 0x00	; 0
    1a76:	02 c0       	rjmp	.+4      	; 0x1a7c <vfprintf+0x352>
    1a78:	88 e5       	ldi	r24, 0x58	; 88
    1a7a:	90 e0       	ldi	r25, 0x00	; 0
    1a7c:	b6 01       	movw	r22, r12
    1a7e:	0c c0       	rjmp	.+24     	; 0x1a98 <vfprintf+0x36e>
    1a80:	8a 2d       	mov	r24, r10
    1a82:	86 78       	andi	r24, 0x86	; 134
    1a84:	59 f0       	breq	.+22     	; 0x1a9c <vfprintf+0x372>
    1a86:	a1 fe       	sbrs	r10, 1
    1a88:	02 c0       	rjmp	.+4      	; 0x1a8e <vfprintf+0x364>
    1a8a:	8b e2       	ldi	r24, 0x2B	; 43
    1a8c:	01 c0       	rjmp	.+2      	; 0x1a90 <vfprintf+0x366>
    1a8e:	80 e2       	ldi	r24, 0x20	; 32
    1a90:	a7 fc       	sbrc	r10, 7
    1a92:	8d e2       	ldi	r24, 0x2D	; 45
    1a94:	b6 01       	movw	r22, r12
    1a96:	90 e0       	ldi	r25, 0x00	; 0
    1a98:	0e 94 8c 0d 	call	0x1b18	; 0x1b18 <fputc>
    1a9c:	89 14       	cp	r8, r9
    1a9e:	38 f4       	brcc	.+14     	; 0x1aae <vfprintf+0x384>
    1aa0:	b6 01       	movw	r22, r12
    1aa2:	80 e3       	ldi	r24, 0x30	; 48
    1aa4:	90 e0       	ldi	r25, 0x00	; 0
    1aa6:	0e 94 8c 0d 	call	0x1b18	; 0x1b18 <fputc>
    1aaa:	9a 94       	dec	r9
    1aac:	f7 cf       	rjmp	.-18     	; 0x1a9c <vfprintf+0x372>
    1aae:	8a 94       	dec	r8
    1ab0:	f3 01       	movw	r30, r6
    1ab2:	e8 0d       	add	r30, r8
    1ab4:	f1 1d       	adc	r31, r1
    1ab6:	80 81       	ld	r24, Z
    1ab8:	b6 01       	movw	r22, r12
    1aba:	90 e0       	ldi	r25, 0x00	; 0
    1abc:	0e 94 8c 0d 	call	0x1b18	; 0x1b18 <fputc>
    1ac0:	81 10       	cpse	r8, r1
    1ac2:	f5 cf       	rjmp	.-22     	; 0x1aae <vfprintf+0x384>
    1ac4:	22 20       	and	r2, r2
    1ac6:	09 f4       	brne	.+2      	; 0x1aca <vfprintf+0x3a0>
    1ac8:	42 ce       	rjmp	.-892    	; 0x174e <vfprintf+0x24>
    1aca:	b6 01       	movw	r22, r12
    1acc:	80 e2       	ldi	r24, 0x20	; 32
    1ace:	90 e0       	ldi	r25, 0x00	; 0
    1ad0:	0e 94 8c 0d 	call	0x1b18	; 0x1b18 <fputc>
    1ad4:	2a 94       	dec	r2
    1ad6:	f6 cf       	rjmp	.-20     	; 0x1ac4 <vfprintf+0x39a>
    1ad8:	f6 01       	movw	r30, r12
    1ada:	86 81       	ldd	r24, Z+6	; 0x06
    1adc:	97 81       	ldd	r25, Z+7	; 0x07
    1ade:	02 c0       	rjmp	.+4      	; 0x1ae4 <vfprintf+0x3ba>
    1ae0:	8f ef       	ldi	r24, 0xFF	; 255
    1ae2:	9f ef       	ldi	r25, 0xFF	; 255
    1ae4:	2b 96       	adiw	r28, 0x0b	; 11
    1ae6:	e2 e1       	ldi	r30, 0x12	; 18
    1ae8:	0c 94 42 0e 	jmp	0x1c84	; 0x1c84 <__epilogue_restores__>

00001aec <strnlen_P>:
    1aec:	fc 01       	movw	r30, r24
    1aee:	05 90       	lpm	r0, Z+
    1af0:	61 50       	subi	r22, 0x01	; 1
    1af2:	70 40       	sbci	r23, 0x00	; 0
    1af4:	01 10       	cpse	r0, r1
    1af6:	d8 f7       	brcc	.-10     	; 0x1aee <strnlen_P+0x2>
    1af8:	80 95       	com	r24
    1afa:	90 95       	com	r25
    1afc:	8e 0f       	add	r24, r30
    1afe:	9f 1f       	adc	r25, r31
    1b00:	08 95       	ret

00001b02 <strnlen>:
    1b02:	fc 01       	movw	r30, r24
    1b04:	61 50       	subi	r22, 0x01	; 1
    1b06:	70 40       	sbci	r23, 0x00	; 0
    1b08:	01 90       	ld	r0, Z+
    1b0a:	01 10       	cpse	r0, r1
    1b0c:	d8 f7       	brcc	.-10     	; 0x1b04 <strnlen+0x2>
    1b0e:	80 95       	com	r24
    1b10:	90 95       	com	r25
    1b12:	8e 0f       	add	r24, r30
    1b14:	9f 1f       	adc	r25, r31
    1b16:	08 95       	ret

00001b18 <fputc>:
    1b18:	0f 93       	push	r16
    1b1a:	1f 93       	push	r17
    1b1c:	cf 93       	push	r28
    1b1e:	df 93       	push	r29
    1b20:	fb 01       	movw	r30, r22
    1b22:	23 81       	ldd	r18, Z+3	; 0x03
    1b24:	21 fd       	sbrc	r18, 1
    1b26:	03 c0       	rjmp	.+6      	; 0x1b2e <fputc+0x16>
    1b28:	8f ef       	ldi	r24, 0xFF	; 255
    1b2a:	9f ef       	ldi	r25, 0xFF	; 255
    1b2c:	2c c0       	rjmp	.+88     	; 0x1b86 <fputc+0x6e>
    1b2e:	22 ff       	sbrs	r18, 2
    1b30:	16 c0       	rjmp	.+44     	; 0x1b5e <fputc+0x46>
    1b32:	46 81       	ldd	r20, Z+6	; 0x06
    1b34:	57 81       	ldd	r21, Z+7	; 0x07
    1b36:	24 81       	ldd	r18, Z+4	; 0x04
    1b38:	35 81       	ldd	r19, Z+5	; 0x05
    1b3a:	42 17       	cp	r20, r18
    1b3c:	53 07       	cpc	r21, r19
    1b3e:	44 f4       	brge	.+16     	; 0x1b50 <fputc+0x38>
    1b40:	a0 81       	ld	r26, Z
    1b42:	b1 81       	ldd	r27, Z+1	; 0x01
    1b44:	9d 01       	movw	r18, r26
    1b46:	2f 5f       	subi	r18, 0xFF	; 255
    1b48:	3f 4f       	sbci	r19, 0xFF	; 255
    1b4a:	31 83       	std	Z+1, r19	; 0x01
    1b4c:	20 83       	st	Z, r18
    1b4e:	8c 93       	st	X, r24
    1b50:	26 81       	ldd	r18, Z+6	; 0x06
    1b52:	37 81       	ldd	r19, Z+7	; 0x07
    1b54:	2f 5f       	subi	r18, 0xFF	; 255
    1b56:	3f 4f       	sbci	r19, 0xFF	; 255
    1b58:	37 83       	std	Z+7, r19	; 0x07
    1b5a:	26 83       	std	Z+6, r18	; 0x06
    1b5c:	14 c0       	rjmp	.+40     	; 0x1b86 <fputc+0x6e>
    1b5e:	8b 01       	movw	r16, r22
    1b60:	ec 01       	movw	r28, r24
    1b62:	fb 01       	movw	r30, r22
    1b64:	00 84       	ldd	r0, Z+8	; 0x08
    1b66:	f1 85       	ldd	r31, Z+9	; 0x09
    1b68:	e0 2d       	mov	r30, r0
    1b6a:	09 95       	icall
    1b6c:	89 2b       	or	r24, r25
    1b6e:	e1 f6       	brne	.-72     	; 0x1b28 <fputc+0x10>
    1b70:	d8 01       	movw	r26, r16
    1b72:	16 96       	adiw	r26, 0x06	; 6
    1b74:	8d 91       	ld	r24, X+
    1b76:	9c 91       	ld	r25, X
    1b78:	17 97       	sbiw	r26, 0x07	; 7
    1b7a:	01 96       	adiw	r24, 0x01	; 1
    1b7c:	17 96       	adiw	r26, 0x07	; 7
    1b7e:	9c 93       	st	X, r25
    1b80:	8e 93       	st	-X, r24
    1b82:	16 97       	sbiw	r26, 0x06	; 6
    1b84:	ce 01       	movw	r24, r28
    1b86:	df 91       	pop	r29
    1b88:	cf 91       	pop	r28
    1b8a:	1f 91       	pop	r17
    1b8c:	0f 91       	pop	r16
    1b8e:	08 95       	ret

00001b90 <__ultoa_invert>:
    1b90:	fa 01       	movw	r30, r20
    1b92:	aa 27       	eor	r26, r26
    1b94:	28 30       	cpi	r18, 0x08	; 8
    1b96:	51 f1       	breq	.+84     	; 0x1bec <__ultoa_invert+0x5c>
    1b98:	20 31       	cpi	r18, 0x10	; 16
    1b9a:	81 f1       	breq	.+96     	; 0x1bfc <__ultoa_invert+0x6c>
    1b9c:	e8 94       	clt
    1b9e:	6f 93       	push	r22
    1ba0:	6e 7f       	andi	r22, 0xFE	; 254
    1ba2:	6e 5f       	subi	r22, 0xFE	; 254
    1ba4:	7f 4f       	sbci	r23, 0xFF	; 255
    1ba6:	8f 4f       	sbci	r24, 0xFF	; 255
    1ba8:	9f 4f       	sbci	r25, 0xFF	; 255
    1baa:	af 4f       	sbci	r26, 0xFF	; 255
    1bac:	b1 e0       	ldi	r27, 0x01	; 1
    1bae:	3e d0       	rcall	.+124    	; 0x1c2c <__ultoa_invert+0x9c>
    1bb0:	b4 e0       	ldi	r27, 0x04	; 4
    1bb2:	3c d0       	rcall	.+120    	; 0x1c2c <__ultoa_invert+0x9c>
    1bb4:	67 0f       	add	r22, r23
    1bb6:	78 1f       	adc	r23, r24
    1bb8:	89 1f       	adc	r24, r25
    1bba:	9a 1f       	adc	r25, r26
    1bbc:	a1 1d       	adc	r26, r1
    1bbe:	68 0f       	add	r22, r24
    1bc0:	79 1f       	adc	r23, r25
    1bc2:	8a 1f       	adc	r24, r26
    1bc4:	91 1d       	adc	r25, r1
    1bc6:	a1 1d       	adc	r26, r1
    1bc8:	6a 0f       	add	r22, r26
    1bca:	71 1d       	adc	r23, r1
    1bcc:	81 1d       	adc	r24, r1
    1bce:	91 1d       	adc	r25, r1
    1bd0:	a1 1d       	adc	r26, r1
    1bd2:	20 d0       	rcall	.+64     	; 0x1c14 <__ultoa_invert+0x84>
    1bd4:	09 f4       	brne	.+2      	; 0x1bd8 <__ultoa_invert+0x48>
    1bd6:	68 94       	set
    1bd8:	3f 91       	pop	r19
    1bda:	2a e0       	ldi	r18, 0x0A	; 10
    1bdc:	26 9f       	mul	r18, r22
    1bde:	11 24       	eor	r1, r1
    1be0:	30 19       	sub	r19, r0
    1be2:	30 5d       	subi	r19, 0xD0	; 208
    1be4:	31 93       	st	Z+, r19
    1be6:	de f6       	brtc	.-74     	; 0x1b9e <__ultoa_invert+0xe>
    1be8:	cf 01       	movw	r24, r30
    1bea:	08 95       	ret
    1bec:	46 2f       	mov	r20, r22
    1bee:	47 70       	andi	r20, 0x07	; 7
    1bf0:	40 5d       	subi	r20, 0xD0	; 208
    1bf2:	41 93       	st	Z+, r20
    1bf4:	b3 e0       	ldi	r27, 0x03	; 3
    1bf6:	0f d0       	rcall	.+30     	; 0x1c16 <__ultoa_invert+0x86>
    1bf8:	c9 f7       	brne	.-14     	; 0x1bec <__ultoa_invert+0x5c>
    1bfa:	f6 cf       	rjmp	.-20     	; 0x1be8 <__ultoa_invert+0x58>
    1bfc:	46 2f       	mov	r20, r22
    1bfe:	4f 70       	andi	r20, 0x0F	; 15
    1c00:	40 5d       	subi	r20, 0xD0	; 208
    1c02:	4a 33       	cpi	r20, 0x3A	; 58
    1c04:	18 f0       	brcs	.+6      	; 0x1c0c <__ultoa_invert+0x7c>
    1c06:	49 5d       	subi	r20, 0xD9	; 217
    1c08:	31 fd       	sbrc	r19, 1
    1c0a:	40 52       	subi	r20, 0x20	; 32
    1c0c:	41 93       	st	Z+, r20
    1c0e:	02 d0       	rcall	.+4      	; 0x1c14 <__ultoa_invert+0x84>
    1c10:	a9 f7       	brne	.-22     	; 0x1bfc <__ultoa_invert+0x6c>
    1c12:	ea cf       	rjmp	.-44     	; 0x1be8 <__ultoa_invert+0x58>
    1c14:	b4 e0       	ldi	r27, 0x04	; 4
    1c16:	a6 95       	lsr	r26
    1c18:	97 95       	ror	r25
    1c1a:	87 95       	ror	r24
    1c1c:	77 95       	ror	r23
    1c1e:	67 95       	ror	r22
    1c20:	ba 95       	dec	r27
    1c22:	c9 f7       	brne	.-14     	; 0x1c16 <__ultoa_invert+0x86>
    1c24:	00 97       	sbiw	r24, 0x00	; 0
    1c26:	61 05       	cpc	r22, r1
    1c28:	71 05       	cpc	r23, r1
    1c2a:	08 95       	ret
    1c2c:	9b 01       	movw	r18, r22
    1c2e:	ac 01       	movw	r20, r24
    1c30:	0a 2e       	mov	r0, r26
    1c32:	06 94       	lsr	r0
    1c34:	57 95       	ror	r21
    1c36:	47 95       	ror	r20
    1c38:	37 95       	ror	r19
    1c3a:	27 95       	ror	r18
    1c3c:	ba 95       	dec	r27
    1c3e:	c9 f7       	brne	.-14     	; 0x1c32 <__ultoa_invert+0xa2>
    1c40:	62 0f       	add	r22, r18
    1c42:	73 1f       	adc	r23, r19
    1c44:	84 1f       	adc	r24, r20
    1c46:	95 1f       	adc	r25, r21
    1c48:	a0 1d       	adc	r26, r0
    1c4a:	08 95       	ret

00001c4c <__prologue_saves__>:
    1c4c:	2f 92       	push	r2
    1c4e:	3f 92       	push	r3
    1c50:	4f 92       	push	r4
    1c52:	5f 92       	push	r5
    1c54:	6f 92       	push	r6
    1c56:	7f 92       	push	r7
    1c58:	8f 92       	push	r8
    1c5a:	9f 92       	push	r9
    1c5c:	af 92       	push	r10
    1c5e:	bf 92       	push	r11
    1c60:	cf 92       	push	r12
    1c62:	df 92       	push	r13
    1c64:	ef 92       	push	r14
    1c66:	ff 92       	push	r15
    1c68:	0f 93       	push	r16
    1c6a:	1f 93       	push	r17
    1c6c:	cf 93       	push	r28
    1c6e:	df 93       	push	r29
    1c70:	cd b7       	in	r28, 0x3d	; 61
    1c72:	de b7       	in	r29, 0x3e	; 62
    1c74:	ca 1b       	sub	r28, r26
    1c76:	db 0b       	sbc	r29, r27
    1c78:	0f b6       	in	r0, 0x3f	; 63
    1c7a:	f8 94       	cli
    1c7c:	de bf       	out	0x3e, r29	; 62
    1c7e:	0f be       	out	0x3f, r0	; 63
    1c80:	cd bf       	out	0x3d, r28	; 61
    1c82:	09 94       	ijmp

00001c84 <__epilogue_restores__>:
    1c84:	2a 88       	ldd	r2, Y+18	; 0x12
    1c86:	39 88       	ldd	r3, Y+17	; 0x11
    1c88:	48 88       	ldd	r4, Y+16	; 0x10
    1c8a:	5f 84       	ldd	r5, Y+15	; 0x0f
    1c8c:	6e 84       	ldd	r6, Y+14	; 0x0e
    1c8e:	7d 84       	ldd	r7, Y+13	; 0x0d
    1c90:	8c 84       	ldd	r8, Y+12	; 0x0c
    1c92:	9b 84       	ldd	r9, Y+11	; 0x0b
    1c94:	aa 84       	ldd	r10, Y+10	; 0x0a
    1c96:	b9 84       	ldd	r11, Y+9	; 0x09
    1c98:	c8 84       	ldd	r12, Y+8	; 0x08
    1c9a:	df 80       	ldd	r13, Y+7	; 0x07
    1c9c:	ee 80       	ldd	r14, Y+6	; 0x06
    1c9e:	fd 80       	ldd	r15, Y+5	; 0x05
    1ca0:	0c 81       	ldd	r16, Y+4	; 0x04
    1ca2:	1b 81       	ldd	r17, Y+3	; 0x03
    1ca4:	aa 81       	ldd	r26, Y+2	; 0x02
    1ca6:	b9 81       	ldd	r27, Y+1	; 0x01
    1ca8:	ce 0f       	add	r28, r30
    1caa:	d1 1d       	adc	r29, r1
    1cac:	0f b6       	in	r0, 0x3f	; 63
    1cae:	f8 94       	cli
    1cb0:	de bf       	out	0x3e, r29	; 62
    1cb2:	0f be       	out	0x3f, r0	; 63
    1cb4:	cd bf       	out	0x3d, r28	; 61
    1cb6:	ed 01       	movw	r28, r26
    1cb8:	08 95       	ret

00001cba <_exit>:
    1cba:	f8 94       	cli

00001cbc <__stop_program>:
    1cbc:	ff cf       	rjmp	.-2      	; 0x1cbc <__stop_program>
