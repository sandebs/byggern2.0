
Byggern2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000ea  00800100  00001b22  00001bb6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001b22  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000012  008001ea  008001ea  00001ca0  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001ca0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001cfc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000298  00000000  00000000  00001d38  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002989  00000000  00000000  00001fd0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001380  00000000  00000000  00004959  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001468  00000000  00000000  00005cd9  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000618  00000000  00000000  00007144  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000009a7  00000000  00000000  0000775c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000159b  00000000  00000000  00008103  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000228  00000000  00000000  0000969e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 8f 03 	jmp	0x71e	; 0x71e <__ctors_end>
       4:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
       8:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
       c:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
      10:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
      14:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
      18:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
      1c:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
      20:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
      24:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
      28:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
      2c:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
      30:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
      34:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
      38:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
      3c:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
      40:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
      44:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
      48:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
      4c:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
      50:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
      54:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
      58:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
      5c:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
      60:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
      64:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
      68:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
      6c:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>

00000070 <__trampolines_end>:
      70:	00 00       	nop
      72:	00 00       	nop
      74:	00 5c       	subi	r16, 0xC0	; 192
      76:	00 00       	nop
      78:	0c 00       	.word	0x000c	; ????
      7a:	0c 00       	.word	0x000c	; ????
      7c:	7c 28       	or	r7, r12
      7e:	7c 28       	or	r7, r12
      80:	58 dc       	rcall	.-1872   	; 0xfffff932 <__eeprom_end+0xff7ef932>
      82:	68 00       	.word	0x0068	; ????
      84:	24 10       	cpse	r2, r4
      86:	48 00       	.word	0x0048	; ????
      88:	28 54       	subi	r18, 0x48	; 72
      8a:	28 40       	sbci	r18, 0x08	; 8
      8c:	00 0c       	add	r0, r0
      8e:	00 00       	nop
      90:	00 78       	andi	r16, 0x80	; 128
      92:	84 00       	.word	0x0084	; ????
      94:	84 78       	andi	r24, 0x84	; 132
      96:	00 00       	nop
      98:	54 38       	cpi	r21, 0x84	; 132
      9a:	54 00       	.word	0x0054	; ????
      9c:	10 7c       	andi	r17, 0xC0	; 192
      9e:	10 00       	.word	0x0010	; ????
      a0:	80 40       	sbci	r24, 0x00	; 0
      a2:	00 00       	nop
      a4:	10 10       	cpse	r1, r0
      a6:	10 00       	.word	0x0010	; ????
      a8:	00 40       	sbci	r16, 0x00	; 0
      aa:	00 00       	nop
      ac:	60 10       	cpse	r6, r0
      ae:	0c 00       	.word	0x000c	; ????
      b0:	38 54       	subi	r19, 0x48	; 72
      b2:	38 00       	.word	0x0038	; ????
      b4:	48 7c       	andi	r20, 0xC8	; 200
      b6:	40 00       	.word	0x0040	; ????
      b8:	48 64       	ori	r20, 0x48	; 72
      ba:	58 00       	.word	0x0058	; ????
      bc:	44 54       	subi	r20, 0x44	; 68
      be:	2c 00       	.word	0x002c	; ????
      c0:	1c 10       	cpse	r1, r12
      c2:	7c 00       	.word	0x007c	; ????
      c4:	5c 54       	subi	r21, 0x4C	; 76
      c6:	24 00       	.word	0x0024	; ????
      c8:	38 54       	subi	r19, 0x48	; 72
      ca:	24 00       	.word	0x0024	; ????
      cc:	64 14       	cp	r6, r4
      ce:	0c 00       	.word	0x000c	; ????
      d0:	68 54       	subi	r22, 0x48	; 72
      d2:	2c 00       	.word	0x002c	; ????
      d4:	48 54       	subi	r20, 0x48	; 72
      d6:	38 00       	.word	0x0038	; ????
      d8:	00 48       	sbci	r16, 0x80	; 128
      da:	00 00       	nop
      dc:	80 48       	sbci	r24, 0x80	; 128
      de:	00 00       	nop
      e0:	10 28       	or	r1, r0
      e2:	44 00       	.word	0x0044	; ????
      e4:	28 28       	or	r2, r8
      e6:	28 00       	.word	0x0028	; ????
      e8:	44 28       	or	r4, r4
      ea:	10 00       	.word	0x0010	; ????
      ec:	04 54       	subi	r16, 0x44	; 68
      ee:	08 00       	.word	0x0008	; ????
      f0:	38 44       	sbci	r19, 0x48	; 72
      f2:	5c 00       	.word	0x005c	; ????
      f4:	78 14       	cp	r7, r8
      f6:	78 00       	.word	0x0078	; ????
      f8:	7c 54       	subi	r23, 0x4C	; 76
      fa:	28 00       	.word	0x0028	; ????
      fc:	38 44       	sbci	r19, 0x48	; 72
      fe:	28 00       	.word	0x0028	; ????
     100:	7c 44       	sbci	r23, 0x4C	; 76
     102:	38 00       	.word	0x0038	; ????
     104:	7c 54       	subi	r23, 0x4C	; 76
     106:	44 00       	.word	0x0044	; ????
     108:	7c 14       	cp	r7, r12
     10a:	04 00       	.word	0x0004	; ????
     10c:	38 44       	sbci	r19, 0x48	; 72
     10e:	74 00       	.word	0x0074	; ????
     110:	7c 10       	cpse	r7, r12
     112:	7c 00       	.word	0x007c	; ????
     114:	44 7c       	andi	r20, 0xC4	; 196
     116:	44 00       	.word	0x0044	; ????
     118:	20 40       	sbci	r18, 0x00	; 0
     11a:	3c 00       	.word	0x003c	; ????
     11c:	7c 10       	cpse	r7, r12
     11e:	6c 00       	.word	0x006c	; ????
     120:	7c 40       	sbci	r23, 0x0C	; 12
     122:	40 00       	.word	0x0040	; ????
     124:	7c 18       	sub	r7, r12
     126:	7c 00       	.word	0x007c	; ????
     128:	78 10       	cpse	r7, r8
     12a:	3c 00       	.word	0x003c	; ????
     12c:	38 44       	sbci	r19, 0x48	; 72
     12e:	38 00       	.word	0x0038	; ????
     130:	7c 14       	cp	r7, r12
     132:	08 00       	.word	0x0008	; ????
     134:	38 44       	sbci	r19, 0x48	; 72
     136:	b8 00       	.word	0x00b8	; ????
     138:	7c 14       	cp	r7, r12
     13a:	68 00       	.word	0x0068	; ????
     13c:	48 54       	subi	r20, 0x48	; 72
     13e:	24 00       	.word	0x0024	; ????
     140:	04 7c       	andi	r16, 0xC4	; 196
     142:	04 00       	.word	0x0004	; ????
     144:	7c 40       	sbci	r23, 0x0C	; 12
     146:	7c 00       	.word	0x007c	; ????
     148:	3c 60       	ori	r19, 0x0C	; 12
     14a:	3c 00       	.word	0x003c	; ????
     14c:	7c 30       	cpi	r23, 0x0C	; 12
     14e:	7c 00       	.word	0x007c	; ????
     150:	6c 10       	cpse	r6, r12
     152:	6c 00       	.word	0x006c	; ????
     154:	0c 70       	andi	r16, 0x0C	; 12
     156:	0c 00       	.word	0x000c	; ????
     158:	64 54       	subi	r22, 0x44	; 68
     15a:	4c 00       	.word	0x004c	; ????
     15c:	00 7c       	andi	r16, 0xC0	; 192
     15e:	44 00       	.word	0x0044	; ????
     160:	0c 10       	cpse	r0, r12
     162:	60 00       	.word	0x0060	; ????
     164:	44 7c       	andi	r20, 0xC4	; 196
     166:	00 00       	nop
     168:	08 04       	cpc	r0, r8
     16a:	08 00       	.word	0x0008	; ????
     16c:	80 80       	ld	r8, Z
     16e:	80 00       	.word	0x0080	; ????
     170:	00 04       	cpc	r0, r0
     172:	08 00       	.word	0x0008	; ????
     174:	30 48       	sbci	r19, 0x80	; 128
     176:	78 00       	.word	0x0078	; ????
     178:	7c 48       	sbci	r23, 0x8C	; 140
     17a:	30 00       	.word	0x0030	; ????
     17c:	30 48       	sbci	r19, 0x80	; 128
     17e:	48 00       	.word	0x0048	; ????
     180:	30 48       	sbci	r19, 0x80	; 128
     182:	7c 00       	.word	0x007c	; ????
     184:	30 68       	ori	r19, 0x80	; 128
     186:	50 00       	.word	0x0050	; ????
     188:	10 78       	andi	r17, 0x80	; 128
     18a:	14 00       	.word	0x0014	; ????
     18c:	90 a8       	ldd	r9, Z+48	; 0x30
     18e:	78 00       	.word	0x0078	; ????
     190:	7c 08       	sbc	r7, r12
     192:	70 00       	.word	0x0070	; ????
     194:	50 74       	andi	r21, 0x40	; 64
     196:	40 00       	.word	0x0040	; ????
     198:	80 80       	ld	r8, Z
     19a:	74 00       	.word	0x0074	; ????
     19c:	7c 10       	cpse	r7, r12
     19e:	68 00       	.word	0x0068	; ????
     1a0:	44 7c       	andi	r20, 0xC4	; 196
     1a2:	40 00       	.word	0x0040	; ????
     1a4:	78 10       	cpse	r7, r8
     1a6:	78 00       	.word	0x0078	; ????
     1a8:	78 08       	sbc	r7, r8
     1aa:	70 00       	.word	0x0070	; ????
     1ac:	30 48       	sbci	r19, 0x80	; 128
     1ae:	30 00       	.word	0x0030	; ????
     1b0:	f8 28       	or	r15, r8
     1b2:	10 00       	.word	0x0010	; ????
     1b4:	30 48       	sbci	r19, 0x80	; 128
     1b6:	f8 00       	.word	0x00f8	; ????
     1b8:	78 10       	cpse	r7, r8
     1ba:	08 00       	.word	0x0008	; ????
     1bc:	50 58       	subi	r21, 0x80	; 128
     1be:	28 00       	.word	0x0028	; ????
     1c0:	08 3c       	cpi	r16, 0xC8	; 200
     1c2:	48 00       	.word	0x0048	; ????
     1c4:	38 40       	sbci	r19, 0x08	; 8
     1c6:	78 00       	.word	0x0078	; ????
     1c8:	38 40       	sbci	r19, 0x08	; 8
     1ca:	38 00       	.word	0x0038	; ????
     1cc:	78 20       	and	r7, r8
     1ce:	78 00       	.word	0x0078	; ????
     1d0:	48 30       	cpi	r20, 0x08	; 8
     1d2:	48 00       	.word	0x0048	; ????
     1d4:	98 a0       	ldd	r9, Y+32	; 0x20
     1d6:	78 00       	.word	0x0078	; ????
     1d8:	48 68       	ori	r20, 0x88	; 136
     1da:	58 00       	.word	0x0058	; ????
     1dc:	10 78       	andi	r17, 0x80	; 128
     1de:	84 00       	.word	0x0084	; ????
     1e0:	00 7c       	andi	r16, 0xC0	; 192
     1e2:	00 00       	nop
     1e4:	84 78       	andi	r24, 0x84	; 132
     1e6:	10 00       	.word	0x0010	; ????
     1e8:	08 04       	cpc	r0, r8
     1ea:	08 04       	cpc	r0, r8

000001ec <font6>:
	...
     1f4:	5f 00 00 00 00 07 00 07 00 00 14 7f 14 7f 14 00     _...............
     204:	24 2a 7f 2a 12 00 23 13 08 64 62 00 36 49 55 22     $*.*..#..db.6IU"
     214:	50 00 00 05 03 00 00 00 00 1c 22 41 00 00 00 41     P........."A...A
     224:	22 1c 00 00 08 2a 1c 2a 08 00 08 08 3e 08 08 00     "....*.*....>...
     234:	00 50 30 00 00 00 08 08 08 08 08 00 00 60 60 00     .P0..........``.
     244:	00 00 20 10 08 04 02 00 3e 51 49 45 3e 00 00 42     .. .....>QIE>..B
     254:	7f 40 00 00 42 61 51 49 46 00 21 41 45 4b 31 00     .@..BaQIF.!AEK1.
     264:	18 14 12 7f 10 00 27 45 45 45 39 00 3c 4a 49 49     ......'EEE9.<JII
     274:	30 00 01 71 09 05 03 00 36 49 49 49 36 00 06 49     0..q....6III6..I
     284:	49 29 1e 00 00 36 36 00 00 00 00 56 36 00 00 00     I)...66....V6...
     294:	08 1c 2a 08 08 00 14 14 14 14 14 00 08 08 2a 1c     ..*...........*.
     2a4:	08 00 02 01 51 09 06 00 32 49 79 41 3e 00 7e 11     ....Q...2IyA>.~.
     2b4:	11 11 7e 00 7f 49 49 49 36 00 3e 41 41 41 22 00     ..~..III6.>AAA".
     2c4:	7f 41 41 22 1c 00 7f 49 49 49 41 00 7f 09 09 01     .AA"...IIIA.....
     2d4:	01 00 3e 41 41 51 32 00 7f 08 08 08 7f 00 00 41     ..>AAQ2........A
     2e4:	7f 41 00 00 20 40 41 3f 01 00 7f 08 14 22 41 00     .A.. @A?....."A.
     2f4:	7f 40 40 40 40 00 7f 02 04 02 7f 00 7f 04 08 10     .@@@@...........
     304:	7f 00 3e 41 41 41 3e 00 7f 09 09 09 06 00 3e 41     ..>AAA>.......>A
     314:	51 21 5e 00 7f 09 19 29 46 00 46 49 49 49 31 00     Q!^....)F.FIII1.
     324:	01 01 7f 01 01 00 3f 40 40 40 3f 00 1f 20 40 20     ......?@@@?.. @ 
     334:	1f 00 7f 20 18 20 7f 00 63 14 08 14 63 00 03 04     ... . ..c...c...
     344:	78 04 03 00 61 51 49 45 43 00 00 00 7f 41 41 00     x...aQIEC....AA.
     354:	02 04 08 10 20 00 41 41 7f 00 00 00 04 02 01 02     .... .AA........
     364:	04 00 40 40 40 40 40 00 00 01 02 04 00 00 20 54     ..@@@@@....... T
     374:	54 54 78 00 7f 48 44 44 38 00 38 44 44 44 20 00     TTx..HDD8.8DDD .
     384:	38 44 44 48 7f 00 38 54 54 54 18 00 08 7e 09 01     8DDH..8TTT...~..
     394:	02 00 08 14 54 54 3c 00 7f 08 04 04 78 00 00 44     ....TT<.....x..D
     3a4:	7d 40 00 00 20 40 44 3d 00 00 00 7f 10 28 44 00     }@.. @D=.....(D.
     3b4:	00 41 7f 40 00 00 7c 04 18 04 78 00 7c 08 04 04     .A.@..|...x.|...
     3c4:	78 00 38 44 44 44 38 00 7c 14 14 14 08 00 08 14     x.8DDD8.|.......
     3d4:	14 18 7c 00 7c 08 04 04 08 00 48 54 54 54 20 00     ..|.|.....HTTT .
     3e4:	04 3f 44 40 20 00 3c 40 40 20 7c 00 1c 20 40 20     .?D@ .<@@ |.. @ 
     3f4:	1c 00 3c 40 30 40 3c 00 44 28 10 28 44 00 0c 50     ..<@0@<.D(.(D..P
     404:	50 50 3c 00 44 64 54 4c 44 00 00 08 36 41 00 00     PP<.DdTLD...6A..
     414:	00 00 7f 00 00 00 00 41 36 08 00 00 02 01 03 02     .......A6.......
     424:	01 00                                               ..

00000426 <font8>:
	...
     42e:	00 06 5f 5f 06 00 00 00 00 07 07 00 07 07 00 00     ..__............
     43e:	14 7f 7f 14 7f 7f 14 00 24 2e 6b 6b 3a 12 00 00     ........$.kk:...
     44e:	46 66 30 18 0c 66 62 00 30 7a 4f 5d 37 7a 48 00     Ff0..fb.0zO]7zH.
     45e:	04 07 03 00 00 00 00 00 00 1c 3e 63 41 00 00 00     ..........>cA...
     46e:	00 41 63 3e 1c 00 00 00 08 2a 3e 1c 1c 3e 2a 08     .Ac>.....*>..>*.
     47e:	08 08 3e 3e 08 08 00 00 00 a0 e0 60 00 00 00 00     ..>>.......`....
     48e:	08 08 08 08 08 08 00 00 00 00 60 60 00 00 00 00     ..........``....
     49e:	60 30 18 0c 06 03 01 00 3e 7f 59 4d 7f 3e 00 00     `0......>.YM.>..
     4ae:	42 42 7f 7f 40 40 00 00 62 73 59 49 6f 66 00 00     BB..@@..bsYIof..
     4be:	22 63 49 49 7f 36 00 00 18 1c 16 13 7f 7f 10 00     "cII.6..........
     4ce:	27 67 45 45 7d 39 00 00 3c 7e 4b 49 79 30 00 00     'gEE}9..<~KIy0..
     4de:	03 63 71 19 0f 07 00 00 36 7f 49 49 7f 36 00 00     .cq.....6.II.6..
     4ee:	06 4f 49 69 3f 1e 00 00 00 00 6c 6c 00 00 00 00     .OIi?.....ll....
     4fe:	00 a0 ec 6c 00 00 00 00 18 24 42 99 24 42 81 00     ...l.....$B.$B..
     50e:	14 14 14 14 14 14 00 00 81 42 24 99 42 24 18 00     .........B$.B$..
     51e:	02 03 51 59 0f 06 00 00 3e 7f 41 5d 5d 1f 1e 00     ..QY....>.A]]...
     52e:	7c 7e 13 13 7e 7c 00 00 41 7f 7f 49 49 7f 36 00     |~..~|..A..II.6.
     53e:	1c 3e 63 41 41 63 22 00 41 7f 7f 41 63 7f 1c 00     .>cAAc".A..Ac...
     54e:	41 7f 7f 49 5d 41 63 00 41 7f 7f 49 1d 01 03 00     A..I]Ac.A..I....
     55e:	1c 3e 63 41 51 73 72 00 7f 7f 08 08 7f 7f 00 00     .>cAQsr.........
     56e:	00 41 7f 7f 41 00 00 00 30 70 40 41 7f 3f 01 00     .A..A...0p@A.?..
     57e:	41 7f 7f 08 1c 77 63 00 41 7f 7f 41 40 60 70 00     A....wc.A..A@`p.
     58e:	7f 7f 06 0c 06 7f 7f 00 7f 7f 06 0c 18 7f 7f 00     ................
     59e:	1c 3e 63 41 63 3e 1c 00 41 7f 7f 49 09 0f 06 00     .>cAc>..A..I....
     5ae:	1e 3f 21 71 7f 5e 00 00 41 7f 7f 19 39 6f 46 00     .?!q.^..A...9oF.
     5be:	26 67 4d 59 7b 32 00 00 03 41 7f 7f 41 03 00 00     &gMY{2...A..A...
     5ce:	7f 7f 40 40 7f 7f 00 00 1f 3f 60 60 3f 1f 00 00     ..@@.....?``?...
     5de:	7f 7f 30 18 30 7f 7f 00 63 77 1c 08 1c 77 63 00     ..0.0...cw...wc.
     5ee:	07 4f 78 78 4f 07 00 00 67 73 59 4d 47 63 71 00     .OxxO...gsYMGcq.
     5fe:	00 7f 7f 41 41 00 00 00 01 03 06 0c 18 30 60 00     ...AA........0`.
     60e:	00 41 41 7f 7f 00 00 00 08 0c 06 03 06 0c 08 00     .AA.............
     61e:	80 80 80 80 80 80 80 80 00 00 03 07 04 00 00 00     ................
     62e:	20 74 54 54 3c 78 40 00 41 3f 7f 44 44 7c 38 00      tTT<x@.A?.DD|8.
     63e:	38 7c 44 44 6c 28 00 00 30 78 48 49 3f 7f 40 00     8|DDl(..0xHI?.@.
     64e:	38 7c 54 54 5c 18 00 00 48 7e 7f 49 03 02 00 00     8|TT\...H~.I....
     65e:	98 bc a4 a4 f8 7c 04 00 41 7f 7f 08 04 7c 78 00     .....|..A....|x.
     66e:	00 44 7d 7d 40 00 00 00 40 c4 84 fd 7d 00 00 00     .D}}@...@...}...
     67e:	41 7f 7f 10 38 6c 44 00 00 41 7f 7f 40 00 00 00     A...8lD..A..@...
     68e:	7c 7c 0c 18 0c 7c 78 00 7c 7c 04 04 7c 78 00 00     ||...|x.||..|x..
     69e:	38 7c 44 44 7c 38 00 00 84 fc f8 a4 24 3c 18 00     8|DD|8......$<..
     6ae:	18 3c 24 a4 f8 fc 84 00 44 7c 78 44 1c 18 00 00     .<$.....D|xD....
     6be:	48 5c 54 54 74 24 00 00 00 04 3e 7f 44 24 00 00     H\TTt$....>.D$..
     6ce:	3c 7c 40 40 3c 7c 40 00 1c 3c 60 60 3c 1c 00 00     <|@@<|@..<``<...
     6de:	3c 7c 60 30 60 7c 3c 00 44 6c 38 10 38 6c 44 00     <|`0`|<.Dl8.8lD.
     6ee:	9c bc a0 a0 fc 7c 00 00 4c 64 74 5c 4c 64 00 00     .....|..Ldt\Ld..
     6fe:	08 08 3e 77 41 41 00 00 00 00 00 77 77 00 00 00     ..>wAA.....ww...
     70e:	41 41 77 3e 08 08 00 00 02 03 01 03 02 03 01 00     AAw>............

0000071e <__ctors_end>:
     71e:	11 24       	eor	r1, r1
     720:	1f be       	out	0x3f, r1	; 63
     722:	cf ef       	ldi	r28, 0xFF	; 255
     724:	d4 e0       	ldi	r29, 0x04	; 4
     726:	de bf       	out	0x3e, r29	; 62
     728:	cd bf       	out	0x3d, r28	; 61

0000072a <__do_copy_data>:
     72a:	11 e0       	ldi	r17, 0x01	; 1
     72c:	a0 e0       	ldi	r26, 0x00	; 0
     72e:	b1 e0       	ldi	r27, 0x01	; 1
     730:	e2 e2       	ldi	r30, 0x22	; 34
     732:	fb e1       	ldi	r31, 0x1B	; 27
     734:	02 c0       	rjmp	.+4      	; 0x73a <__do_copy_data+0x10>
     736:	05 90       	lpm	r0, Z+
     738:	0d 92       	st	X+, r0
     73a:	aa 3e       	cpi	r26, 0xEA	; 234
     73c:	b1 07       	cpc	r27, r17
     73e:	d9 f7       	brne	.-10     	; 0x736 <__do_copy_data+0xc>

00000740 <__do_clear_bss>:
     740:	21 e0       	ldi	r18, 0x01	; 1
     742:	aa ee       	ldi	r26, 0xEA	; 234
     744:	b1 e0       	ldi	r27, 0x01	; 1
     746:	01 c0       	rjmp	.+2      	; 0x74a <.do_clear_bss_start>

00000748 <.do_clear_bss_loop>:
     748:	1d 92       	st	X+, r1

0000074a <.do_clear_bss_start>:
     74a:	ac 3f       	cpi	r26, 0xFC	; 252
     74c:	b2 07       	cpc	r27, r18
     74e:	e1 f7       	brne	.-8      	; 0x748 <.do_clear_bss_loop>
     750:	0e 94 db 07 	call	0xfb6	; 0xfb6 <main>
     754:	0c 94 8f 0d 	jmp	0x1b1e	; 0x1b1e <_exit>

00000758 <__bad_interrupt>:
     758:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000075c <clock_init>:
#define CONVERSION_DELAY 50


void clock_init(void){
	//Set pin pd4 as output
	DDRD |= (1 << DDD4);
     75c:	8c 9a       	sbi	0x11, 4	; 17
	
	// 1.3 MHz?
	cli(); //clears the global interrupt flag in SREG to prevent any form of interrupt occuring.
     75e:	f8 94       	cli
	TCCR3A |= (1 << COM3A0);
     760:	eb e8       	ldi	r30, 0x8B	; 139
     762:	f0 e0       	ldi	r31, 0x00	; 0
     764:	80 81       	ld	r24, Z
     766:	80 64       	ori	r24, 0x40	; 64
     768:	80 83       	st	Z, r24
	TCCR3B |= (1 << CS30);
     76a:	ea e8       	ldi	r30, 0x8A	; 138
     76c:	f0 e0       	ldi	r31, 0x00	; 0
     76e:	80 81       	ld	r24, Z
     770:	81 60       	ori	r24, 0x01	; 1
     772:	80 83       	st	Z, r24
	TCCR3B |= (1 << WGM32);
     774:	80 81       	ld	r24, Z
     776:	88 60       	ori	r24, 0x08	; 8
     778:	80 83       	st	Z, r24
	OCR3A = 1;
     77a:	81 e0       	ldi	r24, 0x01	; 1
     77c:	90 e0       	ldi	r25, 0x00	; 0
     77e:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
     782:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
	sei(); // Enables interrupts by setting the global interrupt mask.
     786:	78 94       	sei
     788:	08 95       	ret

0000078a <adc_init>:
};

void adc_init (void){
	//Configuration data to be written to ADC

	clock_init();
     78a:	0e 94 ae 03 	call	0x75c	; 0x75c <clock_init>
     78e:	08 95       	ret

00000790 <adc_read>:
		

	
}

int adc_read(int channel){
     790:	cf 93       	push	r28
     792:	c8 2f       	mov	r28, r24
	//D7 = 1, only the channel specified by An is converted. A single !RD pulse reads the result of that conversion

	uint8_t confData = 0b10000000 | channel;
	uint16_t adcMemArea = 0x400;

	xmem_init();
     794:	0e 94 82 07 	call	0xf04	; 0xf04 <xmem_init>
	xmem_write(confData, adcMemArea);
     798:	60 e0       	ldi	r22, 0x00	; 0
     79a:	74 e0       	ldi	r23, 0x04	; 4
     79c:	8c 2f       	mov	r24, r28
     79e:	80 68       	ori	r24, 0x80	; 128
     7a0:	0e 94 89 07 	call	0xf12	; 0xf12 <xmem_write>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     7a4:	80 e1       	ldi	r24, 0x10	; 16
     7a6:	8a 95       	dec	r24
     7a8:	f1 f7       	brne	.-4      	; 0x7a6 <adc_read+0x16>
     7aa:	00 c0       	rjmp	.+0      	; 0x7ac <adc_read+0x1c>
	_delay_us(CONVERSION_DELAY);
	uint8_t result = xmem_read(adcMemArea);
     7ac:	80 e0       	ldi	r24, 0x00	; 0
     7ae:	94 e0       	ldi	r25, 0x04	; 4
     7b0:	0e 94 8d 07 	call	0xf1a	; 0xf1a <xmem_read>
     7b4:	90 e1       	ldi	r25, 0x10	; 16
     7b6:	9a 95       	dec	r25
     7b8:	f1 f7       	brne	.-4      	; 0x7b6 <adc_read+0x26>
     7ba:	00 c0       	rjmp	.+0      	; 0x7bc <adc_read+0x2c>

	_delay_us(CONVERSION_DELAY);

	return result;
}
     7bc:	90 e0       	ldi	r25, 0x00	; 0
     7be:	cf 91       	pop	r28
     7c0:	08 95       	ret

000007c2 <joystick_calibrate>:


volatile uint8_t x_offset;
volatile uint8_t y_offset;

void joystick_calibrate(){
     7c2:	cf 92       	push	r12
     7c4:	df 92       	push	r13
     7c6:	ef 92       	push	r14
     7c8:	ff 92       	push	r15
     7ca:	0f 93       	push	r16
     7cc:	1f 93       	push	r17
     7ce:	cf 93       	push	r28
     7d0:	df 93       	push	r29
     7d2:	cd b7       	in	r28, 0x3d	; 61
     7d4:	de b7       	in	r29, 0x3e	; 62
     7d6:	c0 59       	subi	r28, 0x90	; 144
     7d8:	d1 40       	sbci	r29, 0x01	; 1
     7da:	0f b6       	in	r0, 0x3f	; 63
     7dc:	f8 94       	cli
     7de:	de bf       	out	0x3e, r29	; 62
     7e0:	0f be       	out	0x3f, r0	; 63
     7e2:	cd bf       	out	0x3d, r28	; 61
     7e4:	8e 01       	movw	r16, r28
     7e6:	07 53       	subi	r16, 0x37	; 55
     7e8:	1f 4f       	sbci	r17, 0xFF	; 255
     7ea:	ce 01       	movw	r24, r28
     7ec:	01 96       	adiw	r24, 0x01	; 1
     7ee:	7c 01       	movw	r14, r24
     7f0:	6e 01       	movw	r12, r28
     7f2:	9f e6       	ldi	r25, 0x6F	; 111
     7f4:	c9 1a       	sub	r12, r25
     7f6:	9e ef       	ldi	r25, 0xFE	; 254
     7f8:	d9 0a       	sbc	r13, r25
	int n=100,arrx[n],arry[n];
	for(int i = 0;i < n;i++) {
		arrx[i]=adc_read(1);
     7fa:	81 e0       	ldi	r24, 0x01	; 1
     7fc:	90 e0       	ldi	r25, 0x00	; 0
     7fe:	0e 94 c8 03 	call	0x790	; 0x790 <adc_read>
     802:	f8 01       	movw	r30, r16
     804:	81 93       	st	Z+, r24
     806:	91 93       	st	Z+, r25
     808:	8f 01       	movw	r16, r30
		arry[i]=adc_read(0);
     80a:	80 e0       	ldi	r24, 0x00	; 0
     80c:	90 e0       	ldi	r25, 0x00	; 0
     80e:	0e 94 c8 03 	call	0x790	; 0x790 <adc_read>
     812:	f7 01       	movw	r30, r14
     814:	81 93       	st	Z+, r24
     816:	91 93       	st	Z+, r25
     818:	7f 01       	movw	r14, r30
volatile uint8_t x_offset;
volatile uint8_t y_offset;

void joystick_calibrate(){
	int n=100,arrx[n],arry[n];
	for(int i = 0;i < n;i++) {
     81a:	0c 15       	cp	r16, r12
     81c:	1d 05       	cpc	r17, r13
     81e:	69 f7       	brne	.-38     	; 0x7fa <joystick_calibrate+0x38>
		arrx[i]=adc_read(1);
		arry[i]=adc_read(0);
	}
	
	x_offset = util_median(arrx,n);
     820:	64 e6       	ldi	r22, 0x64	; 100
     822:	70 e0       	ldi	r23, 0x00	; 0
     824:	ce 01       	movw	r24, r28
     826:	87 53       	subi	r24, 0x37	; 55
     828:	9f 4f       	sbci	r25, 0xFF	; 255
     82a:	0e 94 30 08 	call	0x1060	; 0x1060 <util_median>
     82e:	80 93 ed 01 	sts	0x01ED, r24	; 0x8001ed <x_offset>
	y_offset = util_median(arry,n);
     832:	64 e6       	ldi	r22, 0x64	; 100
     834:	70 e0       	ldi	r23, 0x00	; 0
     836:	ce 01       	movw	r24, r28
     838:	01 96       	adiw	r24, 0x01	; 1
     83a:	0e 94 30 08 	call	0x1060	; 0x1060 <util_median>
     83e:	80 93 ec 01 	sts	0x01EC, r24	; 0x8001ec <y_offset>
}
     842:	c0 57       	subi	r28, 0x70	; 112
     844:	de 4f       	sbci	r29, 0xFE	; 254
     846:	0f b6       	in	r0, 0x3f	; 63
     848:	f8 94       	cli
     84a:	de bf       	out	0x3e, r29	; 62
     84c:	0f be       	out	0x3f, r0	; 63
     84e:	cd bf       	out	0x3d, r28	; 61
     850:	df 91       	pop	r29
     852:	cf 91       	pop	r28
     854:	1f 91       	pop	r17
     856:	0f 91       	pop	r16
     858:	ff 90       	pop	r15
     85a:	ef 90       	pop	r14
     85c:	df 90       	pop	r13
     85e:	cf 90       	pop	r12
     860:	08 95       	ret

00000862 <f_newgame>:
	
	return new_submenu;
}

void f_newgame(){
	oled_reset();
     862:	0e 94 b3 05 	call	0xb66	; 0xb66 <oled_reset>
	oled_center_print("New Game", 8);
     866:	68 e0       	ldi	r22, 0x08	; 8
     868:	70 e0       	ldi	r23, 0x00	; 0
     86a:	8c e0       	ldi	r24, 0x0C	; 12
     86c:	91 e0       	ldi	r25, 0x01	; 1
     86e:	0e 94 72 06 	call	0xce4	; 0xce4 <oled_center_print>
     872:	08 95       	ret

00000874 <f_debugging>:
}


void f_debugging(){
	oled_reset();
     874:	0e 94 b3 05 	call	0xb66	; 0xb66 <oled_reset>
	oled_center_print("Debugging", 8);
     878:	68 e0       	ldi	r22, 0x08	; 8
     87a:	70 e0       	ldi	r23, 0x00	; 0
     87c:	85 e1       	ldi	r24, 0x15	; 21
     87e:	91 e0       	ldi	r25, 0x01	; 1
     880:	0e 94 72 06 	call	0xce4	; 0xce4 <oled_center_print>
     884:	08 95       	ret

00000886 <f_difficulty>:
}

void f_difficulty(){
	oled_reset();
     886:	0e 94 b3 05 	call	0xb66	; 0xb66 <oled_reset>
	oled_center_print("Difficulty", 8);
     88a:	68 e0       	ldi	r22, 0x08	; 8
     88c:	70 e0       	ldi	r23, 0x00	; 0
     88e:	8f e1       	ldi	r24, 0x1F	; 31
     890:	91 e0       	ldi	r25, 0x01	; 1
     892:	0e 94 72 06 	call	0xce4	; 0xce4 <oled_center_print>
     896:	08 95       	ret

00000898 <f_calibrate>:
}

void f_calibrate(){
	oled_reset();
     898:	0e 94 b3 05 	call	0xb66	; 0xb66 <oled_reset>
	oled_center_print("Calibrate", 8);
     89c:	68 e0       	ldi	r22, 0x08	; 8
     89e:	70 e0       	ldi	r23, 0x00	; 0
     8a0:	8a e2       	ldi	r24, 0x2A	; 42
     8a2:	91 e0       	ldi	r25, 0x01	; 1
     8a4:	0e 94 72 06 	call	0xce4	; 0xce4 <oled_center_print>
     8a8:	08 95       	ret

000008aa <f_high_score>:
}

void f_high_score(){
	oled_reset();
     8aa:	0e 94 b3 05 	call	0xb66	; 0xb66 <oled_reset>
	oled_center_print("High Score", 8);
     8ae:	68 e0       	ldi	r22, 0x08	; 8
     8b0:	70 e0       	ldi	r23, 0x00	; 0
     8b2:	84 e3       	ldi	r24, 0x34	; 52
     8b4:	91 e0       	ldi	r25, 0x01	; 1
     8b6:	0e 94 72 06 	call	0xce4	; 0xce4 <oled_center_print>
     8ba:	08 95       	ret

000008bc <Menu_new_submenu>:
	
	curr_menu = main_menu;
	
}

menu_item* Menu_new_submenu(menu_item* self, char* name, void (*function)(char*)){
     8bc:	cf 92       	push	r12
     8be:	df 92       	push	r13
     8c0:	ef 92       	push	r14
     8c2:	ff 92       	push	r15
     8c4:	0f 93       	push	r16
     8c6:	1f 93       	push	r17
     8c8:	cf 93       	push	r28
     8ca:	df 93       	push	r29
     8cc:	8c 01       	movw	r16, r24
     8ce:	7b 01       	movw	r14, r22
     8d0:	6a 01       	movw	r12, r20
	menu_item* new_submenu = malloc(sizeof(menu_item));
     8d2:	8c e0       	ldi	r24, 0x0C	; 12
     8d4:	90 e0       	ldi	r25, 0x00	; 0
     8d6:	0e 94 48 08 	call	0x1090	; 0x1090 <malloc>
     8da:	ec 01       	movw	r28, r24
	
	new_submenu->parent=self;
     8dc:	19 83       	std	Y+1, r17	; 0x01
     8de:	08 83       	st	Y, r16
	new_submenu->children=NULL;
     8e0:	1d 82       	std	Y+5, r1	; 0x05
     8e2:	1c 82       	std	Y+4, r1	; 0x04
	new_submenu->numOfChildren=0;
     8e4:	1f 82       	std	Y+7, r1	; 0x07
     8e6:	1e 82       	std	Y+6, r1	; 0x06
	new_submenu->name=name;
     8e8:	f9 86       	std	Y+9, r15	; 0x09
     8ea:	e8 86       	std	Y+8, r14	; 0x08
	new_submenu->nameArrow=oled_arrow(name);
     8ec:	c7 01       	movw	r24, r14
     8ee:	0e 94 95 06 	call	0xd2a	; 0xd2a <oled_arrow>
     8f2:	9b 87       	std	Y+11, r25	; 0x0b
     8f4:	8a 87       	std	Y+10, r24	; 0x0a
	new_submenu->function = function;
     8f6:	db 82       	std	Y+3, r13	; 0x03
     8f8:	ca 82       	std	Y+2, r12	; 0x02
		
	self->children=realloc(self->children, (self->numOfChildren+1)*sizeof(menu_item*));
     8fa:	f8 01       	movw	r30, r16
     8fc:	66 81       	ldd	r22, Z+6	; 0x06
     8fe:	77 81       	ldd	r23, Z+7	; 0x07
     900:	6f 5f       	subi	r22, 0xFF	; 255
     902:	7f 4f       	sbci	r23, 0xFF	; 255
     904:	66 0f       	add	r22, r22
     906:	77 1f       	adc	r23, r23
     908:	84 81       	ldd	r24, Z+4	; 0x04
     90a:	95 81       	ldd	r25, Z+5	; 0x05
     90c:	0e 94 69 09 	call	0x12d2	; 0x12d2 <realloc>
     910:	f8 01       	movw	r30, r16
     912:	95 83       	std	Z+5, r25	; 0x05
     914:	84 83       	std	Z+4, r24	; 0x04
	self->children[self->numOfChildren]=new_submenu;
     916:	26 81       	ldd	r18, Z+6	; 0x06
     918:	37 81       	ldd	r19, Z+7	; 0x07
     91a:	a9 01       	movw	r20, r18
     91c:	44 0f       	add	r20, r20
     91e:	55 1f       	adc	r21, r21
     920:	fc 01       	movw	r30, r24
     922:	e4 0f       	add	r30, r20
     924:	f5 1f       	adc	r31, r21
     926:	d1 83       	std	Z+1, r29	; 0x01
     928:	c0 83       	st	Z, r28
	
	self->numOfChildren++;
     92a:	2f 5f       	subi	r18, 0xFF	; 255
     92c:	3f 4f       	sbci	r19, 0xFF	; 255
     92e:	f8 01       	movw	r30, r16
     930:	37 83       	std	Z+7, r19	; 0x07
     932:	26 83       	std	Z+6, r18	; 0x06
	
	return new_submenu;
}
     934:	ce 01       	movw	r24, r28
     936:	df 91       	pop	r29
     938:	cf 91       	pop	r28
     93a:	1f 91       	pop	r17
     93c:	0f 91       	pop	r16
     93e:	ff 90       	pop	r15
     940:	ef 90       	pop	r14
     942:	df 90       	pop	r13
     944:	cf 90       	pop	r12
     946:	08 95       	ret

00000948 <menu_init>:
	struct menu_item* children[8];
	int numOfChildren=0;
	char name[];
} menu_item;
*/
void menu_init(){
     948:	ff 92       	push	r15
     94a:	0f 93       	push	r16
     94c:	1f 93       	push	r17
     94e:	cf 93       	push	r28
     950:	df 93       	push	r29
	
	menu_item* main_menu = malloc(sizeof(menu_item));
     952:	8c e0       	ldi	r24, 0x0C	; 12
     954:	90 e0       	ldi	r25, 0x00	; 0
     956:	0e 94 48 08 	call	0x1090	; 0x1090 <malloc>
     95a:	8c 01       	movw	r16, r24
	
	main_menu->name = "Main Menu";
     95c:	8f e3       	ldi	r24, 0x3F	; 63
     95e:	91 e0       	ldi	r25, 0x01	; 1
     960:	d8 01       	movw	r26, r16
     962:	19 96       	adiw	r26, 0x09	; 9
     964:	9c 93       	st	X, r25
     966:	8e 93       	st	-X, r24
     968:	18 97       	sbiw	r26, 0x08	; 8
	main_menu->nameArrow= NULL;
     96a:	1b 96       	adiw	r26, 0x0b	; 11
     96c:	1c 92       	st	X, r1
     96e:	1e 92       	st	-X, r1
     970:	1a 97       	sbiw	r26, 0x0a	; 10
	main_menu->numOfChildren = 0;
     972:	17 96       	adiw	r26, 0x07	; 7
     974:	1c 92       	st	X, r1
     976:	1e 92       	st	-X, r1
     978:	16 97       	sbiw	r26, 0x06	; 6
	main_menu->parent = NULL;
     97a:	11 96       	adiw	r26, 0x01	; 1
     97c:	1c 92       	st	X, r1
     97e:	1e 92       	st	-X, r1
	main_menu->function = NULL;
     980:	13 96       	adiw	r26, 0x03	; 3
     982:	1c 92       	st	X, r1
     984:	1e 92       	st	-X, r1
     986:	12 97       	sbiw	r26, 0x02	; 2
	Menu_new_submenu(main_menu, "HIGH SCORE", ">HIGH SCORE<", &f_high_score);
	Menu_new_submenu(main_menu, "CALIBRATE", ">CALIBRATE<", &f_calibrate);
	Menu_new_submenu(main_menu, "DIFFICULTY", ">DIFFICULTY<", &f_difficulty);
	Menu_new_submenu(main_menu, "DEBUGGING", ">DEBUGGING<", &f_debugging); */
	
	Menu_new_submenu(main_menu, "NEW GAME", &f_newgame);
     988:	41 e3       	ldi	r20, 0x31	; 49
     98a:	54 e0       	ldi	r21, 0x04	; 4
     98c:	69 e4       	ldi	r22, 0x49	; 73
     98e:	71 e0       	ldi	r23, 0x01	; 1
     990:	c8 01       	movw	r24, r16
     992:	0e 94 5e 04 	call	0x8bc	; 0x8bc <Menu_new_submenu>
	Menu_new_submenu(main_menu, "HIGH SCORE", &f_high_score);
     996:	45 e5       	ldi	r20, 0x55	; 85
     998:	54 e0       	ldi	r21, 0x04	; 4
     99a:	62 e5       	ldi	r22, 0x52	; 82
     99c:	71 e0       	ldi	r23, 0x01	; 1
     99e:	c8 01       	movw	r24, r16
     9a0:	0e 94 5e 04 	call	0x8bc	; 0x8bc <Menu_new_submenu>
	Menu_new_submenu(main_menu, "CALIBRATE", &f_calibrate);
     9a4:	4c e4       	ldi	r20, 0x4C	; 76
     9a6:	54 e0       	ldi	r21, 0x04	; 4
     9a8:	6d e5       	ldi	r22, 0x5D	; 93
     9aa:	71 e0       	ldi	r23, 0x01	; 1
     9ac:	c8 01       	movw	r24, r16
     9ae:	0e 94 5e 04 	call	0x8bc	; 0x8bc <Menu_new_submenu>
	Menu_new_submenu(main_menu, "DIFFICULTY", &f_difficulty);
     9b2:	43 e4       	ldi	r20, 0x43	; 67
     9b4:	54 e0       	ldi	r21, 0x04	; 4
     9b6:	67 e6       	ldi	r22, 0x67	; 103
     9b8:	71 e0       	ldi	r23, 0x01	; 1
     9ba:	c8 01       	movw	r24, r16
     9bc:	0e 94 5e 04 	call	0x8bc	; 0x8bc <Menu_new_submenu>
	Menu_new_submenu(main_menu, "DEBUGGING", &f_debugging);
     9c0:	4a e3       	ldi	r20, 0x3A	; 58
     9c2:	54 e0       	ldi	r21, 0x04	; 4
     9c4:	62 e7       	ldi	r22, 0x72	; 114
     9c6:	71 e0       	ldi	r23, 0x01	; 1
     9c8:	c8 01       	movw	r24, r16
     9ca:	0e 94 5e 04 	call	0x8bc	; 0x8bc <Menu_new_submenu>
	
	oled_center_print("PINGPONG",8);
     9ce:	68 e0       	ldi	r22, 0x08	; 8
     9d0:	70 e0       	ldi	r23, 0x00	; 0
     9d2:	8c e7       	ldi	r24, 0x7C	; 124
     9d4:	91 e0       	ldi	r25, 0x01	; 1
     9d6:	0e 94 72 06 	call	0xce4	; 0xce4 <oled_center_print>
	for (int i=0; i < (main_menu->numOfChildren); i++){
     9da:	f8 01       	movw	r30, r16
     9dc:	86 81       	ldd	r24, Z+6	; 0x06
     9de:	97 81       	ldd	r25, Z+7	; 0x07
     9e0:	18 16       	cp	r1, r24
     9e2:	19 06       	cpc	r1, r25
     9e4:	2c f5       	brge	.+74     	; 0xa30 <menu_init+0xe8>
     9e6:	68 94       	set
     9e8:	ff 24       	eor	r15, r15
     9ea:	f1 f8       	bld	r15, 1
     9ec:	c0 e0       	ldi	r28, 0x00	; 0
     9ee:	d0 e0       	ldi	r29, 0x00	; 0
		oled_goto_page(header_pages+i);
     9f0:	8f 2d       	mov	r24, r15
     9f2:	0e 94 41 05 	call	0xa82	; 0xa82 <oled_goto_page>
		oled_center_print(main_menu->children[i]->name, fontsize);
     9f6:	60 91 0a 01 	lds	r22, 0x010A	; 0x80010a <fontsize>
     9fa:	70 91 0b 01 	lds	r23, 0x010B	; 0x80010b <fontsize+0x1>
     9fe:	ce 01       	movw	r24, r28
     a00:	88 0f       	add	r24, r24
     a02:	99 1f       	adc	r25, r25
     a04:	d8 01       	movw	r26, r16
     a06:	14 96       	adiw	r26, 0x04	; 4
     a08:	ed 91       	ld	r30, X+
     a0a:	fc 91       	ld	r31, X
     a0c:	15 97       	sbiw	r26, 0x05	; 5
     a0e:	e8 0f       	add	r30, r24
     a10:	f9 1f       	adc	r31, r25
     a12:	01 90       	ld	r0, Z+
     a14:	f0 81       	ld	r31, Z
     a16:	e0 2d       	mov	r30, r0
     a18:	80 85       	ldd	r24, Z+8	; 0x08
     a1a:	91 85       	ldd	r25, Z+9	; 0x09
     a1c:	0e 94 72 06 	call	0xce4	; 0xce4 <oled_center_print>
	Menu_new_submenu(main_menu, "CALIBRATE", &f_calibrate);
	Menu_new_submenu(main_menu, "DIFFICULTY", &f_difficulty);
	Menu_new_submenu(main_menu, "DEBUGGING", &f_debugging);
	
	oled_center_print("PINGPONG",8);
	for (int i=0; i < (main_menu->numOfChildren); i++){
     a20:	21 96       	adiw	r28, 0x01	; 1
     a22:	f3 94       	inc	r15
     a24:	f8 01       	movw	r30, r16
     a26:	86 81       	ldd	r24, Z+6	; 0x06
     a28:	97 81       	ldd	r25, Z+7	; 0x07
     a2a:	c8 17       	cp	r28, r24
     a2c:	d9 07       	cpc	r29, r25
     a2e:	04 f3       	brlt	.-64     	; 0x9f0 <menu_init+0xa8>
		oled_goto_page(header_pages+i);
		oled_center_print(main_menu->children[i]->name, fontsize);
	}
	oled_goto_page(header_pages);
     a30:	82 e0       	ldi	r24, 0x02	; 2
     a32:	0e 94 41 05 	call	0xa82	; 0xa82 <oled_goto_page>
	oled_center_print(main_menu->children[0]->nameArrow,fontsize);
     a36:	60 91 0a 01 	lds	r22, 0x010A	; 0x80010a <fontsize>
     a3a:	70 91 0b 01 	lds	r23, 0x010B	; 0x80010b <fontsize+0x1>
     a3e:	d8 01       	movw	r26, r16
     a40:	14 96       	adiw	r26, 0x04	; 4
     a42:	ed 91       	ld	r30, X+
     a44:	fc 91       	ld	r31, X
     a46:	15 97       	sbiw	r26, 0x05	; 5
     a48:	01 90       	ld	r0, Z+
     a4a:	f0 81       	ld	r31, Z
     a4c:	e0 2d       	mov	r30, r0
     a4e:	82 85       	ldd	r24, Z+10	; 0x0a
     a50:	93 85       	ldd	r25, Z+11	; 0x0b
     a52:	0e 94 72 06 	call	0xce4	; 0xce4 <oled_center_print>
	
	curr_menu = main_menu;
     a56:	10 93 eb 01 	sts	0x01EB, r17	; 0x8001eb <__data_end+0x1>
     a5a:	00 93 ea 01 	sts	0x01EA, r16	; 0x8001ea <__data_end>
	
}
     a5e:	df 91       	pop	r29
     a60:	cf 91       	pop	r28
     a62:	1f 91       	pop	r17
     a64:	0f 91       	pop	r16
     a66:	ff 90       	pop	r15
     a68:	08 95       	ret

00000a6a <oled_mode>:
	}
	oled_goto_pos(4,0);
	for (int j=0; j<1024; j++){
		ext_oled_data[j] = 0xff;
	}
	oled_mode(PAGE_MODE);
     a6a:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
     a6e:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
     a72:	90 e2       	ldi	r25, 0x20	; 32
     a74:	90 83       	st	Z, r25
     a76:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
     a7a:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
     a7e:	80 83       	st	Z, r24
     a80:	08 95       	ret

00000a82 <oled_goto_page>:
     a82:	88 30       	cpi	r24, 0x08	; 8
     a84:	48 f0       	brcs	.+18     	; 0xa98 <oled_goto_page+0x16>
     a86:	85 e8       	ldi	r24, 0x85	; 133
     a88:	91 e0       	ldi	r25, 0x01	; 1
     a8a:	9f 93       	push	r25
     a8c:	8f 93       	push	r24
     a8e:	0e 94 8e 0a 	call	0x151c	; 0x151c <printf>
     a92:	0f 90       	pop	r0
     a94:	0f 90       	pop	r0
     a96:	08 95       	ret
     a98:	90 eb       	ldi	r25, 0xB0	; 176
     a9a:	98 0f       	add	r25, r24
     a9c:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
     aa0:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
     aa4:	90 83       	st	Z, r25
     aa6:	90 e0       	ldi	r25, 0x00	; 0
     aa8:	90 93 ef 01 	sts	0x01EF, r25	; 0x8001ef <oled_position+0x1>
     aac:	80 93 ee 01 	sts	0x01EE, r24	; 0x8001ee <oled_position>
     ab0:	08 95       	ret

00000ab2 <oled_goto_col>:
     ab2:	88 23       	and	r24, r24
     ab4:	4c f4       	brge	.+18     	; 0xac8 <oled_goto_col+0x16>
     ab6:	85 e8       	ldi	r24, 0x85	; 133
     ab8:	91 e0       	ldi	r25, 0x01	; 1
     aba:	9f 93       	push	r25
     abc:	8f 93       	push	r24
     abe:	0e 94 8e 0a 	call	0x151c	; 0x151c <printf>
     ac2:	0f 90       	pop	r0
     ac4:	0f 90       	pop	r0
     ac6:	08 95       	ret
     ac8:	28 2f       	mov	r18, r24
     aca:	2f 70       	andi	r18, 0x0F	; 15
     acc:	98 2f       	mov	r25, r24
     ace:	92 95       	swap	r25
     ad0:	9f 70       	andi	r25, 0x0F	; 15
     ad2:	90 5f       	subi	r25, 0xF0	; 240
     ad4:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
     ad8:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
     adc:	90 83       	st	Z, r25
     ade:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
     ae2:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
     ae6:	20 83       	st	Z, r18
     ae8:	90 e0       	ldi	r25, 0x00	; 0
     aea:	90 93 f1 01 	sts	0x01F1, r25	; 0x8001f1 <oled_position+0x3>
     aee:	80 93 f0 01 	sts	0x01F0, r24	; 0x8001f0 <oled_position+0x2>
     af2:	08 95       	ret

00000af4 <oled_goto_pos>:
     af4:	cf 93       	push	r28
     af6:	c6 2f       	mov	r28, r22
     af8:	0e 94 41 05 	call	0xa82	; 0xa82 <oled_goto_page>
     afc:	8c 2f       	mov	r24, r28
     afe:	0e 94 59 05 	call	0xab2	; 0xab2 <oled_goto_col>
     b02:	cf 91       	pop	r28
     b04:	08 95       	ret

00000b06 <oled_home>:
     b06:	60 e0       	ldi	r22, 0x00	; 0
     b08:	80 e0       	ldi	r24, 0x00	; 0
     b0a:	0e 94 7a 05 	call	0xaf4	; 0xaf4 <oled_goto_pos>
     b0e:	08 95       	ret

00000b10 <oled_clear_screen>:
     b10:	60 e0       	ldi	r22, 0x00	; 0
     b12:	80 e0       	ldi	r24, 0x00	; 0
     b14:	0e 94 7a 05 	call	0xaf4	; 0xaf4 <oled_goto_pos>
     b18:	80 e0       	ldi	r24, 0x00	; 0
     b1a:	0e 94 35 05 	call	0xa6a	; 0xa6a <oled_mode>
     b1e:	80 e0       	ldi	r24, 0x00	; 0
     b20:	90 e0       	ldi	r25, 0x00	; 0
     b22:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <ext_oled_data>
     b26:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <ext_oled_data+0x1>
     b2a:	e8 0f       	add	r30, r24
     b2c:	f9 1f       	adc	r31, r25
     b2e:	10 82       	st	Z, r1
     b30:	01 96       	adiw	r24, 0x01	; 1
     b32:	81 15       	cp	r24, r1
     b34:	24 e0       	ldi	r18, 0x04	; 4
     b36:	92 07       	cpc	r25, r18
     b38:	a1 f7       	brne	.-24     	; 0xb22 <oled_clear_screen+0x12>
     b3a:	60 e0       	ldi	r22, 0x00	; 0
     b3c:	84 e0       	ldi	r24, 0x04	; 4
     b3e:	0e 94 7a 05 	call	0xaf4	; 0xaf4 <oled_goto_pos>
     b42:	80 e0       	ldi	r24, 0x00	; 0
     b44:	90 e0       	ldi	r25, 0x00	; 0
     b46:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <ext_oled_data>
     b4a:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <ext_oled_data+0x1>
     b4e:	e8 0f       	add	r30, r24
     b50:	f9 1f       	adc	r31, r25
     b52:	10 82       	st	Z, r1
     b54:	01 96       	adiw	r24, 0x01	; 1
     b56:	81 15       	cp	r24, r1
     b58:	24 e0       	ldi	r18, 0x04	; 4
     b5a:	92 07       	cpc	r25, r18
     b5c:	a1 f7       	brne	.-24     	; 0xb46 <oled_clear_screen+0x36>
     b5e:	82 e0       	ldi	r24, 0x02	; 2
     b60:	0e 94 35 05 	call	0xa6a	; 0xa6a <oled_mode>
     b64:	08 95       	ret

00000b66 <oled_reset>:
     b66:	0e 94 83 05 	call	0xb06	; 0xb06 <oled_home>
     b6a:	0e 94 88 05 	call	0xb10	; 0xb10 <oled_clear_screen>
     b6e:	82 e0       	ldi	r24, 0x02	; 2
     b70:	0e 94 35 05 	call	0xa6a	; 0xa6a <oled_mode>
     b74:	08 95       	ret

00000b76 <oled_write_char>:
}


void oled_write_char(char c, int fs){
	c=c-32;
     b76:	80 52       	subi	r24, 0x20	; 32
	
	switch(fs){
     b78:	66 30       	cpi	r22, 0x06	; 6
     b7a:	71 05       	cpc	r23, r1
     b7c:	09 f4       	brne	.+2      	; 0xb80 <oled_write_char+0xa>
     b7e:	3b c0       	rjmp	.+118    	; 0xbf6 <oled_write_char+0x80>
     b80:	68 30       	cpi	r22, 0x08	; 8
     b82:	71 05       	cpc	r23, r1
     b84:	29 f0       	breq	.+10     	; 0xb90 <oled_write_char+0x1a>
     b86:	64 30       	cpi	r22, 0x04	; 4
     b88:	71 05       	cpc	r23, r1
     b8a:	09 f0       	breq	.+2      	; 0xb8e <oled_write_char+0x18>
     b8c:	80 c0       	rjmp	.+256    	; 0xc8e <oled_write_char+0x118>
     b8e:	5b c0       	rjmp	.+182    	; 0xc46 <oled_write_char+0xd0>
		case 8 :
			for(int i=0; i<fontsize;i++){
     b90:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <fontsize>
     b94:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <fontsize+0x1>
     b98:	12 16       	cp	r1, r18
     b9a:	13 06       	cpc	r1, r19
     b9c:	0c f0       	brlt	.+2      	; 0xba0 <oled_write_char+0x2a>
     b9e:	77 c0       	rjmp	.+238    	; 0xc8e <oled_write_char+0x118>
     ba0:	90 e0       	ldi	r25, 0x00	; 0
     ba2:	88 0f       	add	r24, r24
     ba4:	99 1f       	adc	r25, r25
     ba6:	88 0f       	add	r24, r24
     ba8:	99 1f       	adc	r25, r25
     baa:	88 0f       	add	r24, r24
     bac:	99 1f       	adc	r25, r25
     bae:	20 e0       	ldi	r18, 0x00	; 0
     bb0:	30 e0       	ldi	r19, 0x00	; 0
				oled_wrd(pgm_read_word(&font8[c][i]));
				oled_position.coloumn++;
     bb2:	ae ee       	ldi	r26, 0xEE	; 238
     bb4:	b1 e0       	ldi	r27, 0x01	; 1
	c=c-32;
	
	switch(fs){
		case 8 :
			for(int i=0; i<fontsize;i++){
				oled_wrd(pgm_read_word(&font8[c][i]));
     bb6:	f9 01       	movw	r30, r18
     bb8:	e8 0f       	add	r30, r24
     bba:	f9 1f       	adc	r31, r25
     bbc:	ea 5d       	subi	r30, 0xDA	; 218
     bbe:	fb 4f       	sbci	r31, 0xFB	; 251
     bc0:	45 91       	lpm	r20, Z+
     bc2:	54 91       	lpm	r21, Z
void oled_wrc(uint8_t data){
	ext_oled_command[0] = data;
}
//oled write data
void oled_wrd(uint8_t data){
	ext_oled_data[0] = data;
     bc4:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <ext_oled_data>
     bc8:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <ext_oled_data+0x1>
     bcc:	40 83       	st	Z, r20
	
	switch(fs){
		case 8 :
			for(int i=0; i<fontsize;i++){
				oled_wrd(pgm_read_word(&font8[c][i]));
				oled_position.coloumn++;
     bce:	12 96       	adiw	r26, 0x02	; 2
     bd0:	4d 91       	ld	r20, X+
     bd2:	5c 91       	ld	r21, X
     bd4:	13 97       	sbiw	r26, 0x03	; 3
     bd6:	4f 5f       	subi	r20, 0xFF	; 255
     bd8:	5f 4f       	sbci	r21, 0xFF	; 255
     bda:	13 96       	adiw	r26, 0x03	; 3
     bdc:	5c 93       	st	X, r21
     bde:	4e 93       	st	-X, r20
     be0:	12 97       	sbiw	r26, 0x02	; 2
void oled_write_char(char c, int fs){
	c=c-32;
	
	switch(fs){
		case 8 :
			for(int i=0; i<fontsize;i++){
     be2:	2f 5f       	subi	r18, 0xFF	; 255
     be4:	3f 4f       	sbci	r19, 0xFF	; 255
     be6:	40 91 0a 01 	lds	r20, 0x010A	; 0x80010a <fontsize>
     bea:	50 91 0b 01 	lds	r21, 0x010B	; 0x80010b <fontsize+0x1>
     bee:	24 17       	cp	r18, r20
     bf0:	35 07       	cpc	r19, r21
     bf2:	0c f3       	brlt	.-62     	; 0xbb6 <oled_write_char+0x40>
     bf4:	08 95       	ret
     bf6:	90 e0       	ldi	r25, 0x00	; 0
     bf8:	9c 01       	movw	r18, r24
     bfa:	22 0f       	add	r18, r18
     bfc:	33 1f       	adc	r19, r19
     bfe:	82 0f       	add	r24, r18
     c00:	93 1f       	adc	r25, r19
     c02:	88 0f       	add	r24, r24
     c04:	99 1f       	adc	r25, r25


void oled_write_char(char c, int fs){
	c=c-32;
	
	switch(fs){
     c06:	20 e0       	ldi	r18, 0x00	; 0
     c08:	30 e0       	ldi	r19, 0x00	; 0
			}
			break;
		case 6 :
			for(int i=0; i<6;i++){
				oled_wrd(pgm_read_word(&font6[c][i]));
				oled_position.coloumn++;
     c0a:	ae ee       	ldi	r26, 0xEE	; 238
     c0c:	b1 e0       	ldi	r27, 0x01	; 1
				oled_position.coloumn++;
			}
			break;
		case 6 :
			for(int i=0; i<6;i++){
				oled_wrd(pgm_read_word(&font6[c][i]));
     c0e:	f9 01       	movw	r30, r18
     c10:	e8 0f       	add	r30, r24
     c12:	f9 1f       	adc	r31, r25
     c14:	e4 51       	subi	r30, 0x14	; 20
     c16:	fe 4f       	sbci	r31, 0xFE	; 254
     c18:	45 91       	lpm	r20, Z+
     c1a:	54 91       	lpm	r21, Z
void oled_wrc(uint8_t data){
	ext_oled_command[0] = data;
}
//oled write data
void oled_wrd(uint8_t data){
	ext_oled_data[0] = data;
     c1c:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <ext_oled_data>
     c20:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <ext_oled_data+0x1>
     c24:	40 83       	st	Z, r20
			}
			break;
		case 6 :
			for(int i=0; i<6;i++){
				oled_wrd(pgm_read_word(&font6[c][i]));
				oled_position.coloumn++;
     c26:	12 96       	adiw	r26, 0x02	; 2
     c28:	4d 91       	ld	r20, X+
     c2a:	5c 91       	ld	r21, X
     c2c:	13 97       	sbiw	r26, 0x03	; 3
     c2e:	4f 5f       	subi	r20, 0xFF	; 255
     c30:	5f 4f       	sbci	r21, 0xFF	; 255
     c32:	13 96       	adiw	r26, 0x03	; 3
     c34:	5c 93       	st	X, r21
     c36:	4e 93       	st	-X, r20
     c38:	12 97       	sbiw	r26, 0x02	; 2
				oled_wrd(pgm_read_word(&font8[c][i]));
				oled_position.coloumn++;
			}
			break;
		case 6 :
			for(int i=0; i<6;i++){
     c3a:	2f 5f       	subi	r18, 0xFF	; 255
     c3c:	3f 4f       	sbci	r19, 0xFF	; 255
     c3e:	26 30       	cpi	r18, 0x06	; 6
     c40:	31 05       	cpc	r19, r1
     c42:	29 f7       	brne	.-54     	; 0xc0e <oled_write_char+0x98>
     c44:	08 95       	ret
     c46:	90 e0       	ldi	r25, 0x00	; 0
     c48:	88 0f       	add	r24, r24
     c4a:	99 1f       	adc	r25, r25
     c4c:	88 0f       	add	r24, r24
     c4e:	99 1f       	adc	r25, r25


void oled_write_char(char c, int fs){
	c=c-32;
	
	switch(fs){
     c50:	20 e0       	ldi	r18, 0x00	; 0
     c52:	30 e0       	ldi	r19, 0x00	; 0
			}
			break;
		case 4 :
			for(int i=0; i<4;i++){
				oled_wrd(pgm_read_word(&font4[c][i]));
				oled_position.coloumn++;
     c54:	ae ee       	ldi	r26, 0xEE	; 238
     c56:	b1 e0       	ldi	r27, 0x01	; 1
				oled_position.coloumn++;
			}
			break;
		case 4 :
			for(int i=0; i<4;i++){
				oled_wrd(pgm_read_word(&font4[c][i]));
     c58:	f9 01       	movw	r30, r18
     c5a:	e8 0f       	add	r30, r24
     c5c:	f9 1f       	adc	r31, r25
     c5e:	e0 59       	subi	r30, 0x90	; 144
     c60:	ff 4f       	sbci	r31, 0xFF	; 255
     c62:	45 91       	lpm	r20, Z+
     c64:	54 91       	lpm	r21, Z
void oled_wrc(uint8_t data){
	ext_oled_command[0] = data;
}
//oled write data
void oled_wrd(uint8_t data){
	ext_oled_data[0] = data;
     c66:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <ext_oled_data>
     c6a:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <ext_oled_data+0x1>
     c6e:	40 83       	st	Z, r20
			}
			break;
		case 4 :
			for(int i=0; i<4;i++){
				oled_wrd(pgm_read_word(&font4[c][i]));
				oled_position.coloumn++;
     c70:	12 96       	adiw	r26, 0x02	; 2
     c72:	4d 91       	ld	r20, X+
     c74:	5c 91       	ld	r21, X
     c76:	13 97       	sbiw	r26, 0x03	; 3
     c78:	4f 5f       	subi	r20, 0xFF	; 255
     c7a:	5f 4f       	sbci	r21, 0xFF	; 255
     c7c:	13 96       	adiw	r26, 0x03	; 3
     c7e:	5c 93       	st	X, r21
     c80:	4e 93       	st	-X, r20
     c82:	12 97       	sbiw	r26, 0x02	; 2
				oled_wrd(pgm_read_word(&font6[c][i]));
				oled_position.coloumn++;
			}
			break;
		case 4 :
			for(int i=0; i<4;i++){
     c84:	2f 5f       	subi	r18, 0xFF	; 255
     c86:	3f 4f       	sbci	r19, 0xFF	; 255
     c88:	24 30       	cpi	r18, 0x04	; 4
     c8a:	31 05       	cpc	r19, r1
     c8c:	29 f7       	brne	.-54     	; 0xc58 <oled_write_char+0xe2>
     c8e:	08 95       	ret

00000c90 <oled_print>:
	
}



void oled_print(char* word, int fs){
     c90:	cf 92       	push	r12
     c92:	df 92       	push	r13
     c94:	ef 92       	push	r14
     c96:	ff 92       	push	r15
     c98:	0f 93       	push	r16
     c9a:	1f 93       	push	r17
     c9c:	cf 93       	push	r28
     c9e:	df 93       	push	r29
     ca0:	ec 01       	movw	r28, r24
     ca2:	7b 01       	movw	r14, r22
     ca4:	8c 01       	movw	r16, r24
	for( int i = 0; i < strlen(word); i++){
     ca6:	c1 2c       	mov	r12, r1
     ca8:	d1 2c       	mov	r13, r1
     caa:	09 c0       	rjmp	.+18     	; 0xcbe <oled_print+0x2e>
		oled_write_char(word[i], fs);
     cac:	b7 01       	movw	r22, r14
     cae:	f8 01       	movw	r30, r16
     cb0:	81 91       	ld	r24, Z+
     cb2:	8f 01       	movw	r16, r30
     cb4:	0e 94 bb 05 	call	0xb76	; 0xb76 <oled_write_char>
}



void oled_print(char* word, int fs){
	for( int i = 0; i < strlen(word); i++){
     cb8:	ff ef       	ldi	r31, 0xFF	; 255
     cba:	cf 1a       	sub	r12, r31
     cbc:	df 0a       	sbc	r13, r31
     cbe:	fe 01       	movw	r30, r28
     cc0:	01 90       	ld	r0, Z+
     cc2:	00 20       	and	r0, r0
     cc4:	e9 f7       	brne	.-6      	; 0xcc0 <oled_print+0x30>
     cc6:	31 97       	sbiw	r30, 0x01	; 1
     cc8:	ec 1b       	sub	r30, r28
     cca:	fd 0b       	sbc	r31, r29
     ccc:	ce 16       	cp	r12, r30
     cce:	df 06       	cpc	r13, r31
     cd0:	68 f3       	brcs	.-38     	; 0xcac <oled_print+0x1c>
		oled_write_char(word[i], fs);
	}
}
     cd2:	df 91       	pop	r29
     cd4:	cf 91       	pop	r28
     cd6:	1f 91       	pop	r17
     cd8:	0f 91       	pop	r16
     cda:	ff 90       	pop	r15
     cdc:	ef 90       	pop	r14
     cde:	df 90       	pop	r13
     ce0:	cf 90       	pop	r12
     ce2:	08 95       	ret

00000ce4 <oled_center_print>:

void oled_center_print(char* word, int fs){
     ce4:	0f 93       	push	r16
     ce6:	1f 93       	push	r17
     ce8:	cf 93       	push	r28
     cea:	df 93       	push	r29
     cec:	ec 01       	movw	r28, r24
     cee:	8b 01       	movw	r16, r22
	oled_goto_col(63-(strlen(word)*fs/2));
     cf0:	fc 01       	movw	r30, r24
     cf2:	01 90       	ld	r0, Z+
     cf4:	00 20       	and	r0, r0
     cf6:	e9 f7       	brne	.-6      	; 0xcf2 <oled_center_print+0xe>
     cf8:	31 97       	sbiw	r30, 0x01	; 1
     cfa:	e8 1b       	sub	r30, r24
     cfc:	f9 0b       	sbc	r31, r25
     cfe:	6e 9f       	mul	r22, r30
     d00:	90 01       	movw	r18, r0
     d02:	6f 9f       	mul	r22, r31
     d04:	30 0d       	add	r19, r0
     d06:	7e 9f       	mul	r23, r30
     d08:	30 0d       	add	r19, r0
     d0a:	11 24       	eor	r1, r1
     d0c:	36 95       	lsr	r19
     d0e:	27 95       	ror	r18
     d10:	8f e3       	ldi	r24, 0x3F	; 63
     d12:	82 1b       	sub	r24, r18
     d14:	0e 94 59 05 	call	0xab2	; 0xab2 <oled_goto_col>
	oled_print(word, fs);
     d18:	b8 01       	movw	r22, r16
     d1a:	ce 01       	movw	r24, r28
     d1c:	0e 94 48 06 	call	0xc90	; 0xc90 <oled_print>
}
     d20:	df 91       	pop	r29
     d22:	cf 91       	pop	r28
     d24:	1f 91       	pop	r17
     d26:	0f 91       	pop	r16
     d28:	08 95       	ret

00000d2a <oled_arrow>:

char* oled_arrow(char* name){
     d2a:	0f 93       	push	r16
     d2c:	1f 93       	push	r17
     d2e:	cf 93       	push	r28
     d30:	df 93       	push	r29
     d32:	8c 01       	movw	r16, r24
	char* str = malloc(sizeof(char)*20);
     d34:	84 e1       	ldi	r24, 0x14	; 20
     d36:	90 e0       	ldi	r25, 0x00	; 0
     d38:	0e 94 48 08 	call	0x1090	; 0x1090 <malloc>
     d3c:	ec 01       	movw	r28, r24
	strcpy(str,">");
     d3e:	8e e3       	ldi	r24, 0x3E	; 62
     d40:	90 e0       	ldi	r25, 0x00	; 0
     d42:	99 83       	std	Y+1, r25	; 0x01
     d44:	88 83       	st	Y, r24
	strcat(str,name);
     d46:	b8 01       	movw	r22, r16
     d48:	ce 01       	movw	r24, r28
     d4a:	0e 94 38 0a 	call	0x1470	; 0x1470 <strcat>
	strcat(str,"<");
     d4e:	fe 01       	movw	r30, r28
     d50:	01 90       	ld	r0, Z+
     d52:	00 20       	and	r0, r0
     d54:	e9 f7       	brne	.-6      	; 0xd50 <oled_arrow+0x26>
     d56:	31 97       	sbiw	r30, 0x01	; 1
     d58:	8c e3       	ldi	r24, 0x3C	; 60
     d5a:	90 e0       	ldi	r25, 0x00	; 0
     d5c:	91 83       	std	Z+1, r25	; 0x01
     d5e:	80 83       	st	Z, r24
	return str;
}
     d60:	ce 01       	movw	r24, r28
     d62:	df 91       	pop	r29
     d64:	cf 91       	pop	r28
     d66:	1f 91       	pop	r17
     d68:	0f 91       	pop	r16
     d6a:	08 95       	ret

00000d6c <oled_init>:
int fontsize = 8;


//oled write command
void oled_wrc(uint8_t data){
	ext_oled_command[0] = data;
     d6c:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
     d70:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
     d74:	8e ea       	ldi	r24, 0xAE	; 174
     d76:	80 83       	st	Z, r24
     d78:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
     d7c:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
     d80:	81 ea       	ldi	r24, 0xA1	; 161
     d82:	80 83       	st	Z, r24
     d84:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
     d88:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
     d8c:	8a ed       	ldi	r24, 0xDA	; 218
     d8e:	80 83       	st	Z, r24
     d90:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
     d94:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
     d98:	82 e1       	ldi	r24, 0x12	; 18
     d9a:	80 83       	st	Z, r24
     d9c:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
     da0:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
     da4:	88 ec       	ldi	r24, 0xC8	; 200
     da6:	80 83       	st	Z, r24
     da8:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
     dac:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
     db0:	88 ea       	ldi	r24, 0xA8	; 168
     db2:	80 83       	st	Z, r24
     db4:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
     db8:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
     dbc:	8f e3       	ldi	r24, 0x3F	; 63
     dbe:	80 83       	st	Z, r24
     dc0:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
     dc4:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
     dc8:	85 ed       	ldi	r24, 0xD5	; 213
     dca:	80 83       	st	Z, r24
     dcc:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
     dd0:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
     dd4:	80 e8       	ldi	r24, 0x80	; 128
     dd6:	80 83       	st	Z, r24
     dd8:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
     ddc:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
     de0:	81 e8       	ldi	r24, 0x81	; 129
     de2:	80 83       	st	Z, r24
     de4:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
     de8:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
     dec:	80 e5       	ldi	r24, 0x50	; 80
     dee:	80 83       	st	Z, r24
     df0:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
     df4:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
     df8:	89 ed       	ldi	r24, 0xD9	; 217
     dfa:	80 83       	st	Z, r24
     dfc:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
     e00:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
     e04:	81 e2       	ldi	r24, 0x21	; 33
     e06:	80 83       	st	Z, r24
     e08:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
     e0c:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
     e10:	80 e2       	ldi	r24, 0x20	; 32
     e12:	80 83       	st	Z, r24
     e14:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
     e18:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
     e1c:	82 e0       	ldi	r24, 0x02	; 2
     e1e:	80 83       	st	Z, r24
     e20:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
     e24:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
     e28:	8b ed       	ldi	r24, 0xDB	; 219
     e2a:	80 83       	st	Z, r24
     e2c:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
     e30:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
     e34:	80 e3       	ldi	r24, 0x30	; 48
     e36:	80 83       	st	Z, r24
     e38:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
     e3c:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
     e40:	8d ea       	ldi	r24, 0xAD	; 173
     e42:	80 83       	st	Z, r24
     e44:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
     e48:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
     e4c:	10 82       	st	Z, r1
     e4e:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
     e52:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
     e56:	84 ea       	ldi	r24, 0xA4	; 164
     e58:	80 83       	st	Z, r24
     e5a:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
     e5e:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
     e62:	86 ea       	ldi	r24, 0xA6	; 166
     e64:	80 83       	st	Z, r24
     e66:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
     e6a:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
     e6e:	8f ea       	ldi	r24, 0xAF	; 175
     e70:	80 83       	st	Z, r24
	      oled_wrc(0xad);        //master configuration
	      oled_wrc(0x00);
	      oled_wrc(0xa4);        //out follows RAM content
	      oled_wrc(0xa6);        //set normal display
	      oled_wrc(0xaf);        // display on
		  oled_clear_screen();
     e72:	0e 94 88 05 	call	0xb10	; 0xb10 <oled_clear_screen>
		  oled_goto_pos(0,0);
     e76:	60 e0       	ldi	r22, 0x00	; 0
     e78:	80 e0       	ldi	r24, 0x00	; 0
     e7a:	0e 94 7a 05 	call	0xaf4	; 0xaf4 <oled_goto_pos>
     e7e:	08 95       	ret

00000e80 <spi_init>:
#include <stdint.h>


void spi_init(void){
	/* Set MOSI, SCK , Slave select output*/
	DDRB |= (1<<DDB5)|(1<<DDB7)|(1<<DDB4);
     e80:	87 b3       	in	r24, 0x17	; 23
     e82:	80 6b       	ori	r24, 0xB0	; 176
     e84:	87 bb       	out	0x17, r24	; 23
	
	//Set pin 6 (MISO) as input.  
	DDRB &= ~(1<<DDB6);
     e86:	be 98       	cbi	0x17, 6	; 23
	
	/* Enable SPI, Master, set clock rate fck/16 */
	SPCR |= (1<<SPE)|(1<<MSTR)|(1<<SPR0);
     e88:	8d b1       	in	r24, 0x0d	; 13
     e8a:	81 65       	ori	r24, 0x51	; 81
     e8c:	8d b9       	out	0x0d, r24	; 13
	
	//Set slave select
	PORTB |= 1<<PB4;
     e8e:	c4 9a       	sbi	0x18, 4	; 24
     e90:	08 95       	ret

00000e92 <spi_send>:
}
void spi_send(uint8_t cData){
	/* Start transmission */
	SPDR = cData;
     e92:	8f b9       	out	0x0f, r24	; 15
	
	/* Wait for transmission complete */
	while(!(SPSR & (1<<SPIF)));
     e94:	77 9b       	sbis	0x0e, 7	; 14
     e96:	fe cf       	rjmp	.-4      	; 0xe94 <spi_send+0x2>
}
     e98:	08 95       	ret

00000e9a <spi_read>:

uint8_t spi_read(){
     e9a:	cf 93       	push	r28
	
	SPDR = 0x23;
     e9c:	83 e2       	ldi	r24, 0x23	; 35
     e9e:	8f b9       	out	0x0f, r24	; 15
	while(!(SPSR & (1<<SPIF)));
     ea0:	77 9b       	sbis	0x0e, 7	; 14
     ea2:	fe cf       	rjmp	.-4      	; 0xea0 <spi_read+0x6>
	
	uint8_t result,result2,result3;
	result = SPDR;
     ea4:	cf b1       	in	r28, 0x0f	; 15
	result2 = SPDR;
     ea6:	8f b1       	in	r24, 0x0f	; 15
	result3 = SPDR;
     ea8:	9f b1       	in	r25, 0x0f	; 15
	
	printf("1: %x, 2: %x, 3: %x \n\r", result, result2, result3);
     eaa:	1f 92       	push	r1
     eac:	9f 93       	push	r25
     eae:	1f 92       	push	r1
     eb0:	8f 93       	push	r24
     eb2:	1f 92       	push	r1
     eb4:	cf 93       	push	r28
     eb6:	86 ea       	ldi	r24, 0xA6	; 166
     eb8:	91 e0       	ldi	r25, 0x01	; 1
     eba:	9f 93       	push	r25
     ebc:	8f 93       	push	r24
     ebe:	0e 94 8e 0a 	call	0x151c	; 0x151c <printf>
	
	return result;
     ec2:	8d b7       	in	r24, 0x3d	; 61
     ec4:	9e b7       	in	r25, 0x3e	; 62
     ec6:	08 96       	adiw	r24, 0x08	; 8
     ec8:	0f b6       	in	r0, 0x3f	; 63
     eca:	f8 94       	cli
     ecc:	9e bf       	out	0x3e, r25	; 62
     ece:	0f be       	out	0x3f, r0	; 63
     ed0:	8d bf       	out	0x3d, r24	; 61
     ed2:	8c 2f       	mov	r24, r28
     ed4:	cf 91       	pop	r28
     ed6:	08 95       	ret

00000ed8 <USART_Init>:
     ed8:	90 bd       	out	0x20, r25	; 32
     eda:	89 b9       	out	0x09, r24	; 9
     edc:	88 e1       	ldi	r24, 0x18	; 24
     ede:	8a b9       	out	0x0a, r24	; 10
     ee0:	8e e8       	ldi	r24, 0x8E	; 142
     ee2:	80 bd       	out	0x20, r24	; 32
     ee4:	60 e0       	ldi	r22, 0x00	; 0
     ee6:	70 e0       	ldi	r23, 0x00	; 0
     ee8:	8d e7       	ldi	r24, 0x7D	; 125
     eea:	97 e0       	ldi	r25, 0x07	; 7
     eec:	0e 94 43 0a 	call	0x1486	; 0x1486 <fdevopen>
     ef0:	08 95       	ret

00000ef2 <USART_Transmit>:
     ef2:	5d 9b       	sbis	0x0b, 5	; 11
     ef4:	fe cf       	rjmp	.-4      	; 0xef2 <USART_Transmit>
     ef6:	8c b9       	out	0x0c, r24	; 12
     ef8:	08 95       	ret

00000efa <USART_PUTCHAR>:
     efa:	0e 94 79 07 	call	0xef2	; 0xef2 <USART_Transmit>
     efe:	80 e0       	ldi	r24, 0x00	; 0
     f00:	90 e0       	ldi	r25, 0x00	; 0
     f02:	08 95       	ret

00000f04 <xmem_init>:
#include <avr/io.h>
#include "DRIVER_XMEM.h"

//Init function
void xmem_init(void){
	MCUCR |= (1 << SRE); //enable XMEM
     f04:	85 b7       	in	r24, 0x35	; 53
     f06:	80 68       	ori	r24, 0x80	; 128
     f08:	85 bf       	out	0x35, r24	; 53
	SFIOR |= (1 << XMM2); //Mask unused bits/pins, which is PC4-PC7
     f0a:	80 b7       	in	r24, 0x30	; 48
     f0c:	80 62       	ori	r24, 0x20	; 32
     f0e:	80 bf       	out	0x30, r24	; 48
     f10:	08 95       	ret

00000f12 <xmem_write>:
}
//Write function. //Somehow works badly when calling this function from main? Works perfectly by just copy-pasting code to main.
void xmem_write(uint8_t data, uint16_t addr){
	volatile char *ext_mem = (char *) 0x1000;
	ext_mem[addr] = data;
     f12:	fb 01       	movw	r30, r22
     f14:	f0 5f       	subi	r31, 0xF0	; 240
     f16:	80 83       	st	Z, r24
     f18:	08 95       	ret

00000f1a <xmem_read>:
}

//Read function
uint8_t xmem_read(uint16_t addr){
	volatile char *ext_mem = (char *) 0x1000;
	uint8_t ret_val = ext_mem[addr];
     f1a:	90 5f       	subi	r25, 0xF0	; 240
     f1c:	fc 01       	movw	r30, r24
     f1e:	80 81       	ld	r24, Z
	return ret_val;
}
     f20:	08 95       	ret

00000f22 <mcp_read>:
	uint8_t status = spi_read();
	
	PORTB |= (1<<PB4);
	
	return status;
}
     f22:	cf 93       	push	r28
     f24:	c8 2f       	mov	r28, r24
     f26:	c4 98       	cbi	0x18, 4	; 24
     f28:	83 e0       	ldi	r24, 0x03	; 3
     f2a:	0e 94 49 07 	call	0xe92	; 0xe92 <spi_send>
     f2e:	8c 2f       	mov	r24, r28
     f30:	0e 94 49 07 	call	0xe92	; 0xe92 <spi_send>
     f34:	0e 94 4d 07 	call	0xe9a	; 0xe9a <spi_read>
     f38:	c4 9a       	sbi	0x18, 4	; 24
     f3a:	cf 91       	pop	r28
     f3c:	08 95       	ret

00000f3e <mcp_bit_modify>:

//Setting or clearing individual bits in specific status and control registers. Not all registers are modifiable, see pg. 63.
//Mask determines which bits are allowed to change.
//Data determines what value the modified bits in the register will change to.
void mcp_bit_modify(uint8_t addr, uint8_t mask, uint8_t data){
     f3e:	1f 93       	push	r17
     f40:	cf 93       	push	r28
     f42:	df 93       	push	r29
     f44:	18 2f       	mov	r17, r24
     f46:	d6 2f       	mov	r29, r22
     f48:	c4 2f       	mov	r28, r20
	PORTB &= ~(1<<PB4);
     f4a:	c4 98       	cbi	0x18, 4	; 24
	
	spi_send(MCP_BITMOD);
     f4c:	85 e0       	ldi	r24, 0x05	; 5
     f4e:	0e 94 49 07 	call	0xe92	; 0xe92 <spi_send>
	spi_send(addr);
     f52:	81 2f       	mov	r24, r17
     f54:	0e 94 49 07 	call	0xe92	; 0xe92 <spi_send>
	spi_send(mask);
     f58:	8d 2f       	mov	r24, r29
     f5a:	0e 94 49 07 	call	0xe92	; 0xe92 <spi_send>
	spi_send(data);
     f5e:	8c 2f       	mov	r24, r28
     f60:	0e 94 49 07 	call	0xe92	; 0xe92 <spi_send>
	
	PORTB |= (1<<PB4);
     f64:	c4 9a       	sbi	0x18, 4	; 24
	
}
     f66:	df 91       	pop	r29
     f68:	cf 91       	pop	r28
     f6a:	1f 91       	pop	r17
     f6c:	08 95       	ret

00000f6e <mcp_reset>:

//Re-initialize the internal registers of the MCP2515
void mcp_reset(void){
	PORTB &= ~(1<<PB4);
     f6e:	c4 98       	cbi	0x18, 4	; 24
	
	spi_send(MCP_RESET); //0xC0		0b1100 0000
     f70:	80 ec       	ldi	r24, 0xC0	; 192
     f72:	0e 94 49 07 	call	0xe92	; 0xe92 <spi_send>
	
	PORTB |= (1<<PB4);
     f76:	c4 9a       	sbi	0x18, 4	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     f78:	8f e3       	ldi	r24, 0x3F	; 63
     f7a:	9c e9       	ldi	r25, 0x9C	; 156
     f7c:	01 97       	sbiw	r24, 0x01	; 1
     f7e:	f1 f7       	brne	.-4      	; 0xf7c <mcp_reset+0xe>
     f80:	00 c0       	rjmp	.+0      	; 0xf82 <mcp_reset+0x14>
     f82:	00 00       	nop
     f84:	08 95       	ret

00000f86 <mcp_init>:
}

void mcp_init(){
	
	uint8_t value;
	spi_init();
     f86:	0e 94 40 07 	call	0xe80	; 0xe80 <spi_init>
	mcp_reset();
     f8a:	0e 94 b7 07 	call	0xf6e	; 0xf6e <mcp_reset>
	
	value = mcp_read(MCP_CANSTAT);
     f8e:	8e e0       	ldi	r24, 0x0E	; 14
     f90:	0e 94 91 07 	call	0xf22	; 0xf22 <mcp_read>
	
 	if ((value & MODE_MASK) != MODE_CONFIG){
     f94:	98 2f       	mov	r25, r24
     f96:	90 7e       	andi	r25, 0xE0	; 224
     f98:	90 38       	cpi	r25, 0x80	; 128
     f9a:	61 f0       	breq	.+24     	; 0xfb4 <mcp_init+0x2e>
 		printf("Not in config mode after reset! value: %x \n\r", value);
     f9c:	1f 92       	push	r1
     f9e:	8f 93       	push	r24
     fa0:	8d eb       	ldi	r24, 0xBD	; 189
     fa2:	91 e0       	ldi	r25, 0x01	; 1
     fa4:	9f 93       	push	r25
     fa6:	8f 93       	push	r24
     fa8:	0e 94 8e 0a 	call	0x151c	; 0x151c <printf>
     fac:	0f 90       	pop	r0
     fae:	0f 90       	pop	r0
     fb0:	0f 90       	pop	r0
     fb2:	0f 90       	pop	r0
     fb4:	08 95       	ret

00000fb6 <main>:

#define MYUBRR FOSC/16/BAUD-1 //UART Baud Rate Register

int main(void){
	
	USART_Init(MYUBRR);
     fb6:	8f e1       	ldi	r24, 0x1F	; 31
     fb8:	90 e0       	ldi	r25, 0x00	; 0
     fba:	0e 94 6c 07 	call	0xed8	; 0xed8 <USART_Init>
	xmem_init();
     fbe:	0e 94 82 07 	call	0xf04	; 0xf04 <xmem_init>
	oled_init();
     fc2:	0e 94 b6 06 	call	0xd6c	; 0xd6c <oled_init>
	menu_init();
     fc6:	0e 94 a4 04 	call	0x948	; 0x948 <menu_init>
	adc_init();
     fca:	0e 94 c5 03 	call	0x78a	; 0x78a <adc_init>
	joystick_calibrate();
     fce:	0e 94 e1 03 	call	0x7c2	; 0x7c2 <joystick_calibrate>
	
	mcp_init();
     fd2:	0e 94 c3 07 	call	0xf86	; 0xf86 <mcp_init>
	
// 	mcp_write(MCP_CANCTRL,MODE_CONFIG);
	mcp_bit_modify(MCP_CANCTRL,MODE_MASK,MODE_CONFIG);
     fd6:	40 e8       	ldi	r20, 0x80	; 128
     fd8:	60 ee       	ldi	r22, 0xE0	; 224
     fda:	8f e0       	ldi	r24, 0x0F	; 15
     fdc:	0e 94 9f 07 	call	0xf3e	; 0xf3e <mcp_bit_modify>
	uint8_t value = mcp_read(MCP_CANSTAT);
     fe0:	8e e0       	ldi	r24, 0x0E	; 14
     fe2:	0e 94 91 07 	call	0xf22	; 0xf22 <mcp_read>
	
	if ((value & MODE_MASK) != MODE_CONFIG){
     fe6:	98 2f       	mov	r25, r24
     fe8:	90 7e       	andi	r25, 0xE0	; 224
     fea:	90 38       	cpi	r25, 0x80	; 128
     fec:	61 f0       	breq	.+24     	; 0x1006 <main+0x50>
		printf("Not in config mode after reset! value: %x \n\r", value);
     fee:	1f 92       	push	r1
     ff0:	8f 93       	push	r24
     ff2:	8d eb       	ldi	r24, 0xBD	; 189
     ff4:	91 e0       	ldi	r25, 0x01	; 1
     ff6:	9f 93       	push	r25
     ff8:	8f 93       	push	r24
     ffa:	0e 94 8e 0a 	call	0x151c	; 0x151c <printf>
     ffe:	0f 90       	pop	r0
    1000:	0f 90       	pop	r0
    1002:	0f 90       	pop	r0
    1004:	0f 90       	pop	r0
    1006:	ff cf       	rjmp	.-2      	; 0x1006 <main+0x50>

00001008 <util_sort>:
	t=*p;
	*p=*q;
	*q=t;
}

void util_sort(int a[],int n) {
    1008:	cf 93       	push	r28
    100a:	df 93       	push	r29
	int i,j,temp;

	for(i = 0;i < n-1;i++) {
    100c:	eb 01       	movw	r28, r22
    100e:	21 97       	sbiw	r28, 0x01	; 1
    1010:	1c 16       	cp	r1, r28
    1012:	1d 06       	cpc	r1, r29
    1014:	14 f5       	brge	.+68     	; 0x105a <util_sort+0x52>
    1016:	61 50       	subi	r22, 0x01	; 1
    1018:	70 48       	sbci	r23, 0x80	; 128
    101a:	66 0f       	add	r22, r22
    101c:	77 1f       	adc	r23, r23
    101e:	68 0f       	add	r22, r24
    1020:	79 1f       	adc	r23, r25
    1022:	17 c0       	rjmp	.+46     	; 0x1052 <util_sort+0x4a>
		for(j = 0;j < n-i-1;j++) {
    1024:	fc 01       	movw	r30, r24
			if(a[j] > a[j+1])
    1026:	21 91       	ld	r18, Z+
    1028:	31 91       	ld	r19, Z+
    102a:	40 81       	ld	r20, Z
    102c:	51 81       	ldd	r21, Z+1	; 0x01
    102e:	42 17       	cp	r20, r18
    1030:	53 07       	cpc	r21, r19
    1032:	34 f4       	brge	.+12     	; 0x1040 <util_sort+0x38>
#include "util.h"

void util_swap(int *p,int *q) {
	int t;
	t=*p;
	*p=*q;
    1034:	df 01       	movw	r26, r30
    1036:	12 97       	sbiw	r26, 0x02	; 2
    1038:	4d 93       	st	X+, r20
    103a:	5c 93       	st	X, r21
	*q=t;
    103c:	31 83       	std	Z+1, r19	; 0x01
    103e:	20 83       	st	Z, r18

void util_sort(int a[],int n) {
	int i,j,temp;

	for(i = 0;i < n-1;i++) {
		for(j = 0;j < n-i-1;j++) {
    1040:	e6 17       	cp	r30, r22
    1042:	f7 07       	cpc	r31, r23
    1044:	81 f7       	brne	.-32     	; 0x1026 <util_sort+0x1e>
    1046:	21 97       	sbiw	r28, 0x01	; 1
    1048:	62 50       	subi	r22, 0x02	; 2
    104a:	71 09       	sbc	r23, r1
}

void util_sort(int a[],int n) {
	int i,j,temp;

	for(i = 0;i < n-1;i++) {
    104c:	68 17       	cp	r22, r24
    104e:	79 07       	cpc	r23, r25
    1050:	21 f0       	breq	.+8      	; 0x105a <util_sort+0x52>
		for(j = 0;j < n-i-1;j++) {
    1052:	1c 16       	cp	r1, r28
    1054:	1d 06       	cpc	r1, r29
    1056:	34 f3       	brlt	.-52     	; 0x1024 <util_sort+0x1c>
    1058:	f6 cf       	rjmp	.-20     	; 0x1046 <util_sort+0x3e>
			if(a[j] > a[j+1])
			util_swap(&a[j],&a[j+1]);
		}
	}
}
    105a:	df 91       	pop	r29
    105c:	cf 91       	pop	r28
    105e:	08 95       	ret

00001060 <util_median>:
int util_median(int a[], int n){
    1060:	0f 93       	push	r16
    1062:	1f 93       	push	r17
    1064:	cf 93       	push	r28
    1066:	df 93       	push	r29
    1068:	8c 01       	movw	r16, r24
    106a:	eb 01       	movw	r28, r22
	util_sort(a,n);
    106c:	0e 94 04 08 	call	0x1008	; 0x1008 <util_sort>
	n=((n+1)/2)-1;
    1070:	21 96       	adiw	r28, 0x01	; 1
    1072:	ce 01       	movw	r24, r28
    1074:	0a f4       	brpl	.+2      	; 0x1078 <util_median+0x18>
    1076:	01 96       	adiw	r24, 0x01	; 1
	return a[n];
    1078:	fc 01       	movw	r30, r24
    107a:	ee 7f       	andi	r30, 0xFE	; 254
    107c:	32 97       	sbiw	r30, 0x02	; 2
    107e:	e0 0f       	add	r30, r16
    1080:	f1 1f       	adc	r31, r17
    1082:	80 81       	ld	r24, Z
    1084:	91 81       	ldd	r25, Z+1	; 0x01
    1086:	df 91       	pop	r29
    1088:	cf 91       	pop	r28
    108a:	1f 91       	pop	r17
    108c:	0f 91       	pop	r16
    108e:	08 95       	ret

00001090 <malloc>:
    1090:	0f 93       	push	r16
    1092:	1f 93       	push	r17
    1094:	cf 93       	push	r28
    1096:	df 93       	push	r29
    1098:	82 30       	cpi	r24, 0x02	; 2
    109a:	91 05       	cpc	r25, r1
    109c:	10 f4       	brcc	.+4      	; 0x10a2 <malloc+0x12>
    109e:	82 e0       	ldi	r24, 0x02	; 2
    10a0:	90 e0       	ldi	r25, 0x00	; 0
    10a2:	e0 91 f4 01 	lds	r30, 0x01F4	; 0x8001f4 <__flp>
    10a6:	f0 91 f5 01 	lds	r31, 0x01F5	; 0x8001f5 <__flp+0x1>
    10aa:	20 e0       	ldi	r18, 0x00	; 0
    10ac:	30 e0       	ldi	r19, 0x00	; 0
    10ae:	a0 e0       	ldi	r26, 0x00	; 0
    10b0:	b0 e0       	ldi	r27, 0x00	; 0
    10b2:	30 97       	sbiw	r30, 0x00	; 0
    10b4:	19 f1       	breq	.+70     	; 0x10fc <malloc+0x6c>
    10b6:	40 81       	ld	r20, Z
    10b8:	51 81       	ldd	r21, Z+1	; 0x01
    10ba:	02 81       	ldd	r16, Z+2	; 0x02
    10bc:	13 81       	ldd	r17, Z+3	; 0x03
    10be:	48 17       	cp	r20, r24
    10c0:	59 07       	cpc	r21, r25
    10c2:	c8 f0       	brcs	.+50     	; 0x10f6 <malloc+0x66>
    10c4:	84 17       	cp	r24, r20
    10c6:	95 07       	cpc	r25, r21
    10c8:	69 f4       	brne	.+26     	; 0x10e4 <malloc+0x54>
    10ca:	10 97       	sbiw	r26, 0x00	; 0
    10cc:	31 f0       	breq	.+12     	; 0x10da <malloc+0x4a>
    10ce:	12 96       	adiw	r26, 0x02	; 2
    10d0:	0c 93       	st	X, r16
    10d2:	12 97       	sbiw	r26, 0x02	; 2
    10d4:	13 96       	adiw	r26, 0x03	; 3
    10d6:	1c 93       	st	X, r17
    10d8:	27 c0       	rjmp	.+78     	; 0x1128 <malloc+0x98>
    10da:	00 93 f4 01 	sts	0x01F4, r16	; 0x8001f4 <__flp>
    10de:	10 93 f5 01 	sts	0x01F5, r17	; 0x8001f5 <__flp+0x1>
    10e2:	22 c0       	rjmp	.+68     	; 0x1128 <malloc+0x98>
    10e4:	21 15       	cp	r18, r1
    10e6:	31 05       	cpc	r19, r1
    10e8:	19 f0       	breq	.+6      	; 0x10f0 <malloc+0x60>
    10ea:	42 17       	cp	r20, r18
    10ec:	53 07       	cpc	r21, r19
    10ee:	18 f4       	brcc	.+6      	; 0x10f6 <malloc+0x66>
    10f0:	9a 01       	movw	r18, r20
    10f2:	bd 01       	movw	r22, r26
    10f4:	ef 01       	movw	r28, r30
    10f6:	df 01       	movw	r26, r30
    10f8:	f8 01       	movw	r30, r16
    10fa:	db cf       	rjmp	.-74     	; 0x10b2 <malloc+0x22>
    10fc:	21 15       	cp	r18, r1
    10fe:	31 05       	cpc	r19, r1
    1100:	f9 f0       	breq	.+62     	; 0x1140 <malloc+0xb0>
    1102:	28 1b       	sub	r18, r24
    1104:	39 0b       	sbc	r19, r25
    1106:	24 30       	cpi	r18, 0x04	; 4
    1108:	31 05       	cpc	r19, r1
    110a:	80 f4       	brcc	.+32     	; 0x112c <malloc+0x9c>
    110c:	8a 81       	ldd	r24, Y+2	; 0x02
    110e:	9b 81       	ldd	r25, Y+3	; 0x03
    1110:	61 15       	cp	r22, r1
    1112:	71 05       	cpc	r23, r1
    1114:	21 f0       	breq	.+8      	; 0x111e <malloc+0x8e>
    1116:	fb 01       	movw	r30, r22
    1118:	93 83       	std	Z+3, r25	; 0x03
    111a:	82 83       	std	Z+2, r24	; 0x02
    111c:	04 c0       	rjmp	.+8      	; 0x1126 <malloc+0x96>
    111e:	90 93 f5 01 	sts	0x01F5, r25	; 0x8001f5 <__flp+0x1>
    1122:	80 93 f4 01 	sts	0x01F4, r24	; 0x8001f4 <__flp>
    1126:	fe 01       	movw	r30, r28
    1128:	32 96       	adiw	r30, 0x02	; 2
    112a:	44 c0       	rjmp	.+136    	; 0x11b4 <malloc+0x124>
    112c:	fe 01       	movw	r30, r28
    112e:	e2 0f       	add	r30, r18
    1130:	f3 1f       	adc	r31, r19
    1132:	81 93       	st	Z+, r24
    1134:	91 93       	st	Z+, r25
    1136:	22 50       	subi	r18, 0x02	; 2
    1138:	31 09       	sbc	r19, r1
    113a:	39 83       	std	Y+1, r19	; 0x01
    113c:	28 83       	st	Y, r18
    113e:	3a c0       	rjmp	.+116    	; 0x11b4 <malloc+0x124>
    1140:	20 91 f2 01 	lds	r18, 0x01F2	; 0x8001f2 <__brkval>
    1144:	30 91 f3 01 	lds	r19, 0x01F3	; 0x8001f3 <__brkval+0x1>
    1148:	23 2b       	or	r18, r19
    114a:	41 f4       	brne	.+16     	; 0x115c <malloc+0xcc>
    114c:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
    1150:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
    1154:	30 93 f3 01 	sts	0x01F3, r19	; 0x8001f3 <__brkval+0x1>
    1158:	20 93 f2 01 	sts	0x01F2, r18	; 0x8001f2 <__brkval>
    115c:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
    1160:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
    1164:	21 15       	cp	r18, r1
    1166:	31 05       	cpc	r19, r1
    1168:	41 f4       	brne	.+16     	; 0x117a <malloc+0xea>
    116a:	2d b7       	in	r18, 0x3d	; 61
    116c:	3e b7       	in	r19, 0x3e	; 62
    116e:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    1172:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    1176:	24 1b       	sub	r18, r20
    1178:	35 0b       	sbc	r19, r21
    117a:	e0 91 f2 01 	lds	r30, 0x01F2	; 0x8001f2 <__brkval>
    117e:	f0 91 f3 01 	lds	r31, 0x01F3	; 0x8001f3 <__brkval+0x1>
    1182:	e2 17       	cp	r30, r18
    1184:	f3 07       	cpc	r31, r19
    1186:	a0 f4       	brcc	.+40     	; 0x11b0 <malloc+0x120>
    1188:	2e 1b       	sub	r18, r30
    118a:	3f 0b       	sbc	r19, r31
    118c:	28 17       	cp	r18, r24
    118e:	39 07       	cpc	r19, r25
    1190:	78 f0       	brcs	.+30     	; 0x11b0 <malloc+0x120>
    1192:	ac 01       	movw	r20, r24
    1194:	4e 5f       	subi	r20, 0xFE	; 254
    1196:	5f 4f       	sbci	r21, 0xFF	; 255
    1198:	24 17       	cp	r18, r20
    119a:	35 07       	cpc	r19, r21
    119c:	48 f0       	brcs	.+18     	; 0x11b0 <malloc+0x120>
    119e:	4e 0f       	add	r20, r30
    11a0:	5f 1f       	adc	r21, r31
    11a2:	50 93 f3 01 	sts	0x01F3, r21	; 0x8001f3 <__brkval+0x1>
    11a6:	40 93 f2 01 	sts	0x01F2, r20	; 0x8001f2 <__brkval>
    11aa:	81 93       	st	Z+, r24
    11ac:	91 93       	st	Z+, r25
    11ae:	02 c0       	rjmp	.+4      	; 0x11b4 <malloc+0x124>
    11b0:	e0 e0       	ldi	r30, 0x00	; 0
    11b2:	f0 e0       	ldi	r31, 0x00	; 0
    11b4:	cf 01       	movw	r24, r30
    11b6:	df 91       	pop	r29
    11b8:	cf 91       	pop	r28
    11ba:	1f 91       	pop	r17
    11bc:	0f 91       	pop	r16
    11be:	08 95       	ret

000011c0 <free>:
    11c0:	cf 93       	push	r28
    11c2:	df 93       	push	r29
    11c4:	00 97       	sbiw	r24, 0x00	; 0
    11c6:	09 f4       	brne	.+2      	; 0x11ca <free+0xa>
    11c8:	81 c0       	rjmp	.+258    	; 0x12cc <free+0x10c>
    11ca:	fc 01       	movw	r30, r24
    11cc:	32 97       	sbiw	r30, 0x02	; 2
    11ce:	13 82       	std	Z+3, r1	; 0x03
    11d0:	12 82       	std	Z+2, r1	; 0x02
    11d2:	a0 91 f4 01 	lds	r26, 0x01F4	; 0x8001f4 <__flp>
    11d6:	b0 91 f5 01 	lds	r27, 0x01F5	; 0x8001f5 <__flp+0x1>
    11da:	10 97       	sbiw	r26, 0x00	; 0
    11dc:	81 f4       	brne	.+32     	; 0x11fe <free+0x3e>
    11de:	20 81       	ld	r18, Z
    11e0:	31 81       	ldd	r19, Z+1	; 0x01
    11e2:	82 0f       	add	r24, r18
    11e4:	93 1f       	adc	r25, r19
    11e6:	20 91 f2 01 	lds	r18, 0x01F2	; 0x8001f2 <__brkval>
    11ea:	30 91 f3 01 	lds	r19, 0x01F3	; 0x8001f3 <__brkval+0x1>
    11ee:	28 17       	cp	r18, r24
    11f0:	39 07       	cpc	r19, r25
    11f2:	51 f5       	brne	.+84     	; 0x1248 <free+0x88>
    11f4:	f0 93 f3 01 	sts	0x01F3, r31	; 0x8001f3 <__brkval+0x1>
    11f8:	e0 93 f2 01 	sts	0x01F2, r30	; 0x8001f2 <__brkval>
    11fc:	67 c0       	rjmp	.+206    	; 0x12cc <free+0x10c>
    11fe:	ed 01       	movw	r28, r26
    1200:	20 e0       	ldi	r18, 0x00	; 0
    1202:	30 e0       	ldi	r19, 0x00	; 0
    1204:	ce 17       	cp	r28, r30
    1206:	df 07       	cpc	r29, r31
    1208:	40 f4       	brcc	.+16     	; 0x121a <free+0x5a>
    120a:	4a 81       	ldd	r20, Y+2	; 0x02
    120c:	5b 81       	ldd	r21, Y+3	; 0x03
    120e:	9e 01       	movw	r18, r28
    1210:	41 15       	cp	r20, r1
    1212:	51 05       	cpc	r21, r1
    1214:	f1 f0       	breq	.+60     	; 0x1252 <free+0x92>
    1216:	ea 01       	movw	r28, r20
    1218:	f5 cf       	rjmp	.-22     	; 0x1204 <free+0x44>
    121a:	d3 83       	std	Z+3, r29	; 0x03
    121c:	c2 83       	std	Z+2, r28	; 0x02
    121e:	40 81       	ld	r20, Z
    1220:	51 81       	ldd	r21, Z+1	; 0x01
    1222:	84 0f       	add	r24, r20
    1224:	95 1f       	adc	r25, r21
    1226:	c8 17       	cp	r28, r24
    1228:	d9 07       	cpc	r29, r25
    122a:	59 f4       	brne	.+22     	; 0x1242 <free+0x82>
    122c:	88 81       	ld	r24, Y
    122e:	99 81       	ldd	r25, Y+1	; 0x01
    1230:	84 0f       	add	r24, r20
    1232:	95 1f       	adc	r25, r21
    1234:	02 96       	adiw	r24, 0x02	; 2
    1236:	91 83       	std	Z+1, r25	; 0x01
    1238:	80 83       	st	Z, r24
    123a:	8a 81       	ldd	r24, Y+2	; 0x02
    123c:	9b 81       	ldd	r25, Y+3	; 0x03
    123e:	93 83       	std	Z+3, r25	; 0x03
    1240:	82 83       	std	Z+2, r24	; 0x02
    1242:	21 15       	cp	r18, r1
    1244:	31 05       	cpc	r19, r1
    1246:	29 f4       	brne	.+10     	; 0x1252 <free+0x92>
    1248:	f0 93 f5 01 	sts	0x01F5, r31	; 0x8001f5 <__flp+0x1>
    124c:	e0 93 f4 01 	sts	0x01F4, r30	; 0x8001f4 <__flp>
    1250:	3d c0       	rjmp	.+122    	; 0x12cc <free+0x10c>
    1252:	e9 01       	movw	r28, r18
    1254:	fb 83       	std	Y+3, r31	; 0x03
    1256:	ea 83       	std	Y+2, r30	; 0x02
    1258:	49 91       	ld	r20, Y+
    125a:	59 91       	ld	r21, Y+
    125c:	c4 0f       	add	r28, r20
    125e:	d5 1f       	adc	r29, r21
    1260:	ec 17       	cp	r30, r28
    1262:	fd 07       	cpc	r31, r29
    1264:	61 f4       	brne	.+24     	; 0x127e <free+0xbe>
    1266:	80 81       	ld	r24, Z
    1268:	91 81       	ldd	r25, Z+1	; 0x01
    126a:	84 0f       	add	r24, r20
    126c:	95 1f       	adc	r25, r21
    126e:	02 96       	adiw	r24, 0x02	; 2
    1270:	e9 01       	movw	r28, r18
    1272:	99 83       	std	Y+1, r25	; 0x01
    1274:	88 83       	st	Y, r24
    1276:	82 81       	ldd	r24, Z+2	; 0x02
    1278:	93 81       	ldd	r25, Z+3	; 0x03
    127a:	9b 83       	std	Y+3, r25	; 0x03
    127c:	8a 83       	std	Y+2, r24	; 0x02
    127e:	e0 e0       	ldi	r30, 0x00	; 0
    1280:	f0 e0       	ldi	r31, 0x00	; 0
    1282:	12 96       	adiw	r26, 0x02	; 2
    1284:	8d 91       	ld	r24, X+
    1286:	9c 91       	ld	r25, X
    1288:	13 97       	sbiw	r26, 0x03	; 3
    128a:	00 97       	sbiw	r24, 0x00	; 0
    128c:	19 f0       	breq	.+6      	; 0x1294 <free+0xd4>
    128e:	fd 01       	movw	r30, r26
    1290:	dc 01       	movw	r26, r24
    1292:	f7 cf       	rjmp	.-18     	; 0x1282 <free+0xc2>
    1294:	8d 91       	ld	r24, X+
    1296:	9c 91       	ld	r25, X
    1298:	11 97       	sbiw	r26, 0x01	; 1
    129a:	9d 01       	movw	r18, r26
    129c:	2e 5f       	subi	r18, 0xFE	; 254
    129e:	3f 4f       	sbci	r19, 0xFF	; 255
    12a0:	82 0f       	add	r24, r18
    12a2:	93 1f       	adc	r25, r19
    12a4:	20 91 f2 01 	lds	r18, 0x01F2	; 0x8001f2 <__brkval>
    12a8:	30 91 f3 01 	lds	r19, 0x01F3	; 0x8001f3 <__brkval+0x1>
    12ac:	28 17       	cp	r18, r24
    12ae:	39 07       	cpc	r19, r25
    12b0:	69 f4       	brne	.+26     	; 0x12cc <free+0x10c>
    12b2:	30 97       	sbiw	r30, 0x00	; 0
    12b4:	29 f4       	brne	.+10     	; 0x12c0 <free+0x100>
    12b6:	10 92 f5 01 	sts	0x01F5, r1	; 0x8001f5 <__flp+0x1>
    12ba:	10 92 f4 01 	sts	0x01F4, r1	; 0x8001f4 <__flp>
    12be:	02 c0       	rjmp	.+4      	; 0x12c4 <free+0x104>
    12c0:	13 82       	std	Z+3, r1	; 0x03
    12c2:	12 82       	std	Z+2, r1	; 0x02
    12c4:	b0 93 f3 01 	sts	0x01F3, r27	; 0x8001f3 <__brkval+0x1>
    12c8:	a0 93 f2 01 	sts	0x01F2, r26	; 0x8001f2 <__brkval>
    12cc:	df 91       	pop	r29
    12ce:	cf 91       	pop	r28
    12d0:	08 95       	ret

000012d2 <realloc>:
    12d2:	a0 e0       	ldi	r26, 0x00	; 0
    12d4:	b0 e0       	ldi	r27, 0x00	; 0
    12d6:	ef e6       	ldi	r30, 0x6F	; 111
    12d8:	f9 e0       	ldi	r31, 0x09	; 9
    12da:	0c 94 5c 0d 	jmp	0x1ab8	; 0x1ab8 <__prologue_saves__+0x8>
    12de:	ec 01       	movw	r28, r24
    12e0:	00 97       	sbiw	r24, 0x00	; 0
    12e2:	21 f4       	brne	.+8      	; 0x12ec <realloc+0x1a>
    12e4:	cb 01       	movw	r24, r22
    12e6:	0e 94 48 08 	call	0x1090	; 0x1090 <malloc>
    12ea:	b4 c0       	rjmp	.+360    	; 0x1454 <realloc+0x182>
    12ec:	fc 01       	movw	r30, r24
    12ee:	e6 0f       	add	r30, r22
    12f0:	f7 1f       	adc	r31, r23
    12f2:	9c 01       	movw	r18, r24
    12f4:	22 50       	subi	r18, 0x02	; 2
    12f6:	31 09       	sbc	r19, r1
    12f8:	e2 17       	cp	r30, r18
    12fa:	f3 07       	cpc	r31, r19
    12fc:	08 f4       	brcc	.+2      	; 0x1300 <realloc+0x2e>
    12fe:	a8 c0       	rjmp	.+336    	; 0x1450 <realloc+0x17e>
    1300:	d9 01       	movw	r26, r18
    1302:	0d 91       	ld	r16, X+
    1304:	1c 91       	ld	r17, X
    1306:	11 97       	sbiw	r26, 0x01	; 1
    1308:	06 17       	cp	r16, r22
    130a:	17 07       	cpc	r17, r23
    130c:	b0 f0       	brcs	.+44     	; 0x133a <realloc+0x68>
    130e:	05 30       	cpi	r16, 0x05	; 5
    1310:	11 05       	cpc	r17, r1
    1312:	08 f4       	brcc	.+2      	; 0x1316 <realloc+0x44>
    1314:	9b c0       	rjmp	.+310    	; 0x144c <realloc+0x17a>
    1316:	c8 01       	movw	r24, r16
    1318:	04 97       	sbiw	r24, 0x04	; 4
    131a:	86 17       	cp	r24, r22
    131c:	97 07       	cpc	r25, r23
    131e:	08 f4       	brcc	.+2      	; 0x1322 <realloc+0x50>
    1320:	95 c0       	rjmp	.+298    	; 0x144c <realloc+0x17a>
    1322:	02 50       	subi	r16, 0x02	; 2
    1324:	11 09       	sbc	r17, r1
    1326:	06 1b       	sub	r16, r22
    1328:	17 0b       	sbc	r17, r23
    132a:	01 93       	st	Z+, r16
    132c:	11 93       	st	Z+, r17
    132e:	6d 93       	st	X+, r22
    1330:	7c 93       	st	X, r23
    1332:	cf 01       	movw	r24, r30
    1334:	0e 94 e0 08 	call	0x11c0	; 0x11c0 <free>
    1338:	89 c0       	rjmp	.+274    	; 0x144c <realloc+0x17a>
    133a:	5b 01       	movw	r10, r22
    133c:	a0 1a       	sub	r10, r16
    133e:	b1 0a       	sbc	r11, r17
    1340:	4c 01       	movw	r8, r24
    1342:	80 0e       	add	r8, r16
    1344:	91 1e       	adc	r9, r17
    1346:	a0 91 f4 01 	lds	r26, 0x01F4	; 0x8001f4 <__flp>
    134a:	b0 91 f5 01 	lds	r27, 0x01F5	; 0x8001f5 <__flp+0x1>
    134e:	61 2c       	mov	r6, r1
    1350:	71 2c       	mov	r7, r1
    1352:	e1 2c       	mov	r14, r1
    1354:	f1 2c       	mov	r15, r1
    1356:	10 97       	sbiw	r26, 0x00	; 0
    1358:	09 f4       	brne	.+2      	; 0x135c <realloc+0x8a>
    135a:	46 c0       	rjmp	.+140    	; 0x13e8 <realloc+0x116>
    135c:	8d 91       	ld	r24, X+
    135e:	9c 91       	ld	r25, X
    1360:	11 97       	sbiw	r26, 0x01	; 1
    1362:	a8 15       	cp	r26, r8
    1364:	b9 05       	cpc	r27, r9
    1366:	b1 f5       	brne	.+108    	; 0x13d4 <realloc+0x102>
    1368:	6c 01       	movw	r12, r24
    136a:	42 e0       	ldi	r20, 0x02	; 2
    136c:	c4 0e       	add	r12, r20
    136e:	d1 1c       	adc	r13, r1
    1370:	ca 14       	cp	r12, r10
    1372:	db 04       	cpc	r13, r11
    1374:	78 f1       	brcs	.+94     	; 0x13d4 <realloc+0x102>
    1376:	4c 01       	movw	r8, r24
    1378:	8a 18       	sub	r8, r10
    137a:	9b 08       	sbc	r9, r11
    137c:	64 01       	movw	r12, r8
    137e:	42 e0       	ldi	r20, 0x02	; 2
    1380:	c4 0e       	add	r12, r20
    1382:	d1 1c       	adc	r13, r1
    1384:	12 96       	adiw	r26, 0x02	; 2
    1386:	bc 90       	ld	r11, X
    1388:	12 97       	sbiw	r26, 0x02	; 2
    138a:	13 96       	adiw	r26, 0x03	; 3
    138c:	ac 91       	ld	r26, X
    138e:	b5 e0       	ldi	r27, 0x05	; 5
    1390:	cb 16       	cp	r12, r27
    1392:	d1 04       	cpc	r13, r1
    1394:	40 f0       	brcs	.+16     	; 0x13a6 <realloc+0xd4>
    1396:	b2 82       	std	Z+2, r11	; 0x02
    1398:	a3 83       	std	Z+3, r26	; 0x03
    139a:	91 82       	std	Z+1, r9	; 0x01
    139c:	80 82       	st	Z, r8
    139e:	d9 01       	movw	r26, r18
    13a0:	6d 93       	st	X+, r22
    13a2:	7c 93       	st	X, r23
    13a4:	09 c0       	rjmp	.+18     	; 0x13b8 <realloc+0xe6>
    13a6:	0e 5f       	subi	r16, 0xFE	; 254
    13a8:	1f 4f       	sbci	r17, 0xFF	; 255
    13aa:	80 0f       	add	r24, r16
    13ac:	91 1f       	adc	r25, r17
    13ae:	f9 01       	movw	r30, r18
    13b0:	91 83       	std	Z+1, r25	; 0x01
    13b2:	80 83       	st	Z, r24
    13b4:	eb 2d       	mov	r30, r11
    13b6:	fa 2f       	mov	r31, r26
    13b8:	e1 14       	cp	r14, r1
    13ba:	f1 04       	cpc	r15, r1
    13bc:	31 f0       	breq	.+12     	; 0x13ca <realloc+0xf8>
    13be:	d7 01       	movw	r26, r14
    13c0:	13 96       	adiw	r26, 0x03	; 3
    13c2:	fc 93       	st	X, r31
    13c4:	ee 93       	st	-X, r30
    13c6:	12 97       	sbiw	r26, 0x02	; 2
    13c8:	41 c0       	rjmp	.+130    	; 0x144c <realloc+0x17a>
    13ca:	f0 93 f5 01 	sts	0x01F5, r31	; 0x8001f5 <__flp+0x1>
    13ce:	e0 93 f4 01 	sts	0x01F4, r30	; 0x8001f4 <__flp>
    13d2:	3c c0       	rjmp	.+120    	; 0x144c <realloc+0x17a>
    13d4:	68 16       	cp	r6, r24
    13d6:	79 06       	cpc	r7, r25
    13d8:	08 f4       	brcc	.+2      	; 0x13dc <realloc+0x10a>
    13da:	3c 01       	movw	r6, r24
    13dc:	7d 01       	movw	r14, r26
    13de:	12 96       	adiw	r26, 0x02	; 2
    13e0:	0d 90       	ld	r0, X+
    13e2:	bc 91       	ld	r27, X
    13e4:	a0 2d       	mov	r26, r0
    13e6:	b7 cf       	rjmp	.-146    	; 0x1356 <realloc+0x84>
    13e8:	80 91 f2 01 	lds	r24, 0x01F2	; 0x8001f2 <__brkval>
    13ec:	90 91 f3 01 	lds	r25, 0x01F3	; 0x8001f3 <__brkval+0x1>
    13f0:	88 16       	cp	r8, r24
    13f2:	99 06       	cpc	r9, r25
    13f4:	e1 f4       	brne	.+56     	; 0x142e <realloc+0x15c>
    13f6:	66 16       	cp	r6, r22
    13f8:	77 06       	cpc	r7, r23
    13fa:	c8 f4       	brcc	.+50     	; 0x142e <realloc+0x15c>
    13fc:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    1400:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
    1404:	00 97       	sbiw	r24, 0x00	; 0
    1406:	41 f4       	brne	.+16     	; 0x1418 <realloc+0x146>
    1408:	8d b7       	in	r24, 0x3d	; 61
    140a:	9e b7       	in	r25, 0x3e	; 62
    140c:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    1410:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    1414:	84 1b       	sub	r24, r20
    1416:	95 0b       	sbc	r25, r21
    1418:	e8 17       	cp	r30, r24
    141a:	f9 07       	cpc	r31, r25
    141c:	c8 f4       	brcc	.+50     	; 0x1450 <realloc+0x17e>
    141e:	f0 93 f3 01 	sts	0x01F3, r31	; 0x8001f3 <__brkval+0x1>
    1422:	e0 93 f2 01 	sts	0x01F2, r30	; 0x8001f2 <__brkval>
    1426:	f9 01       	movw	r30, r18
    1428:	71 83       	std	Z+1, r23	; 0x01
    142a:	60 83       	st	Z, r22
    142c:	0f c0       	rjmp	.+30     	; 0x144c <realloc+0x17a>
    142e:	cb 01       	movw	r24, r22
    1430:	0e 94 48 08 	call	0x1090	; 0x1090 <malloc>
    1434:	7c 01       	movw	r14, r24
    1436:	00 97       	sbiw	r24, 0x00	; 0
    1438:	59 f0       	breq	.+22     	; 0x1450 <realloc+0x17e>
    143a:	a8 01       	movw	r20, r16
    143c:	be 01       	movw	r22, r28
    143e:	0e 94 2f 0a 	call	0x145e	; 0x145e <memcpy>
    1442:	ce 01       	movw	r24, r28
    1444:	0e 94 e0 08 	call	0x11c0	; 0x11c0 <free>
    1448:	c7 01       	movw	r24, r14
    144a:	04 c0       	rjmp	.+8      	; 0x1454 <realloc+0x182>
    144c:	ce 01       	movw	r24, r28
    144e:	02 c0       	rjmp	.+4      	; 0x1454 <realloc+0x182>
    1450:	80 e0       	ldi	r24, 0x00	; 0
    1452:	90 e0       	ldi	r25, 0x00	; 0
    1454:	cd b7       	in	r28, 0x3d	; 61
    1456:	de b7       	in	r29, 0x3e	; 62
    1458:	ee e0       	ldi	r30, 0x0E	; 14
    145a:	0c 94 78 0d 	jmp	0x1af0	; 0x1af0 <__epilogue_restores__+0x8>

0000145e <memcpy>:
    145e:	fb 01       	movw	r30, r22
    1460:	dc 01       	movw	r26, r24
    1462:	02 c0       	rjmp	.+4      	; 0x1468 <memcpy+0xa>
    1464:	01 90       	ld	r0, Z+
    1466:	0d 92       	st	X+, r0
    1468:	41 50       	subi	r20, 0x01	; 1
    146a:	50 40       	sbci	r21, 0x00	; 0
    146c:	d8 f7       	brcc	.-10     	; 0x1464 <memcpy+0x6>
    146e:	08 95       	ret

00001470 <strcat>:
    1470:	fb 01       	movw	r30, r22
    1472:	dc 01       	movw	r26, r24
    1474:	0d 90       	ld	r0, X+
    1476:	00 20       	and	r0, r0
    1478:	e9 f7       	brne	.-6      	; 0x1474 <strcat+0x4>
    147a:	11 97       	sbiw	r26, 0x01	; 1
    147c:	01 90       	ld	r0, Z+
    147e:	0d 92       	st	X+, r0
    1480:	00 20       	and	r0, r0
    1482:	e1 f7       	brne	.-8      	; 0x147c <strcat+0xc>
    1484:	08 95       	ret

00001486 <fdevopen>:
    1486:	0f 93       	push	r16
    1488:	1f 93       	push	r17
    148a:	cf 93       	push	r28
    148c:	df 93       	push	r29
    148e:	00 97       	sbiw	r24, 0x00	; 0
    1490:	31 f4       	brne	.+12     	; 0x149e <fdevopen+0x18>
    1492:	61 15       	cp	r22, r1
    1494:	71 05       	cpc	r23, r1
    1496:	19 f4       	brne	.+6      	; 0x149e <fdevopen+0x18>
    1498:	80 e0       	ldi	r24, 0x00	; 0
    149a:	90 e0       	ldi	r25, 0x00	; 0
    149c:	3a c0       	rjmp	.+116    	; 0x1512 <fdevopen+0x8c>
    149e:	8b 01       	movw	r16, r22
    14a0:	ec 01       	movw	r28, r24
    14a2:	6e e0       	ldi	r22, 0x0E	; 14
    14a4:	70 e0       	ldi	r23, 0x00	; 0
    14a6:	81 e0       	ldi	r24, 0x01	; 1
    14a8:	90 e0       	ldi	r25, 0x00	; 0
    14aa:	0e 94 85 0c 	call	0x190a	; 0x190a <calloc>
    14ae:	fc 01       	movw	r30, r24
    14b0:	89 2b       	or	r24, r25
    14b2:	91 f3       	breq	.-28     	; 0x1498 <fdevopen+0x12>
    14b4:	80 e8       	ldi	r24, 0x80	; 128
    14b6:	83 83       	std	Z+3, r24	; 0x03
    14b8:	01 15       	cp	r16, r1
    14ba:	11 05       	cpc	r17, r1
    14bc:	71 f0       	breq	.+28     	; 0x14da <fdevopen+0x54>
    14be:	13 87       	std	Z+11, r17	; 0x0b
    14c0:	02 87       	std	Z+10, r16	; 0x0a
    14c2:	81 e8       	ldi	r24, 0x81	; 129
    14c4:	83 83       	std	Z+3, r24	; 0x03
    14c6:	80 91 f6 01 	lds	r24, 0x01F6	; 0x8001f6 <__iob>
    14ca:	90 91 f7 01 	lds	r25, 0x01F7	; 0x8001f7 <__iob+0x1>
    14ce:	89 2b       	or	r24, r25
    14d0:	21 f4       	brne	.+8      	; 0x14da <fdevopen+0x54>
    14d2:	f0 93 f7 01 	sts	0x01F7, r31	; 0x8001f7 <__iob+0x1>
    14d6:	e0 93 f6 01 	sts	0x01F6, r30	; 0x8001f6 <__iob>
    14da:	20 97       	sbiw	r28, 0x00	; 0
    14dc:	c9 f0       	breq	.+50     	; 0x1510 <fdevopen+0x8a>
    14de:	d1 87       	std	Z+9, r29	; 0x09
    14e0:	c0 87       	std	Z+8, r28	; 0x08
    14e2:	83 81       	ldd	r24, Z+3	; 0x03
    14e4:	82 60       	ori	r24, 0x02	; 2
    14e6:	83 83       	std	Z+3, r24	; 0x03
    14e8:	80 91 f8 01 	lds	r24, 0x01F8	; 0x8001f8 <__iob+0x2>
    14ec:	90 91 f9 01 	lds	r25, 0x01F9	; 0x8001f9 <__iob+0x3>
    14f0:	89 2b       	or	r24, r25
    14f2:	71 f4       	brne	.+28     	; 0x1510 <fdevopen+0x8a>
    14f4:	f0 93 f9 01 	sts	0x01F9, r31	; 0x8001f9 <__iob+0x3>
    14f8:	e0 93 f8 01 	sts	0x01F8, r30	; 0x8001f8 <__iob+0x2>
    14fc:	80 91 fa 01 	lds	r24, 0x01FA	; 0x8001fa <__iob+0x4>
    1500:	90 91 fb 01 	lds	r25, 0x01FB	; 0x8001fb <__iob+0x5>
    1504:	89 2b       	or	r24, r25
    1506:	21 f4       	brne	.+8      	; 0x1510 <fdevopen+0x8a>
    1508:	f0 93 fb 01 	sts	0x01FB, r31	; 0x8001fb <__iob+0x5>
    150c:	e0 93 fa 01 	sts	0x01FA, r30	; 0x8001fa <__iob+0x4>
    1510:	cf 01       	movw	r24, r30
    1512:	df 91       	pop	r29
    1514:	cf 91       	pop	r28
    1516:	1f 91       	pop	r17
    1518:	0f 91       	pop	r16
    151a:	08 95       	ret

0000151c <printf>:
    151c:	a0 e0       	ldi	r26, 0x00	; 0
    151e:	b0 e0       	ldi	r27, 0x00	; 0
    1520:	e4 e9       	ldi	r30, 0x94	; 148
    1522:	fa e0       	ldi	r31, 0x0A	; 10
    1524:	0c 94 68 0d 	jmp	0x1ad0	; 0x1ad0 <__prologue_saves__+0x20>
    1528:	ae 01       	movw	r20, r28
    152a:	4b 5f       	subi	r20, 0xFB	; 251
    152c:	5f 4f       	sbci	r21, 0xFF	; 255
    152e:	fa 01       	movw	r30, r20
    1530:	61 91       	ld	r22, Z+
    1532:	71 91       	ld	r23, Z+
    1534:	af 01       	movw	r20, r30
    1536:	80 91 f8 01 	lds	r24, 0x01F8	; 0x8001f8 <__iob+0x2>
    153a:	90 91 f9 01 	lds	r25, 0x01F9	; 0x8001f9 <__iob+0x3>
    153e:	0e 94 a4 0a 	call	0x1548	; 0x1548 <vfprintf>
    1542:	e2 e0       	ldi	r30, 0x02	; 2
    1544:	0c 94 84 0d 	jmp	0x1b08	; 0x1b08 <__epilogue_restores__+0x20>

00001548 <vfprintf>:
    1548:	ab e0       	ldi	r26, 0x0B	; 11
    154a:	b0 e0       	ldi	r27, 0x00	; 0
    154c:	ea ea       	ldi	r30, 0xAA	; 170
    154e:	fa e0       	ldi	r31, 0x0A	; 10
    1550:	0c 94 58 0d 	jmp	0x1ab0	; 0x1ab0 <__prologue_saves__>
    1554:	6c 01       	movw	r12, r24
    1556:	7b 01       	movw	r14, r22
    1558:	8a 01       	movw	r16, r20
    155a:	fc 01       	movw	r30, r24
    155c:	17 82       	std	Z+7, r1	; 0x07
    155e:	16 82       	std	Z+6, r1	; 0x06
    1560:	83 81       	ldd	r24, Z+3	; 0x03
    1562:	81 ff       	sbrs	r24, 1
    1564:	cc c1       	rjmp	.+920    	; 0x18fe <vfprintf+0x3b6>
    1566:	ce 01       	movw	r24, r28
    1568:	01 96       	adiw	r24, 0x01	; 1
    156a:	3c 01       	movw	r6, r24
    156c:	f6 01       	movw	r30, r12
    156e:	93 81       	ldd	r25, Z+3	; 0x03
    1570:	f7 01       	movw	r30, r14
    1572:	93 fd       	sbrc	r25, 3
    1574:	85 91       	lpm	r24, Z+
    1576:	93 ff       	sbrs	r25, 3
    1578:	81 91       	ld	r24, Z+
    157a:	7f 01       	movw	r14, r30
    157c:	88 23       	and	r24, r24
    157e:	09 f4       	brne	.+2      	; 0x1582 <vfprintf+0x3a>
    1580:	ba c1       	rjmp	.+884    	; 0x18f6 <vfprintf+0x3ae>
    1582:	85 32       	cpi	r24, 0x25	; 37
    1584:	39 f4       	brne	.+14     	; 0x1594 <vfprintf+0x4c>
    1586:	93 fd       	sbrc	r25, 3
    1588:	85 91       	lpm	r24, Z+
    158a:	93 ff       	sbrs	r25, 3
    158c:	81 91       	ld	r24, Z+
    158e:	7f 01       	movw	r14, r30
    1590:	85 32       	cpi	r24, 0x25	; 37
    1592:	29 f4       	brne	.+10     	; 0x159e <vfprintf+0x56>
    1594:	b6 01       	movw	r22, r12
    1596:	90 e0       	ldi	r25, 0x00	; 0
    1598:	0e 94 be 0c 	call	0x197c	; 0x197c <fputc>
    159c:	e7 cf       	rjmp	.-50     	; 0x156c <vfprintf+0x24>
    159e:	91 2c       	mov	r9, r1
    15a0:	21 2c       	mov	r2, r1
    15a2:	31 2c       	mov	r3, r1
    15a4:	ff e1       	ldi	r31, 0x1F	; 31
    15a6:	f3 15       	cp	r31, r3
    15a8:	d8 f0       	brcs	.+54     	; 0x15e0 <vfprintf+0x98>
    15aa:	8b 32       	cpi	r24, 0x2B	; 43
    15ac:	79 f0       	breq	.+30     	; 0x15cc <vfprintf+0x84>
    15ae:	38 f4       	brcc	.+14     	; 0x15be <vfprintf+0x76>
    15b0:	80 32       	cpi	r24, 0x20	; 32
    15b2:	79 f0       	breq	.+30     	; 0x15d2 <vfprintf+0x8a>
    15b4:	83 32       	cpi	r24, 0x23	; 35
    15b6:	a1 f4       	brne	.+40     	; 0x15e0 <vfprintf+0x98>
    15b8:	23 2d       	mov	r18, r3
    15ba:	20 61       	ori	r18, 0x10	; 16
    15bc:	1d c0       	rjmp	.+58     	; 0x15f8 <vfprintf+0xb0>
    15be:	8d 32       	cpi	r24, 0x2D	; 45
    15c0:	61 f0       	breq	.+24     	; 0x15da <vfprintf+0x92>
    15c2:	80 33       	cpi	r24, 0x30	; 48
    15c4:	69 f4       	brne	.+26     	; 0x15e0 <vfprintf+0x98>
    15c6:	23 2d       	mov	r18, r3
    15c8:	21 60       	ori	r18, 0x01	; 1
    15ca:	16 c0       	rjmp	.+44     	; 0x15f8 <vfprintf+0xb0>
    15cc:	83 2d       	mov	r24, r3
    15ce:	82 60       	ori	r24, 0x02	; 2
    15d0:	38 2e       	mov	r3, r24
    15d2:	e3 2d       	mov	r30, r3
    15d4:	e4 60       	ori	r30, 0x04	; 4
    15d6:	3e 2e       	mov	r3, r30
    15d8:	2a c0       	rjmp	.+84     	; 0x162e <vfprintf+0xe6>
    15da:	f3 2d       	mov	r31, r3
    15dc:	f8 60       	ori	r31, 0x08	; 8
    15de:	1d c0       	rjmp	.+58     	; 0x161a <vfprintf+0xd2>
    15e0:	37 fc       	sbrc	r3, 7
    15e2:	2d c0       	rjmp	.+90     	; 0x163e <vfprintf+0xf6>
    15e4:	20 ed       	ldi	r18, 0xD0	; 208
    15e6:	28 0f       	add	r18, r24
    15e8:	2a 30       	cpi	r18, 0x0A	; 10
    15ea:	40 f0       	brcs	.+16     	; 0x15fc <vfprintf+0xb4>
    15ec:	8e 32       	cpi	r24, 0x2E	; 46
    15ee:	b9 f4       	brne	.+46     	; 0x161e <vfprintf+0xd6>
    15f0:	36 fc       	sbrc	r3, 6
    15f2:	81 c1       	rjmp	.+770    	; 0x18f6 <vfprintf+0x3ae>
    15f4:	23 2d       	mov	r18, r3
    15f6:	20 64       	ori	r18, 0x40	; 64
    15f8:	32 2e       	mov	r3, r18
    15fa:	19 c0       	rjmp	.+50     	; 0x162e <vfprintf+0xe6>
    15fc:	36 fe       	sbrs	r3, 6
    15fe:	06 c0       	rjmp	.+12     	; 0x160c <vfprintf+0xc4>
    1600:	8a e0       	ldi	r24, 0x0A	; 10
    1602:	98 9e       	mul	r9, r24
    1604:	20 0d       	add	r18, r0
    1606:	11 24       	eor	r1, r1
    1608:	92 2e       	mov	r9, r18
    160a:	11 c0       	rjmp	.+34     	; 0x162e <vfprintf+0xe6>
    160c:	ea e0       	ldi	r30, 0x0A	; 10
    160e:	2e 9e       	mul	r2, r30
    1610:	20 0d       	add	r18, r0
    1612:	11 24       	eor	r1, r1
    1614:	22 2e       	mov	r2, r18
    1616:	f3 2d       	mov	r31, r3
    1618:	f0 62       	ori	r31, 0x20	; 32
    161a:	3f 2e       	mov	r3, r31
    161c:	08 c0       	rjmp	.+16     	; 0x162e <vfprintf+0xe6>
    161e:	8c 36       	cpi	r24, 0x6C	; 108
    1620:	21 f4       	brne	.+8      	; 0x162a <vfprintf+0xe2>
    1622:	83 2d       	mov	r24, r3
    1624:	80 68       	ori	r24, 0x80	; 128
    1626:	38 2e       	mov	r3, r24
    1628:	02 c0       	rjmp	.+4      	; 0x162e <vfprintf+0xe6>
    162a:	88 36       	cpi	r24, 0x68	; 104
    162c:	41 f4       	brne	.+16     	; 0x163e <vfprintf+0xf6>
    162e:	f7 01       	movw	r30, r14
    1630:	93 fd       	sbrc	r25, 3
    1632:	85 91       	lpm	r24, Z+
    1634:	93 ff       	sbrs	r25, 3
    1636:	81 91       	ld	r24, Z+
    1638:	7f 01       	movw	r14, r30
    163a:	81 11       	cpse	r24, r1
    163c:	b3 cf       	rjmp	.-154    	; 0x15a4 <vfprintf+0x5c>
    163e:	98 2f       	mov	r25, r24
    1640:	9f 7d       	andi	r25, 0xDF	; 223
    1642:	95 54       	subi	r25, 0x45	; 69
    1644:	93 30       	cpi	r25, 0x03	; 3
    1646:	28 f4       	brcc	.+10     	; 0x1652 <vfprintf+0x10a>
    1648:	0c 5f       	subi	r16, 0xFC	; 252
    164a:	1f 4f       	sbci	r17, 0xFF	; 255
    164c:	9f e3       	ldi	r25, 0x3F	; 63
    164e:	99 83       	std	Y+1, r25	; 0x01
    1650:	0d c0       	rjmp	.+26     	; 0x166c <vfprintf+0x124>
    1652:	83 36       	cpi	r24, 0x63	; 99
    1654:	31 f0       	breq	.+12     	; 0x1662 <vfprintf+0x11a>
    1656:	83 37       	cpi	r24, 0x73	; 115
    1658:	71 f0       	breq	.+28     	; 0x1676 <vfprintf+0x12e>
    165a:	83 35       	cpi	r24, 0x53	; 83
    165c:	09 f0       	breq	.+2      	; 0x1660 <vfprintf+0x118>
    165e:	59 c0       	rjmp	.+178    	; 0x1712 <vfprintf+0x1ca>
    1660:	21 c0       	rjmp	.+66     	; 0x16a4 <vfprintf+0x15c>
    1662:	f8 01       	movw	r30, r16
    1664:	80 81       	ld	r24, Z
    1666:	89 83       	std	Y+1, r24	; 0x01
    1668:	0e 5f       	subi	r16, 0xFE	; 254
    166a:	1f 4f       	sbci	r17, 0xFF	; 255
    166c:	88 24       	eor	r8, r8
    166e:	83 94       	inc	r8
    1670:	91 2c       	mov	r9, r1
    1672:	53 01       	movw	r10, r6
    1674:	13 c0       	rjmp	.+38     	; 0x169c <vfprintf+0x154>
    1676:	28 01       	movw	r4, r16
    1678:	f2 e0       	ldi	r31, 0x02	; 2
    167a:	4f 0e       	add	r4, r31
    167c:	51 1c       	adc	r5, r1
    167e:	f8 01       	movw	r30, r16
    1680:	a0 80       	ld	r10, Z
    1682:	b1 80       	ldd	r11, Z+1	; 0x01
    1684:	36 fe       	sbrs	r3, 6
    1686:	03 c0       	rjmp	.+6      	; 0x168e <vfprintf+0x146>
    1688:	69 2d       	mov	r22, r9
    168a:	70 e0       	ldi	r23, 0x00	; 0
    168c:	02 c0       	rjmp	.+4      	; 0x1692 <vfprintf+0x14a>
    168e:	6f ef       	ldi	r22, 0xFF	; 255
    1690:	7f ef       	ldi	r23, 0xFF	; 255
    1692:	c5 01       	movw	r24, r10
    1694:	0e 94 b3 0c 	call	0x1966	; 0x1966 <strnlen>
    1698:	4c 01       	movw	r8, r24
    169a:	82 01       	movw	r16, r4
    169c:	f3 2d       	mov	r31, r3
    169e:	ff 77       	andi	r31, 0x7F	; 127
    16a0:	3f 2e       	mov	r3, r31
    16a2:	16 c0       	rjmp	.+44     	; 0x16d0 <vfprintf+0x188>
    16a4:	28 01       	movw	r4, r16
    16a6:	22 e0       	ldi	r18, 0x02	; 2
    16a8:	42 0e       	add	r4, r18
    16aa:	51 1c       	adc	r5, r1
    16ac:	f8 01       	movw	r30, r16
    16ae:	a0 80       	ld	r10, Z
    16b0:	b1 80       	ldd	r11, Z+1	; 0x01
    16b2:	36 fe       	sbrs	r3, 6
    16b4:	03 c0       	rjmp	.+6      	; 0x16bc <vfprintf+0x174>
    16b6:	69 2d       	mov	r22, r9
    16b8:	70 e0       	ldi	r23, 0x00	; 0
    16ba:	02 c0       	rjmp	.+4      	; 0x16c0 <vfprintf+0x178>
    16bc:	6f ef       	ldi	r22, 0xFF	; 255
    16be:	7f ef       	ldi	r23, 0xFF	; 255
    16c0:	c5 01       	movw	r24, r10
    16c2:	0e 94 a1 0c 	call	0x1942	; 0x1942 <strnlen_P>
    16c6:	4c 01       	movw	r8, r24
    16c8:	f3 2d       	mov	r31, r3
    16ca:	f0 68       	ori	r31, 0x80	; 128
    16cc:	3f 2e       	mov	r3, r31
    16ce:	82 01       	movw	r16, r4
    16d0:	33 fc       	sbrc	r3, 3
    16d2:	1b c0       	rjmp	.+54     	; 0x170a <vfprintf+0x1c2>
    16d4:	82 2d       	mov	r24, r2
    16d6:	90 e0       	ldi	r25, 0x00	; 0
    16d8:	88 16       	cp	r8, r24
    16da:	99 06       	cpc	r9, r25
    16dc:	b0 f4       	brcc	.+44     	; 0x170a <vfprintf+0x1c2>
    16de:	b6 01       	movw	r22, r12
    16e0:	80 e2       	ldi	r24, 0x20	; 32
    16e2:	90 e0       	ldi	r25, 0x00	; 0
    16e4:	0e 94 be 0c 	call	0x197c	; 0x197c <fputc>
    16e8:	2a 94       	dec	r2
    16ea:	f4 cf       	rjmp	.-24     	; 0x16d4 <vfprintf+0x18c>
    16ec:	f5 01       	movw	r30, r10
    16ee:	37 fc       	sbrc	r3, 7
    16f0:	85 91       	lpm	r24, Z+
    16f2:	37 fe       	sbrs	r3, 7
    16f4:	81 91       	ld	r24, Z+
    16f6:	5f 01       	movw	r10, r30
    16f8:	b6 01       	movw	r22, r12
    16fa:	90 e0       	ldi	r25, 0x00	; 0
    16fc:	0e 94 be 0c 	call	0x197c	; 0x197c <fputc>
    1700:	21 10       	cpse	r2, r1
    1702:	2a 94       	dec	r2
    1704:	21 e0       	ldi	r18, 0x01	; 1
    1706:	82 1a       	sub	r8, r18
    1708:	91 08       	sbc	r9, r1
    170a:	81 14       	cp	r8, r1
    170c:	91 04       	cpc	r9, r1
    170e:	71 f7       	brne	.-36     	; 0x16ec <vfprintf+0x1a4>
    1710:	e8 c0       	rjmp	.+464    	; 0x18e2 <vfprintf+0x39a>
    1712:	84 36       	cpi	r24, 0x64	; 100
    1714:	11 f0       	breq	.+4      	; 0x171a <vfprintf+0x1d2>
    1716:	89 36       	cpi	r24, 0x69	; 105
    1718:	41 f5       	brne	.+80     	; 0x176a <vfprintf+0x222>
    171a:	f8 01       	movw	r30, r16
    171c:	37 fe       	sbrs	r3, 7
    171e:	07 c0       	rjmp	.+14     	; 0x172e <vfprintf+0x1e6>
    1720:	60 81       	ld	r22, Z
    1722:	71 81       	ldd	r23, Z+1	; 0x01
    1724:	82 81       	ldd	r24, Z+2	; 0x02
    1726:	93 81       	ldd	r25, Z+3	; 0x03
    1728:	0c 5f       	subi	r16, 0xFC	; 252
    172a:	1f 4f       	sbci	r17, 0xFF	; 255
    172c:	08 c0       	rjmp	.+16     	; 0x173e <vfprintf+0x1f6>
    172e:	60 81       	ld	r22, Z
    1730:	71 81       	ldd	r23, Z+1	; 0x01
    1732:	07 2e       	mov	r0, r23
    1734:	00 0c       	add	r0, r0
    1736:	88 0b       	sbc	r24, r24
    1738:	99 0b       	sbc	r25, r25
    173a:	0e 5f       	subi	r16, 0xFE	; 254
    173c:	1f 4f       	sbci	r17, 0xFF	; 255
    173e:	f3 2d       	mov	r31, r3
    1740:	ff 76       	andi	r31, 0x6F	; 111
    1742:	3f 2e       	mov	r3, r31
    1744:	97 ff       	sbrs	r25, 7
    1746:	09 c0       	rjmp	.+18     	; 0x175a <vfprintf+0x212>
    1748:	90 95       	com	r25
    174a:	80 95       	com	r24
    174c:	70 95       	com	r23
    174e:	61 95       	neg	r22
    1750:	7f 4f       	sbci	r23, 0xFF	; 255
    1752:	8f 4f       	sbci	r24, 0xFF	; 255
    1754:	9f 4f       	sbci	r25, 0xFF	; 255
    1756:	f0 68       	ori	r31, 0x80	; 128
    1758:	3f 2e       	mov	r3, r31
    175a:	2a e0       	ldi	r18, 0x0A	; 10
    175c:	30 e0       	ldi	r19, 0x00	; 0
    175e:	a3 01       	movw	r20, r6
    1760:	0e 94 fa 0c 	call	0x19f4	; 0x19f4 <__ultoa_invert>
    1764:	88 2e       	mov	r8, r24
    1766:	86 18       	sub	r8, r6
    1768:	45 c0       	rjmp	.+138    	; 0x17f4 <vfprintf+0x2ac>
    176a:	85 37       	cpi	r24, 0x75	; 117
    176c:	31 f4       	brne	.+12     	; 0x177a <vfprintf+0x232>
    176e:	23 2d       	mov	r18, r3
    1770:	2f 7e       	andi	r18, 0xEF	; 239
    1772:	b2 2e       	mov	r11, r18
    1774:	2a e0       	ldi	r18, 0x0A	; 10
    1776:	30 e0       	ldi	r19, 0x00	; 0
    1778:	25 c0       	rjmp	.+74     	; 0x17c4 <vfprintf+0x27c>
    177a:	93 2d       	mov	r25, r3
    177c:	99 7f       	andi	r25, 0xF9	; 249
    177e:	b9 2e       	mov	r11, r25
    1780:	8f 36       	cpi	r24, 0x6F	; 111
    1782:	c1 f0       	breq	.+48     	; 0x17b4 <vfprintf+0x26c>
    1784:	18 f4       	brcc	.+6      	; 0x178c <vfprintf+0x244>
    1786:	88 35       	cpi	r24, 0x58	; 88
    1788:	79 f0       	breq	.+30     	; 0x17a8 <vfprintf+0x260>
    178a:	b5 c0       	rjmp	.+362    	; 0x18f6 <vfprintf+0x3ae>
    178c:	80 37       	cpi	r24, 0x70	; 112
    178e:	19 f0       	breq	.+6      	; 0x1796 <vfprintf+0x24e>
    1790:	88 37       	cpi	r24, 0x78	; 120
    1792:	21 f0       	breq	.+8      	; 0x179c <vfprintf+0x254>
    1794:	b0 c0       	rjmp	.+352    	; 0x18f6 <vfprintf+0x3ae>
    1796:	e9 2f       	mov	r30, r25
    1798:	e0 61       	ori	r30, 0x10	; 16
    179a:	be 2e       	mov	r11, r30
    179c:	b4 fe       	sbrs	r11, 4
    179e:	0d c0       	rjmp	.+26     	; 0x17ba <vfprintf+0x272>
    17a0:	fb 2d       	mov	r31, r11
    17a2:	f4 60       	ori	r31, 0x04	; 4
    17a4:	bf 2e       	mov	r11, r31
    17a6:	09 c0       	rjmp	.+18     	; 0x17ba <vfprintf+0x272>
    17a8:	34 fe       	sbrs	r3, 4
    17aa:	0a c0       	rjmp	.+20     	; 0x17c0 <vfprintf+0x278>
    17ac:	29 2f       	mov	r18, r25
    17ae:	26 60       	ori	r18, 0x06	; 6
    17b0:	b2 2e       	mov	r11, r18
    17b2:	06 c0       	rjmp	.+12     	; 0x17c0 <vfprintf+0x278>
    17b4:	28 e0       	ldi	r18, 0x08	; 8
    17b6:	30 e0       	ldi	r19, 0x00	; 0
    17b8:	05 c0       	rjmp	.+10     	; 0x17c4 <vfprintf+0x27c>
    17ba:	20 e1       	ldi	r18, 0x10	; 16
    17bc:	30 e0       	ldi	r19, 0x00	; 0
    17be:	02 c0       	rjmp	.+4      	; 0x17c4 <vfprintf+0x27c>
    17c0:	20 e1       	ldi	r18, 0x10	; 16
    17c2:	32 e0       	ldi	r19, 0x02	; 2
    17c4:	f8 01       	movw	r30, r16
    17c6:	b7 fe       	sbrs	r11, 7
    17c8:	07 c0       	rjmp	.+14     	; 0x17d8 <vfprintf+0x290>
    17ca:	60 81       	ld	r22, Z
    17cc:	71 81       	ldd	r23, Z+1	; 0x01
    17ce:	82 81       	ldd	r24, Z+2	; 0x02
    17d0:	93 81       	ldd	r25, Z+3	; 0x03
    17d2:	0c 5f       	subi	r16, 0xFC	; 252
    17d4:	1f 4f       	sbci	r17, 0xFF	; 255
    17d6:	06 c0       	rjmp	.+12     	; 0x17e4 <vfprintf+0x29c>
    17d8:	60 81       	ld	r22, Z
    17da:	71 81       	ldd	r23, Z+1	; 0x01
    17dc:	80 e0       	ldi	r24, 0x00	; 0
    17de:	90 e0       	ldi	r25, 0x00	; 0
    17e0:	0e 5f       	subi	r16, 0xFE	; 254
    17e2:	1f 4f       	sbci	r17, 0xFF	; 255
    17e4:	a3 01       	movw	r20, r6
    17e6:	0e 94 fa 0c 	call	0x19f4	; 0x19f4 <__ultoa_invert>
    17ea:	88 2e       	mov	r8, r24
    17ec:	86 18       	sub	r8, r6
    17ee:	fb 2d       	mov	r31, r11
    17f0:	ff 77       	andi	r31, 0x7F	; 127
    17f2:	3f 2e       	mov	r3, r31
    17f4:	36 fe       	sbrs	r3, 6
    17f6:	0d c0       	rjmp	.+26     	; 0x1812 <vfprintf+0x2ca>
    17f8:	23 2d       	mov	r18, r3
    17fa:	2e 7f       	andi	r18, 0xFE	; 254
    17fc:	a2 2e       	mov	r10, r18
    17fe:	89 14       	cp	r8, r9
    1800:	58 f4       	brcc	.+22     	; 0x1818 <vfprintf+0x2d0>
    1802:	34 fe       	sbrs	r3, 4
    1804:	0b c0       	rjmp	.+22     	; 0x181c <vfprintf+0x2d4>
    1806:	32 fc       	sbrc	r3, 2
    1808:	09 c0       	rjmp	.+18     	; 0x181c <vfprintf+0x2d4>
    180a:	83 2d       	mov	r24, r3
    180c:	8e 7e       	andi	r24, 0xEE	; 238
    180e:	a8 2e       	mov	r10, r24
    1810:	05 c0       	rjmp	.+10     	; 0x181c <vfprintf+0x2d4>
    1812:	b8 2c       	mov	r11, r8
    1814:	a3 2c       	mov	r10, r3
    1816:	03 c0       	rjmp	.+6      	; 0x181e <vfprintf+0x2d6>
    1818:	b8 2c       	mov	r11, r8
    181a:	01 c0       	rjmp	.+2      	; 0x181e <vfprintf+0x2d6>
    181c:	b9 2c       	mov	r11, r9
    181e:	a4 fe       	sbrs	r10, 4
    1820:	0f c0       	rjmp	.+30     	; 0x1840 <vfprintf+0x2f8>
    1822:	fe 01       	movw	r30, r28
    1824:	e8 0d       	add	r30, r8
    1826:	f1 1d       	adc	r31, r1
    1828:	80 81       	ld	r24, Z
    182a:	80 33       	cpi	r24, 0x30	; 48
    182c:	21 f4       	brne	.+8      	; 0x1836 <vfprintf+0x2ee>
    182e:	9a 2d       	mov	r25, r10
    1830:	99 7e       	andi	r25, 0xE9	; 233
    1832:	a9 2e       	mov	r10, r25
    1834:	09 c0       	rjmp	.+18     	; 0x1848 <vfprintf+0x300>
    1836:	a2 fe       	sbrs	r10, 2
    1838:	06 c0       	rjmp	.+12     	; 0x1846 <vfprintf+0x2fe>
    183a:	b3 94       	inc	r11
    183c:	b3 94       	inc	r11
    183e:	04 c0       	rjmp	.+8      	; 0x1848 <vfprintf+0x300>
    1840:	8a 2d       	mov	r24, r10
    1842:	86 78       	andi	r24, 0x86	; 134
    1844:	09 f0       	breq	.+2      	; 0x1848 <vfprintf+0x300>
    1846:	b3 94       	inc	r11
    1848:	a3 fc       	sbrc	r10, 3
    184a:	11 c0       	rjmp	.+34     	; 0x186e <vfprintf+0x326>
    184c:	a0 fe       	sbrs	r10, 0
    184e:	06 c0       	rjmp	.+12     	; 0x185c <vfprintf+0x314>
    1850:	b2 14       	cp	r11, r2
    1852:	88 f4       	brcc	.+34     	; 0x1876 <vfprintf+0x32e>
    1854:	28 0c       	add	r2, r8
    1856:	92 2c       	mov	r9, r2
    1858:	9b 18       	sub	r9, r11
    185a:	0e c0       	rjmp	.+28     	; 0x1878 <vfprintf+0x330>
    185c:	b2 14       	cp	r11, r2
    185e:	60 f4       	brcc	.+24     	; 0x1878 <vfprintf+0x330>
    1860:	b6 01       	movw	r22, r12
    1862:	80 e2       	ldi	r24, 0x20	; 32
    1864:	90 e0       	ldi	r25, 0x00	; 0
    1866:	0e 94 be 0c 	call	0x197c	; 0x197c <fputc>
    186a:	b3 94       	inc	r11
    186c:	f7 cf       	rjmp	.-18     	; 0x185c <vfprintf+0x314>
    186e:	b2 14       	cp	r11, r2
    1870:	18 f4       	brcc	.+6      	; 0x1878 <vfprintf+0x330>
    1872:	2b 18       	sub	r2, r11
    1874:	02 c0       	rjmp	.+4      	; 0x187a <vfprintf+0x332>
    1876:	98 2c       	mov	r9, r8
    1878:	21 2c       	mov	r2, r1
    187a:	a4 fe       	sbrs	r10, 4
    187c:	10 c0       	rjmp	.+32     	; 0x189e <vfprintf+0x356>
    187e:	b6 01       	movw	r22, r12
    1880:	80 e3       	ldi	r24, 0x30	; 48
    1882:	90 e0       	ldi	r25, 0x00	; 0
    1884:	0e 94 be 0c 	call	0x197c	; 0x197c <fputc>
    1888:	a2 fe       	sbrs	r10, 2
    188a:	17 c0       	rjmp	.+46     	; 0x18ba <vfprintf+0x372>
    188c:	a1 fc       	sbrc	r10, 1
    188e:	03 c0       	rjmp	.+6      	; 0x1896 <vfprintf+0x34e>
    1890:	88 e7       	ldi	r24, 0x78	; 120
    1892:	90 e0       	ldi	r25, 0x00	; 0
    1894:	02 c0       	rjmp	.+4      	; 0x189a <vfprintf+0x352>
    1896:	88 e5       	ldi	r24, 0x58	; 88
    1898:	90 e0       	ldi	r25, 0x00	; 0
    189a:	b6 01       	movw	r22, r12
    189c:	0c c0       	rjmp	.+24     	; 0x18b6 <vfprintf+0x36e>
    189e:	8a 2d       	mov	r24, r10
    18a0:	86 78       	andi	r24, 0x86	; 134
    18a2:	59 f0       	breq	.+22     	; 0x18ba <vfprintf+0x372>
    18a4:	a1 fe       	sbrs	r10, 1
    18a6:	02 c0       	rjmp	.+4      	; 0x18ac <vfprintf+0x364>
    18a8:	8b e2       	ldi	r24, 0x2B	; 43
    18aa:	01 c0       	rjmp	.+2      	; 0x18ae <vfprintf+0x366>
    18ac:	80 e2       	ldi	r24, 0x20	; 32
    18ae:	a7 fc       	sbrc	r10, 7
    18b0:	8d e2       	ldi	r24, 0x2D	; 45
    18b2:	b6 01       	movw	r22, r12
    18b4:	90 e0       	ldi	r25, 0x00	; 0
    18b6:	0e 94 be 0c 	call	0x197c	; 0x197c <fputc>
    18ba:	89 14       	cp	r8, r9
    18bc:	38 f4       	brcc	.+14     	; 0x18cc <vfprintf+0x384>
    18be:	b6 01       	movw	r22, r12
    18c0:	80 e3       	ldi	r24, 0x30	; 48
    18c2:	90 e0       	ldi	r25, 0x00	; 0
    18c4:	0e 94 be 0c 	call	0x197c	; 0x197c <fputc>
    18c8:	9a 94       	dec	r9
    18ca:	f7 cf       	rjmp	.-18     	; 0x18ba <vfprintf+0x372>
    18cc:	8a 94       	dec	r8
    18ce:	f3 01       	movw	r30, r6
    18d0:	e8 0d       	add	r30, r8
    18d2:	f1 1d       	adc	r31, r1
    18d4:	80 81       	ld	r24, Z
    18d6:	b6 01       	movw	r22, r12
    18d8:	90 e0       	ldi	r25, 0x00	; 0
    18da:	0e 94 be 0c 	call	0x197c	; 0x197c <fputc>
    18de:	81 10       	cpse	r8, r1
    18e0:	f5 cf       	rjmp	.-22     	; 0x18cc <vfprintf+0x384>
    18e2:	22 20       	and	r2, r2
    18e4:	09 f4       	brne	.+2      	; 0x18e8 <vfprintf+0x3a0>
    18e6:	42 ce       	rjmp	.-892    	; 0x156c <vfprintf+0x24>
    18e8:	b6 01       	movw	r22, r12
    18ea:	80 e2       	ldi	r24, 0x20	; 32
    18ec:	90 e0       	ldi	r25, 0x00	; 0
    18ee:	0e 94 be 0c 	call	0x197c	; 0x197c <fputc>
    18f2:	2a 94       	dec	r2
    18f4:	f6 cf       	rjmp	.-20     	; 0x18e2 <vfprintf+0x39a>
    18f6:	f6 01       	movw	r30, r12
    18f8:	86 81       	ldd	r24, Z+6	; 0x06
    18fa:	97 81       	ldd	r25, Z+7	; 0x07
    18fc:	02 c0       	rjmp	.+4      	; 0x1902 <vfprintf+0x3ba>
    18fe:	8f ef       	ldi	r24, 0xFF	; 255
    1900:	9f ef       	ldi	r25, 0xFF	; 255
    1902:	2b 96       	adiw	r28, 0x0b	; 11
    1904:	e2 e1       	ldi	r30, 0x12	; 18
    1906:	0c 94 74 0d 	jmp	0x1ae8	; 0x1ae8 <__epilogue_restores__>

0000190a <calloc>:
    190a:	0f 93       	push	r16
    190c:	1f 93       	push	r17
    190e:	cf 93       	push	r28
    1910:	df 93       	push	r29
    1912:	86 9f       	mul	r24, r22
    1914:	80 01       	movw	r16, r0
    1916:	87 9f       	mul	r24, r23
    1918:	10 0d       	add	r17, r0
    191a:	96 9f       	mul	r25, r22
    191c:	10 0d       	add	r17, r0
    191e:	11 24       	eor	r1, r1
    1920:	c8 01       	movw	r24, r16
    1922:	0e 94 48 08 	call	0x1090	; 0x1090 <malloc>
    1926:	ec 01       	movw	r28, r24
    1928:	00 97       	sbiw	r24, 0x00	; 0
    192a:	29 f0       	breq	.+10     	; 0x1936 <calloc+0x2c>
    192c:	a8 01       	movw	r20, r16
    192e:	60 e0       	ldi	r22, 0x00	; 0
    1930:	70 e0       	ldi	r23, 0x00	; 0
    1932:	0e 94 ac 0c 	call	0x1958	; 0x1958 <memset>
    1936:	ce 01       	movw	r24, r28
    1938:	df 91       	pop	r29
    193a:	cf 91       	pop	r28
    193c:	1f 91       	pop	r17
    193e:	0f 91       	pop	r16
    1940:	08 95       	ret

00001942 <strnlen_P>:
    1942:	fc 01       	movw	r30, r24
    1944:	05 90       	lpm	r0, Z+
    1946:	61 50       	subi	r22, 0x01	; 1
    1948:	70 40       	sbci	r23, 0x00	; 0
    194a:	01 10       	cpse	r0, r1
    194c:	d8 f7       	brcc	.-10     	; 0x1944 <strnlen_P+0x2>
    194e:	80 95       	com	r24
    1950:	90 95       	com	r25
    1952:	8e 0f       	add	r24, r30
    1954:	9f 1f       	adc	r25, r31
    1956:	08 95       	ret

00001958 <memset>:
    1958:	dc 01       	movw	r26, r24
    195a:	01 c0       	rjmp	.+2      	; 0x195e <memset+0x6>
    195c:	6d 93       	st	X+, r22
    195e:	41 50       	subi	r20, 0x01	; 1
    1960:	50 40       	sbci	r21, 0x00	; 0
    1962:	e0 f7       	brcc	.-8      	; 0x195c <memset+0x4>
    1964:	08 95       	ret

00001966 <strnlen>:
    1966:	fc 01       	movw	r30, r24
    1968:	61 50       	subi	r22, 0x01	; 1
    196a:	70 40       	sbci	r23, 0x00	; 0
    196c:	01 90       	ld	r0, Z+
    196e:	01 10       	cpse	r0, r1
    1970:	d8 f7       	brcc	.-10     	; 0x1968 <strnlen+0x2>
    1972:	80 95       	com	r24
    1974:	90 95       	com	r25
    1976:	8e 0f       	add	r24, r30
    1978:	9f 1f       	adc	r25, r31
    197a:	08 95       	ret

0000197c <fputc>:
    197c:	0f 93       	push	r16
    197e:	1f 93       	push	r17
    1980:	cf 93       	push	r28
    1982:	df 93       	push	r29
    1984:	fb 01       	movw	r30, r22
    1986:	23 81       	ldd	r18, Z+3	; 0x03
    1988:	21 fd       	sbrc	r18, 1
    198a:	03 c0       	rjmp	.+6      	; 0x1992 <fputc+0x16>
    198c:	8f ef       	ldi	r24, 0xFF	; 255
    198e:	9f ef       	ldi	r25, 0xFF	; 255
    1990:	2c c0       	rjmp	.+88     	; 0x19ea <fputc+0x6e>
    1992:	22 ff       	sbrs	r18, 2
    1994:	16 c0       	rjmp	.+44     	; 0x19c2 <fputc+0x46>
    1996:	46 81       	ldd	r20, Z+6	; 0x06
    1998:	57 81       	ldd	r21, Z+7	; 0x07
    199a:	24 81       	ldd	r18, Z+4	; 0x04
    199c:	35 81       	ldd	r19, Z+5	; 0x05
    199e:	42 17       	cp	r20, r18
    19a0:	53 07       	cpc	r21, r19
    19a2:	44 f4       	brge	.+16     	; 0x19b4 <fputc+0x38>
    19a4:	a0 81       	ld	r26, Z
    19a6:	b1 81       	ldd	r27, Z+1	; 0x01
    19a8:	9d 01       	movw	r18, r26
    19aa:	2f 5f       	subi	r18, 0xFF	; 255
    19ac:	3f 4f       	sbci	r19, 0xFF	; 255
    19ae:	31 83       	std	Z+1, r19	; 0x01
    19b0:	20 83       	st	Z, r18
    19b2:	8c 93       	st	X, r24
    19b4:	26 81       	ldd	r18, Z+6	; 0x06
    19b6:	37 81       	ldd	r19, Z+7	; 0x07
    19b8:	2f 5f       	subi	r18, 0xFF	; 255
    19ba:	3f 4f       	sbci	r19, 0xFF	; 255
    19bc:	37 83       	std	Z+7, r19	; 0x07
    19be:	26 83       	std	Z+6, r18	; 0x06
    19c0:	14 c0       	rjmp	.+40     	; 0x19ea <fputc+0x6e>
    19c2:	8b 01       	movw	r16, r22
    19c4:	ec 01       	movw	r28, r24
    19c6:	fb 01       	movw	r30, r22
    19c8:	00 84       	ldd	r0, Z+8	; 0x08
    19ca:	f1 85       	ldd	r31, Z+9	; 0x09
    19cc:	e0 2d       	mov	r30, r0
    19ce:	09 95       	icall
    19d0:	89 2b       	or	r24, r25
    19d2:	e1 f6       	brne	.-72     	; 0x198c <fputc+0x10>
    19d4:	d8 01       	movw	r26, r16
    19d6:	16 96       	adiw	r26, 0x06	; 6
    19d8:	8d 91       	ld	r24, X+
    19da:	9c 91       	ld	r25, X
    19dc:	17 97       	sbiw	r26, 0x07	; 7
    19de:	01 96       	adiw	r24, 0x01	; 1
    19e0:	17 96       	adiw	r26, 0x07	; 7
    19e2:	9c 93       	st	X, r25
    19e4:	8e 93       	st	-X, r24
    19e6:	16 97       	sbiw	r26, 0x06	; 6
    19e8:	ce 01       	movw	r24, r28
    19ea:	df 91       	pop	r29
    19ec:	cf 91       	pop	r28
    19ee:	1f 91       	pop	r17
    19f0:	0f 91       	pop	r16
    19f2:	08 95       	ret

000019f4 <__ultoa_invert>:
    19f4:	fa 01       	movw	r30, r20
    19f6:	aa 27       	eor	r26, r26
    19f8:	28 30       	cpi	r18, 0x08	; 8
    19fa:	51 f1       	breq	.+84     	; 0x1a50 <__ultoa_invert+0x5c>
    19fc:	20 31       	cpi	r18, 0x10	; 16
    19fe:	81 f1       	breq	.+96     	; 0x1a60 <__ultoa_invert+0x6c>
    1a00:	e8 94       	clt
    1a02:	6f 93       	push	r22
    1a04:	6e 7f       	andi	r22, 0xFE	; 254
    1a06:	6e 5f       	subi	r22, 0xFE	; 254
    1a08:	7f 4f       	sbci	r23, 0xFF	; 255
    1a0a:	8f 4f       	sbci	r24, 0xFF	; 255
    1a0c:	9f 4f       	sbci	r25, 0xFF	; 255
    1a0e:	af 4f       	sbci	r26, 0xFF	; 255
    1a10:	b1 e0       	ldi	r27, 0x01	; 1
    1a12:	3e d0       	rcall	.+124    	; 0x1a90 <__ultoa_invert+0x9c>
    1a14:	b4 e0       	ldi	r27, 0x04	; 4
    1a16:	3c d0       	rcall	.+120    	; 0x1a90 <__ultoa_invert+0x9c>
    1a18:	67 0f       	add	r22, r23
    1a1a:	78 1f       	adc	r23, r24
    1a1c:	89 1f       	adc	r24, r25
    1a1e:	9a 1f       	adc	r25, r26
    1a20:	a1 1d       	adc	r26, r1
    1a22:	68 0f       	add	r22, r24
    1a24:	79 1f       	adc	r23, r25
    1a26:	8a 1f       	adc	r24, r26
    1a28:	91 1d       	adc	r25, r1
    1a2a:	a1 1d       	adc	r26, r1
    1a2c:	6a 0f       	add	r22, r26
    1a2e:	71 1d       	adc	r23, r1
    1a30:	81 1d       	adc	r24, r1
    1a32:	91 1d       	adc	r25, r1
    1a34:	a1 1d       	adc	r26, r1
    1a36:	20 d0       	rcall	.+64     	; 0x1a78 <__ultoa_invert+0x84>
    1a38:	09 f4       	brne	.+2      	; 0x1a3c <__ultoa_invert+0x48>
    1a3a:	68 94       	set
    1a3c:	3f 91       	pop	r19
    1a3e:	2a e0       	ldi	r18, 0x0A	; 10
    1a40:	26 9f       	mul	r18, r22
    1a42:	11 24       	eor	r1, r1
    1a44:	30 19       	sub	r19, r0
    1a46:	30 5d       	subi	r19, 0xD0	; 208
    1a48:	31 93       	st	Z+, r19
    1a4a:	de f6       	brtc	.-74     	; 0x1a02 <__ultoa_invert+0xe>
    1a4c:	cf 01       	movw	r24, r30
    1a4e:	08 95       	ret
    1a50:	46 2f       	mov	r20, r22
    1a52:	47 70       	andi	r20, 0x07	; 7
    1a54:	40 5d       	subi	r20, 0xD0	; 208
    1a56:	41 93       	st	Z+, r20
    1a58:	b3 e0       	ldi	r27, 0x03	; 3
    1a5a:	0f d0       	rcall	.+30     	; 0x1a7a <__ultoa_invert+0x86>
    1a5c:	c9 f7       	brne	.-14     	; 0x1a50 <__ultoa_invert+0x5c>
    1a5e:	f6 cf       	rjmp	.-20     	; 0x1a4c <__ultoa_invert+0x58>
    1a60:	46 2f       	mov	r20, r22
    1a62:	4f 70       	andi	r20, 0x0F	; 15
    1a64:	40 5d       	subi	r20, 0xD0	; 208
    1a66:	4a 33       	cpi	r20, 0x3A	; 58
    1a68:	18 f0       	brcs	.+6      	; 0x1a70 <__ultoa_invert+0x7c>
    1a6a:	49 5d       	subi	r20, 0xD9	; 217
    1a6c:	31 fd       	sbrc	r19, 1
    1a6e:	40 52       	subi	r20, 0x20	; 32
    1a70:	41 93       	st	Z+, r20
    1a72:	02 d0       	rcall	.+4      	; 0x1a78 <__ultoa_invert+0x84>
    1a74:	a9 f7       	brne	.-22     	; 0x1a60 <__ultoa_invert+0x6c>
    1a76:	ea cf       	rjmp	.-44     	; 0x1a4c <__ultoa_invert+0x58>
    1a78:	b4 e0       	ldi	r27, 0x04	; 4
    1a7a:	a6 95       	lsr	r26
    1a7c:	97 95       	ror	r25
    1a7e:	87 95       	ror	r24
    1a80:	77 95       	ror	r23
    1a82:	67 95       	ror	r22
    1a84:	ba 95       	dec	r27
    1a86:	c9 f7       	brne	.-14     	; 0x1a7a <__ultoa_invert+0x86>
    1a88:	00 97       	sbiw	r24, 0x00	; 0
    1a8a:	61 05       	cpc	r22, r1
    1a8c:	71 05       	cpc	r23, r1
    1a8e:	08 95       	ret
    1a90:	9b 01       	movw	r18, r22
    1a92:	ac 01       	movw	r20, r24
    1a94:	0a 2e       	mov	r0, r26
    1a96:	06 94       	lsr	r0
    1a98:	57 95       	ror	r21
    1a9a:	47 95       	ror	r20
    1a9c:	37 95       	ror	r19
    1a9e:	27 95       	ror	r18
    1aa0:	ba 95       	dec	r27
    1aa2:	c9 f7       	brne	.-14     	; 0x1a96 <__ultoa_invert+0xa2>
    1aa4:	62 0f       	add	r22, r18
    1aa6:	73 1f       	adc	r23, r19
    1aa8:	84 1f       	adc	r24, r20
    1aaa:	95 1f       	adc	r25, r21
    1aac:	a0 1d       	adc	r26, r0
    1aae:	08 95       	ret

00001ab0 <__prologue_saves__>:
    1ab0:	2f 92       	push	r2
    1ab2:	3f 92       	push	r3
    1ab4:	4f 92       	push	r4
    1ab6:	5f 92       	push	r5
    1ab8:	6f 92       	push	r6
    1aba:	7f 92       	push	r7
    1abc:	8f 92       	push	r8
    1abe:	9f 92       	push	r9
    1ac0:	af 92       	push	r10
    1ac2:	bf 92       	push	r11
    1ac4:	cf 92       	push	r12
    1ac6:	df 92       	push	r13
    1ac8:	ef 92       	push	r14
    1aca:	ff 92       	push	r15
    1acc:	0f 93       	push	r16
    1ace:	1f 93       	push	r17
    1ad0:	cf 93       	push	r28
    1ad2:	df 93       	push	r29
    1ad4:	cd b7       	in	r28, 0x3d	; 61
    1ad6:	de b7       	in	r29, 0x3e	; 62
    1ad8:	ca 1b       	sub	r28, r26
    1ada:	db 0b       	sbc	r29, r27
    1adc:	0f b6       	in	r0, 0x3f	; 63
    1ade:	f8 94       	cli
    1ae0:	de bf       	out	0x3e, r29	; 62
    1ae2:	0f be       	out	0x3f, r0	; 63
    1ae4:	cd bf       	out	0x3d, r28	; 61
    1ae6:	09 94       	ijmp

00001ae8 <__epilogue_restores__>:
    1ae8:	2a 88       	ldd	r2, Y+18	; 0x12
    1aea:	39 88       	ldd	r3, Y+17	; 0x11
    1aec:	48 88       	ldd	r4, Y+16	; 0x10
    1aee:	5f 84       	ldd	r5, Y+15	; 0x0f
    1af0:	6e 84       	ldd	r6, Y+14	; 0x0e
    1af2:	7d 84       	ldd	r7, Y+13	; 0x0d
    1af4:	8c 84       	ldd	r8, Y+12	; 0x0c
    1af6:	9b 84       	ldd	r9, Y+11	; 0x0b
    1af8:	aa 84       	ldd	r10, Y+10	; 0x0a
    1afa:	b9 84       	ldd	r11, Y+9	; 0x09
    1afc:	c8 84       	ldd	r12, Y+8	; 0x08
    1afe:	df 80       	ldd	r13, Y+7	; 0x07
    1b00:	ee 80       	ldd	r14, Y+6	; 0x06
    1b02:	fd 80       	ldd	r15, Y+5	; 0x05
    1b04:	0c 81       	ldd	r16, Y+4	; 0x04
    1b06:	1b 81       	ldd	r17, Y+3	; 0x03
    1b08:	aa 81       	ldd	r26, Y+2	; 0x02
    1b0a:	b9 81       	ldd	r27, Y+1	; 0x01
    1b0c:	ce 0f       	add	r28, r30
    1b0e:	d1 1d       	adc	r29, r1
    1b10:	0f b6       	in	r0, 0x3f	; 63
    1b12:	f8 94       	cli
    1b14:	de bf       	out	0x3e, r29	; 62
    1b16:	0f be       	out	0x3f, r0	; 63
    1b18:	cd bf       	out	0x3d, r28	; 61
    1b1a:	ed 01       	movw	r28, r26
    1b1c:	08 95       	ret

00001b1e <_exit>:
    1b1e:	f8 94       	cli

00001b20 <__stop_program>:
    1b20:	ff cf       	rjmp	.-2      	; 0x1b20 <__stop_program>
