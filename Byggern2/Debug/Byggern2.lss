
Byggern2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000b2  00800100  00001a58  00001aec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001a58  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000012  008001b2  008001b2  00001b9e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001b9e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001bfc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000248  00000000  00000000  00001c38  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002639  00000000  00000000  00001e80  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001257  00000000  00000000  000044b9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001250  00000000  00000000  00005710  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000540  00000000  00000000  00006960  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000921  00000000  00000000  00006ea0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001263  00000000  00000000  000077c1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001e8  00000000  00000000  00008a24  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 8f 03 	jmp	0x71e	; 0x71e <__ctors_end>
       4:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
       8:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
       c:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
      10:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
      14:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
      18:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
      1c:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
      20:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
      24:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
      28:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
      2c:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
      30:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
      34:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
      38:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
      3c:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
      40:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
      44:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
      48:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
      4c:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
      50:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
      54:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
      58:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
      5c:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
      60:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
      64:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
      68:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>
      6c:	0c 94 ac 03 	jmp	0x758	; 0x758 <__bad_interrupt>

00000070 <__trampolines_end>:
      70:	00 00       	nop
      72:	00 00       	nop
      74:	00 5c       	subi	r16, 0xC0	; 192
      76:	00 00       	nop
      78:	0c 00       	.word	0x000c	; ????
      7a:	0c 00       	.word	0x000c	; ????
      7c:	7c 28       	or	r7, r12
      7e:	7c 28       	or	r7, r12
      80:	58 dc       	rcall	.-1872   	; 0xfffff932 <__eeprom_end+0xff7ef932>
      82:	68 00       	.word	0x0068	; ????
      84:	24 10       	cpse	r2, r4
      86:	48 00       	.word	0x0048	; ????
      88:	28 54       	subi	r18, 0x48	; 72
      8a:	28 40       	sbci	r18, 0x08	; 8
      8c:	00 0c       	add	r0, r0
      8e:	00 00       	nop
      90:	00 78       	andi	r16, 0x80	; 128
      92:	84 00       	.word	0x0084	; ????
      94:	84 78       	andi	r24, 0x84	; 132
      96:	00 00       	nop
      98:	54 38       	cpi	r21, 0x84	; 132
      9a:	54 00       	.word	0x0054	; ????
      9c:	10 7c       	andi	r17, 0xC0	; 192
      9e:	10 00       	.word	0x0010	; ????
      a0:	80 40       	sbci	r24, 0x00	; 0
      a2:	00 00       	nop
      a4:	10 10       	cpse	r1, r0
      a6:	10 00       	.word	0x0010	; ????
      a8:	00 40       	sbci	r16, 0x00	; 0
      aa:	00 00       	nop
      ac:	60 10       	cpse	r6, r0
      ae:	0c 00       	.word	0x000c	; ????
      b0:	38 54       	subi	r19, 0x48	; 72
      b2:	38 00       	.word	0x0038	; ????
      b4:	48 7c       	andi	r20, 0xC8	; 200
      b6:	40 00       	.word	0x0040	; ????
      b8:	48 64       	ori	r20, 0x48	; 72
      ba:	58 00       	.word	0x0058	; ????
      bc:	44 54       	subi	r20, 0x44	; 68
      be:	2c 00       	.word	0x002c	; ????
      c0:	1c 10       	cpse	r1, r12
      c2:	7c 00       	.word	0x007c	; ????
      c4:	5c 54       	subi	r21, 0x4C	; 76
      c6:	24 00       	.word	0x0024	; ????
      c8:	38 54       	subi	r19, 0x48	; 72
      ca:	24 00       	.word	0x0024	; ????
      cc:	64 14       	cp	r6, r4
      ce:	0c 00       	.word	0x000c	; ????
      d0:	68 54       	subi	r22, 0x48	; 72
      d2:	2c 00       	.word	0x002c	; ????
      d4:	48 54       	subi	r20, 0x48	; 72
      d6:	38 00       	.word	0x0038	; ????
      d8:	00 48       	sbci	r16, 0x80	; 128
      da:	00 00       	nop
      dc:	80 48       	sbci	r24, 0x80	; 128
      de:	00 00       	nop
      e0:	10 28       	or	r1, r0
      e2:	44 00       	.word	0x0044	; ????
      e4:	28 28       	or	r2, r8
      e6:	28 00       	.word	0x0028	; ????
      e8:	44 28       	or	r4, r4
      ea:	10 00       	.word	0x0010	; ????
      ec:	04 54       	subi	r16, 0x44	; 68
      ee:	08 00       	.word	0x0008	; ????
      f0:	38 44       	sbci	r19, 0x48	; 72
      f2:	5c 00       	.word	0x005c	; ????
      f4:	78 14       	cp	r7, r8
      f6:	78 00       	.word	0x0078	; ????
      f8:	7c 54       	subi	r23, 0x4C	; 76
      fa:	28 00       	.word	0x0028	; ????
      fc:	38 44       	sbci	r19, 0x48	; 72
      fe:	28 00       	.word	0x0028	; ????
     100:	7c 44       	sbci	r23, 0x4C	; 76
     102:	38 00       	.word	0x0038	; ????
     104:	7c 54       	subi	r23, 0x4C	; 76
     106:	44 00       	.word	0x0044	; ????
     108:	7c 14       	cp	r7, r12
     10a:	04 00       	.word	0x0004	; ????
     10c:	38 44       	sbci	r19, 0x48	; 72
     10e:	74 00       	.word	0x0074	; ????
     110:	7c 10       	cpse	r7, r12
     112:	7c 00       	.word	0x007c	; ????
     114:	44 7c       	andi	r20, 0xC4	; 196
     116:	44 00       	.word	0x0044	; ????
     118:	20 40       	sbci	r18, 0x00	; 0
     11a:	3c 00       	.word	0x003c	; ????
     11c:	7c 10       	cpse	r7, r12
     11e:	6c 00       	.word	0x006c	; ????
     120:	7c 40       	sbci	r23, 0x0C	; 12
     122:	40 00       	.word	0x0040	; ????
     124:	7c 18       	sub	r7, r12
     126:	7c 00       	.word	0x007c	; ????
     128:	78 10       	cpse	r7, r8
     12a:	3c 00       	.word	0x003c	; ????
     12c:	38 44       	sbci	r19, 0x48	; 72
     12e:	38 00       	.word	0x0038	; ????
     130:	7c 14       	cp	r7, r12
     132:	08 00       	.word	0x0008	; ????
     134:	38 44       	sbci	r19, 0x48	; 72
     136:	b8 00       	.word	0x00b8	; ????
     138:	7c 14       	cp	r7, r12
     13a:	68 00       	.word	0x0068	; ????
     13c:	48 54       	subi	r20, 0x48	; 72
     13e:	24 00       	.word	0x0024	; ????
     140:	04 7c       	andi	r16, 0xC4	; 196
     142:	04 00       	.word	0x0004	; ????
     144:	7c 40       	sbci	r23, 0x0C	; 12
     146:	7c 00       	.word	0x007c	; ????
     148:	3c 60       	ori	r19, 0x0C	; 12
     14a:	3c 00       	.word	0x003c	; ????
     14c:	7c 30       	cpi	r23, 0x0C	; 12
     14e:	7c 00       	.word	0x007c	; ????
     150:	6c 10       	cpse	r6, r12
     152:	6c 00       	.word	0x006c	; ????
     154:	0c 70       	andi	r16, 0x0C	; 12
     156:	0c 00       	.word	0x000c	; ????
     158:	64 54       	subi	r22, 0x44	; 68
     15a:	4c 00       	.word	0x004c	; ????
     15c:	00 7c       	andi	r16, 0xC0	; 192
     15e:	44 00       	.word	0x0044	; ????
     160:	0c 10       	cpse	r0, r12
     162:	60 00       	.word	0x0060	; ????
     164:	44 7c       	andi	r20, 0xC4	; 196
     166:	00 00       	nop
     168:	08 04       	cpc	r0, r8
     16a:	08 00       	.word	0x0008	; ????
     16c:	80 80       	ld	r8, Z
     16e:	80 00       	.word	0x0080	; ????
     170:	00 04       	cpc	r0, r0
     172:	08 00       	.word	0x0008	; ????
     174:	30 48       	sbci	r19, 0x80	; 128
     176:	78 00       	.word	0x0078	; ????
     178:	7c 48       	sbci	r23, 0x8C	; 140
     17a:	30 00       	.word	0x0030	; ????
     17c:	30 48       	sbci	r19, 0x80	; 128
     17e:	48 00       	.word	0x0048	; ????
     180:	30 48       	sbci	r19, 0x80	; 128
     182:	7c 00       	.word	0x007c	; ????
     184:	30 68       	ori	r19, 0x80	; 128
     186:	50 00       	.word	0x0050	; ????
     188:	10 78       	andi	r17, 0x80	; 128
     18a:	14 00       	.word	0x0014	; ????
     18c:	90 a8       	ldd	r9, Z+48	; 0x30
     18e:	78 00       	.word	0x0078	; ????
     190:	7c 08       	sbc	r7, r12
     192:	70 00       	.word	0x0070	; ????
     194:	50 74       	andi	r21, 0x40	; 64
     196:	40 00       	.word	0x0040	; ????
     198:	80 80       	ld	r8, Z
     19a:	74 00       	.word	0x0074	; ????
     19c:	7c 10       	cpse	r7, r12
     19e:	68 00       	.word	0x0068	; ????
     1a0:	44 7c       	andi	r20, 0xC4	; 196
     1a2:	40 00       	.word	0x0040	; ????
     1a4:	78 10       	cpse	r7, r8
     1a6:	78 00       	.word	0x0078	; ????
     1a8:	78 08       	sbc	r7, r8
     1aa:	70 00       	.word	0x0070	; ????
     1ac:	30 48       	sbci	r19, 0x80	; 128
     1ae:	30 00       	.word	0x0030	; ????
     1b0:	f8 28       	or	r15, r8
     1b2:	10 00       	.word	0x0010	; ????
     1b4:	30 48       	sbci	r19, 0x80	; 128
     1b6:	f8 00       	.word	0x00f8	; ????
     1b8:	78 10       	cpse	r7, r8
     1ba:	08 00       	.word	0x0008	; ????
     1bc:	50 58       	subi	r21, 0x80	; 128
     1be:	28 00       	.word	0x0028	; ????
     1c0:	08 3c       	cpi	r16, 0xC8	; 200
     1c2:	48 00       	.word	0x0048	; ????
     1c4:	38 40       	sbci	r19, 0x08	; 8
     1c6:	78 00       	.word	0x0078	; ????
     1c8:	38 40       	sbci	r19, 0x08	; 8
     1ca:	38 00       	.word	0x0038	; ????
     1cc:	78 20       	and	r7, r8
     1ce:	78 00       	.word	0x0078	; ????
     1d0:	48 30       	cpi	r20, 0x08	; 8
     1d2:	48 00       	.word	0x0048	; ????
     1d4:	98 a0       	ldd	r9, Y+32	; 0x20
     1d6:	78 00       	.word	0x0078	; ????
     1d8:	48 68       	ori	r20, 0x88	; 136
     1da:	58 00       	.word	0x0058	; ????
     1dc:	10 78       	andi	r17, 0x80	; 128
     1de:	84 00       	.word	0x0084	; ????
     1e0:	00 7c       	andi	r16, 0xC0	; 192
     1e2:	00 00       	nop
     1e4:	84 78       	andi	r24, 0x84	; 132
     1e6:	10 00       	.word	0x0010	; ????
     1e8:	08 04       	cpc	r0, r8
     1ea:	08 04       	cpc	r0, r8

000001ec <font6>:
	...
     1f4:	5f 00 00 00 00 07 00 07 00 00 14 7f 14 7f 14 00     _...............
     204:	24 2a 7f 2a 12 00 23 13 08 64 62 00 36 49 55 22     $*.*..#..db.6IU"
     214:	50 00 00 05 03 00 00 00 00 1c 22 41 00 00 00 41     P........."A...A
     224:	22 1c 00 00 08 2a 1c 2a 08 00 08 08 3e 08 08 00     "....*.*....>...
     234:	00 50 30 00 00 00 08 08 08 08 08 00 00 60 60 00     .P0..........``.
     244:	00 00 20 10 08 04 02 00 3e 51 49 45 3e 00 00 42     .. .....>QIE>..B
     254:	7f 40 00 00 42 61 51 49 46 00 21 41 45 4b 31 00     .@..BaQIF.!AEK1.
     264:	18 14 12 7f 10 00 27 45 45 45 39 00 3c 4a 49 49     ......'EEE9.<JII
     274:	30 00 01 71 09 05 03 00 36 49 49 49 36 00 06 49     0..q....6III6..I
     284:	49 29 1e 00 00 36 36 00 00 00 00 56 36 00 00 00     I)...66....V6...
     294:	08 1c 2a 08 08 00 14 14 14 14 14 00 08 08 2a 1c     ..*...........*.
     2a4:	08 00 02 01 51 09 06 00 32 49 79 41 3e 00 7e 11     ....Q...2IyA>.~.
     2b4:	11 11 7e 00 7f 49 49 49 36 00 3e 41 41 41 22 00     ..~..III6.>AAA".
     2c4:	7f 41 41 22 1c 00 7f 49 49 49 41 00 7f 09 09 01     .AA"...IIIA.....
     2d4:	01 00 3e 41 41 51 32 00 7f 08 08 08 7f 00 00 41     ..>AAQ2........A
     2e4:	7f 41 00 00 20 40 41 3f 01 00 7f 08 14 22 41 00     .A.. @A?....."A.
     2f4:	7f 40 40 40 40 00 7f 02 04 02 7f 00 7f 04 08 10     .@@@@...........
     304:	7f 00 3e 41 41 41 3e 00 7f 09 09 09 06 00 3e 41     ..>AAA>.......>A
     314:	51 21 5e 00 7f 09 19 29 46 00 46 49 49 49 31 00     Q!^....)F.FIII1.
     324:	01 01 7f 01 01 00 3f 40 40 40 3f 00 1f 20 40 20     ......?@@@?.. @ 
     334:	1f 00 7f 20 18 20 7f 00 63 14 08 14 63 00 03 04     ... . ..c...c...
     344:	78 04 03 00 61 51 49 45 43 00 00 00 7f 41 41 00     x...aQIEC....AA.
     354:	02 04 08 10 20 00 41 41 7f 00 00 00 04 02 01 02     .... .AA........
     364:	04 00 40 40 40 40 40 00 00 01 02 04 00 00 20 54     ..@@@@@....... T
     374:	54 54 78 00 7f 48 44 44 38 00 38 44 44 44 20 00     TTx..HDD8.8DDD .
     384:	38 44 44 48 7f 00 38 54 54 54 18 00 08 7e 09 01     8DDH..8TTT...~..
     394:	02 00 08 14 54 54 3c 00 7f 08 04 04 78 00 00 44     ....TT<.....x..D
     3a4:	7d 40 00 00 20 40 44 3d 00 00 00 7f 10 28 44 00     }@.. @D=.....(D.
     3b4:	00 41 7f 40 00 00 7c 04 18 04 78 00 7c 08 04 04     .A.@..|...x.|...
     3c4:	78 00 38 44 44 44 38 00 7c 14 14 14 08 00 08 14     x.8DDD8.|.......
     3d4:	14 18 7c 00 7c 08 04 04 08 00 48 54 54 54 20 00     ..|.|.....HTTT .
     3e4:	04 3f 44 40 20 00 3c 40 40 20 7c 00 1c 20 40 20     .?D@ .<@@ |.. @ 
     3f4:	1c 00 3c 40 30 40 3c 00 44 28 10 28 44 00 0c 50     ..<@0@<.D(.(D..P
     404:	50 50 3c 00 44 64 54 4c 44 00 00 08 36 41 00 00     PP<.DdTLD...6A..
     414:	00 00 7f 00 00 00 00 41 36 08 00 00 02 01 03 02     .......A6.......
     424:	01 00                                               ..

00000426 <font8>:
	...
     42e:	00 06 5f 5f 06 00 00 00 00 07 07 00 07 07 00 00     ..__............
     43e:	14 7f 7f 14 7f 7f 14 00 24 2e 6b 6b 3a 12 00 00     ........$.kk:...
     44e:	46 66 30 18 0c 66 62 00 30 7a 4f 5d 37 7a 48 00     Ff0..fb.0zO]7zH.
     45e:	04 07 03 00 00 00 00 00 00 1c 3e 63 41 00 00 00     ..........>cA...
     46e:	00 41 63 3e 1c 00 00 00 08 2a 3e 1c 1c 3e 2a 08     .Ac>.....*>..>*.
     47e:	08 08 3e 3e 08 08 00 00 00 a0 e0 60 00 00 00 00     ..>>.......`....
     48e:	08 08 08 08 08 08 00 00 00 00 60 60 00 00 00 00     ..........``....
     49e:	60 30 18 0c 06 03 01 00 3e 7f 59 4d 7f 3e 00 00     `0......>.YM.>..
     4ae:	42 42 7f 7f 40 40 00 00 62 73 59 49 6f 66 00 00     BB..@@..bsYIof..
     4be:	22 63 49 49 7f 36 00 00 18 1c 16 13 7f 7f 10 00     "cII.6..........
     4ce:	27 67 45 45 7d 39 00 00 3c 7e 4b 49 79 30 00 00     'gEE}9..<~KIy0..
     4de:	03 63 71 19 0f 07 00 00 36 7f 49 49 7f 36 00 00     .cq.....6.II.6..
     4ee:	06 4f 49 69 3f 1e 00 00 00 00 6c 6c 00 00 00 00     .OIi?.....ll....
     4fe:	00 a0 ec 6c 00 00 00 00 18 24 42 99 24 42 81 00     ...l.....$B.$B..
     50e:	14 14 14 14 14 14 00 00 81 42 24 99 42 24 18 00     .........B$.B$..
     51e:	02 03 51 59 0f 06 00 00 3e 7f 41 5d 5d 1f 1e 00     ..QY....>.A]]...
     52e:	7c 7e 13 13 7e 7c 00 00 41 7f 7f 49 49 7f 36 00     |~..~|..A..II.6.
     53e:	1c 3e 63 41 41 63 22 00 41 7f 7f 41 63 7f 1c 00     .>cAAc".A..Ac...
     54e:	41 7f 7f 49 5d 41 63 00 41 7f 7f 49 1d 01 03 00     A..I]Ac.A..I....
     55e:	1c 3e 63 41 51 73 72 00 7f 7f 08 08 7f 7f 00 00     .>cAQsr.........
     56e:	00 41 7f 7f 41 00 00 00 30 70 40 41 7f 3f 01 00     .A..A...0p@A.?..
     57e:	41 7f 7f 08 1c 77 63 00 41 7f 7f 41 40 60 70 00     A....wc.A..A@`p.
     58e:	7f 7f 06 0c 06 7f 7f 00 7f 7f 06 0c 18 7f 7f 00     ................
     59e:	1c 3e 63 41 63 3e 1c 00 41 7f 7f 49 09 0f 06 00     .>cAc>..A..I....
     5ae:	1e 3f 21 71 7f 5e 00 00 41 7f 7f 19 39 6f 46 00     .?!q.^..A...9oF.
     5be:	26 67 4d 59 7b 32 00 00 03 41 7f 7f 41 03 00 00     &gMY{2...A..A...
     5ce:	7f 7f 40 40 7f 7f 00 00 1f 3f 60 60 3f 1f 00 00     ..@@.....?``?...
     5de:	7f 7f 30 18 30 7f 7f 00 63 77 1c 08 1c 77 63 00     ..0.0...cw...wc.
     5ee:	07 4f 78 78 4f 07 00 00 67 73 59 4d 47 63 71 00     .OxxO...gsYMGcq.
     5fe:	00 7f 7f 41 41 00 00 00 01 03 06 0c 18 30 60 00     ...AA........0`.
     60e:	00 41 41 7f 7f 00 00 00 08 0c 06 03 06 0c 08 00     .AA.............
     61e:	80 80 80 80 80 80 80 80 00 00 03 07 04 00 00 00     ................
     62e:	20 74 54 54 3c 78 40 00 41 3f 7f 44 44 7c 38 00      tTT<x@.A?.DD|8.
     63e:	38 7c 44 44 6c 28 00 00 30 78 48 49 3f 7f 40 00     8|DDl(..0xHI?.@.
     64e:	38 7c 54 54 5c 18 00 00 48 7e 7f 49 03 02 00 00     8|TT\...H~.I....
     65e:	98 bc a4 a4 f8 7c 04 00 41 7f 7f 08 04 7c 78 00     .....|..A....|x.
     66e:	00 44 7d 7d 40 00 00 00 40 c4 84 fd 7d 00 00 00     .D}}@...@...}...
     67e:	41 7f 7f 10 38 6c 44 00 00 41 7f 7f 40 00 00 00     A...8lD..A..@...
     68e:	7c 7c 0c 18 0c 7c 78 00 7c 7c 04 04 7c 78 00 00     ||...|x.||..|x..
     69e:	38 7c 44 44 7c 38 00 00 84 fc f8 a4 24 3c 18 00     8|DD|8......$<..
     6ae:	18 3c 24 a4 f8 fc 84 00 44 7c 78 44 1c 18 00 00     .<$.....D|xD....
     6be:	48 5c 54 54 74 24 00 00 00 04 3e 7f 44 24 00 00     H\TTt$....>.D$..
     6ce:	3c 7c 40 40 3c 7c 40 00 1c 3c 60 60 3c 1c 00 00     <|@@<|@..<``<...
     6de:	3c 7c 60 30 60 7c 3c 00 44 6c 38 10 38 6c 44 00     <|`0`|<.Dl8.8lD.
     6ee:	9c bc a0 a0 fc 7c 00 00 4c 64 74 5c 4c 64 00 00     .....|..Ldt\Ld..
     6fe:	08 08 3e 77 41 41 00 00 00 00 00 77 77 00 00 00     ..>wAA.....ww...
     70e:	41 41 77 3e 08 08 00 00 02 03 01 03 02 03 01 00     AAw>............

0000071e <__ctors_end>:
     71e:	11 24       	eor	r1, r1
     720:	1f be       	out	0x3f, r1	; 63
     722:	cf ef       	ldi	r28, 0xFF	; 255
     724:	d4 e0       	ldi	r29, 0x04	; 4
     726:	de bf       	out	0x3e, r29	; 62
     728:	cd bf       	out	0x3d, r28	; 61

0000072a <__do_copy_data>:
     72a:	11 e0       	ldi	r17, 0x01	; 1
     72c:	a0 e0       	ldi	r26, 0x00	; 0
     72e:	b1 e0       	ldi	r27, 0x01	; 1
     730:	e8 e5       	ldi	r30, 0x58	; 88
     732:	fa e1       	ldi	r31, 0x1A	; 26
     734:	02 c0       	rjmp	.+4      	; 0x73a <__do_copy_data+0x10>
     736:	05 90       	lpm	r0, Z+
     738:	0d 92       	st	X+, r0
     73a:	a2 3b       	cpi	r26, 0xB2	; 178
     73c:	b1 07       	cpc	r27, r17
     73e:	d9 f7       	brne	.-10     	; 0x736 <__do_copy_data+0xc>

00000740 <__do_clear_bss>:
     740:	21 e0       	ldi	r18, 0x01	; 1
     742:	a2 eb       	ldi	r26, 0xB2	; 178
     744:	b1 e0       	ldi	r27, 0x01	; 1
     746:	01 c0       	rjmp	.+2      	; 0x74a <.do_clear_bss_start>

00000748 <.do_clear_bss_loop>:
     748:	1d 92       	st	X+, r1

0000074a <.do_clear_bss_start>:
     74a:	a4 3c       	cpi	r26, 0xC4	; 196
     74c:	b2 07       	cpc	r27, r18
     74e:	e1 f7       	brne	.-8      	; 0x748 <.do_clear_bss_loop>
     750:	0e 94 74 07 	call	0xee8	; 0xee8 <main>
     754:	0c 94 2a 0d 	jmp	0x1a54	; 0x1a54 <_exit>

00000758 <__bad_interrupt>:
     758:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000075c <clock_init>:
#define CONVERSION_DELAY 50


void clock_init(void){
	//Set pin pd4 as output
	DDRD |= (1 << DDD4);
     75c:	8c 9a       	sbi	0x11, 4	; 17
	
	// 1.3 MHz?
	cli(); //clears the global interrupt flag in SREG to prevent any form of interrupt occuring.
     75e:	f8 94       	cli
	TCCR3A |= (1 << COM3A0);
     760:	eb e8       	ldi	r30, 0x8B	; 139
     762:	f0 e0       	ldi	r31, 0x00	; 0
     764:	80 81       	ld	r24, Z
     766:	80 64       	ori	r24, 0x40	; 64
     768:	80 83       	st	Z, r24
	TCCR3B |= (1 << CS30);
     76a:	ea e8       	ldi	r30, 0x8A	; 138
     76c:	f0 e0       	ldi	r31, 0x00	; 0
     76e:	80 81       	ld	r24, Z
     770:	81 60       	ori	r24, 0x01	; 1
     772:	80 83       	st	Z, r24
	TCCR3B |= (1 << WGM32);
     774:	80 81       	ld	r24, Z
     776:	88 60       	ori	r24, 0x08	; 8
     778:	80 83       	st	Z, r24
	OCR3A = 1;
     77a:	81 e0       	ldi	r24, 0x01	; 1
     77c:	90 e0       	ldi	r25, 0x00	; 0
     77e:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
     782:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
	sei(); // Enables interrupts by setting the global interrupt mask.
     786:	78 94       	sei
     788:	08 95       	ret

0000078a <adc_init>:
};

void adc_init (void){
	//Configuration data to be written to ADC

	clock_init();
     78a:	0e 94 ae 03 	call	0x75c	; 0x75c <clock_init>
     78e:	08 95       	ret

00000790 <adc_read>:
		

	
}

int adc_read(int channel){
     790:	cf 93       	push	r28
     792:	c8 2f       	mov	r28, r24
	//D7 = 1, only the channel specified by An is converted. A single !RD pulse reads the result of that conversion

	uint8_t confData = 0b10000000 | channel;
	uint16_t adcMemArea = 0x400;

	xmem_init();
     794:	0e 94 65 07 	call	0xeca	; 0xeca <xmem_init>
	xmem_write(confData, adcMemArea);
     798:	60 e0       	ldi	r22, 0x00	; 0
     79a:	74 e0       	ldi	r23, 0x04	; 4
     79c:	8c 2f       	mov	r24, r28
     79e:	80 68       	ori	r24, 0x80	; 128
     7a0:	0e 94 6c 07 	call	0xed8	; 0xed8 <xmem_write>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     7a4:	80 e1       	ldi	r24, 0x10	; 16
     7a6:	8a 95       	dec	r24
     7a8:	f1 f7       	brne	.-4      	; 0x7a6 <adc_read+0x16>
     7aa:	00 c0       	rjmp	.+0      	; 0x7ac <adc_read+0x1c>
	_delay_us(CONVERSION_DELAY);
	uint8_t result = xmem_read(adcMemArea);
     7ac:	80 e0       	ldi	r24, 0x00	; 0
     7ae:	94 e0       	ldi	r25, 0x04	; 4
     7b0:	0e 94 70 07 	call	0xee0	; 0xee0 <xmem_read>
     7b4:	90 e1       	ldi	r25, 0x10	; 16
     7b6:	9a 95       	dec	r25
     7b8:	f1 f7       	brne	.-4      	; 0x7b6 <adc_read+0x26>
     7ba:	00 c0       	rjmp	.+0      	; 0x7bc <adc_read+0x2c>

	_delay_us(CONVERSION_DELAY);

	return result;
}
     7bc:	90 e0       	ldi	r25, 0x00	; 0
     7be:	cf 91       	pop	r28
     7c0:	08 95       	ret

000007c2 <joystick_calibrate>:


volatile uint8_t x_offset;
volatile uint8_t y_offset;

void joystick_calibrate(){
     7c2:	cf 92       	push	r12
     7c4:	df 92       	push	r13
     7c6:	ef 92       	push	r14
     7c8:	ff 92       	push	r15
     7ca:	0f 93       	push	r16
     7cc:	1f 93       	push	r17
     7ce:	cf 93       	push	r28
     7d0:	df 93       	push	r29
     7d2:	cd b7       	in	r28, 0x3d	; 61
     7d4:	de b7       	in	r29, 0x3e	; 62
     7d6:	c0 59       	subi	r28, 0x90	; 144
     7d8:	d1 40       	sbci	r29, 0x01	; 1
     7da:	0f b6       	in	r0, 0x3f	; 63
     7dc:	f8 94       	cli
     7de:	de bf       	out	0x3e, r29	; 62
     7e0:	0f be       	out	0x3f, r0	; 63
     7e2:	cd bf       	out	0x3d, r28	; 61
     7e4:	8e 01       	movw	r16, r28
     7e6:	07 53       	subi	r16, 0x37	; 55
     7e8:	1f 4f       	sbci	r17, 0xFF	; 255
     7ea:	ce 01       	movw	r24, r28
     7ec:	01 96       	adiw	r24, 0x01	; 1
     7ee:	7c 01       	movw	r14, r24
     7f0:	6e 01       	movw	r12, r28
     7f2:	9f e6       	ldi	r25, 0x6F	; 111
     7f4:	c9 1a       	sub	r12, r25
     7f6:	9e ef       	ldi	r25, 0xFE	; 254
     7f8:	d9 0a       	sbc	r13, r25
	int n=100,arrx[n],arry[n];
	for(int i = 0;i < n;i++) {
		arrx[i]=adc_read(1);
     7fa:	81 e0       	ldi	r24, 0x01	; 1
     7fc:	90 e0       	ldi	r25, 0x00	; 0
     7fe:	0e 94 c8 03 	call	0x790	; 0x790 <adc_read>
     802:	f8 01       	movw	r30, r16
     804:	81 93       	st	Z+, r24
     806:	91 93       	st	Z+, r25
     808:	8f 01       	movw	r16, r30
		arry[i]=adc_read(0);
     80a:	80 e0       	ldi	r24, 0x00	; 0
     80c:	90 e0       	ldi	r25, 0x00	; 0
     80e:	0e 94 c8 03 	call	0x790	; 0x790 <adc_read>
     812:	f7 01       	movw	r30, r14
     814:	81 93       	st	Z+, r24
     816:	91 93       	st	Z+, r25
     818:	7f 01       	movw	r14, r30
volatile uint8_t x_offset;
volatile uint8_t y_offset;

void joystick_calibrate(){
	int n=100,arrx[n],arry[n];
	for(int i = 0;i < n;i++) {
     81a:	0c 15       	cp	r16, r12
     81c:	1d 05       	cpc	r17, r13
     81e:	69 f7       	brne	.-38     	; 0x7fa <joystick_calibrate+0x38>
		arrx[i]=adc_read(1);
		arry[i]=adc_read(0);
	}
	
	x_offset = util_median(arrx,n);
     820:	64 e6       	ldi	r22, 0x64	; 100
     822:	70 e0       	ldi	r23, 0x00	; 0
     824:	ce 01       	movw	r24, r28
     826:	87 53       	subi	r24, 0x37	; 55
     828:	9f 4f       	sbci	r25, 0xFF	; 255
     82a:	0e 94 cb 07 	call	0xf96	; 0xf96 <util_median>
     82e:	80 93 b5 01 	sts	0x01B5, r24	; 0x8001b5 <x_offset>
	y_offset = util_median(arry,n);
     832:	64 e6       	ldi	r22, 0x64	; 100
     834:	70 e0       	ldi	r23, 0x00	; 0
     836:	ce 01       	movw	r24, r28
     838:	01 96       	adiw	r24, 0x01	; 1
     83a:	0e 94 cb 07 	call	0xf96	; 0xf96 <util_median>
     83e:	80 93 b4 01 	sts	0x01B4, r24	; 0x8001b4 <y_offset>
}
     842:	c0 57       	subi	r28, 0x70	; 112
     844:	de 4f       	sbci	r29, 0xFE	; 254
     846:	0f b6       	in	r0, 0x3f	; 63
     848:	f8 94       	cli
     84a:	de bf       	out	0x3e, r29	; 62
     84c:	0f be       	out	0x3f, r0	; 63
     84e:	cd bf       	out	0x3d, r28	; 61
     850:	df 91       	pop	r29
     852:	cf 91       	pop	r28
     854:	1f 91       	pop	r17
     856:	0f 91       	pop	r16
     858:	ff 90       	pop	r15
     85a:	ef 90       	pop	r14
     85c:	df 90       	pop	r13
     85e:	cf 90       	pop	r12
     860:	08 95       	ret

00000862 <f_newgame>:
	
	return new_submenu;
}

void f_newgame(){
	oled_reset();
     862:	0e 94 b3 05 	call	0xb66	; 0xb66 <oled_reset>
	oled_center_print("New Game", 8);
     866:	68 e0       	ldi	r22, 0x08	; 8
     868:	70 e0       	ldi	r23, 0x00	; 0
     86a:	8c e0       	ldi	r24, 0x0C	; 12
     86c:	91 e0       	ldi	r25, 0x01	; 1
     86e:	0e 94 72 06 	call	0xce4	; 0xce4 <oled_center_print>
     872:	08 95       	ret

00000874 <f_debugging>:
}


void f_debugging(){
	oled_reset();
     874:	0e 94 b3 05 	call	0xb66	; 0xb66 <oled_reset>
	oled_center_print("Debugging", 8);
     878:	68 e0       	ldi	r22, 0x08	; 8
     87a:	70 e0       	ldi	r23, 0x00	; 0
     87c:	85 e1       	ldi	r24, 0x15	; 21
     87e:	91 e0       	ldi	r25, 0x01	; 1
     880:	0e 94 72 06 	call	0xce4	; 0xce4 <oled_center_print>
     884:	08 95       	ret

00000886 <f_difficulty>:
}

void f_difficulty(){
	oled_reset();
     886:	0e 94 b3 05 	call	0xb66	; 0xb66 <oled_reset>
	oled_center_print("Difficulty", 8);
     88a:	68 e0       	ldi	r22, 0x08	; 8
     88c:	70 e0       	ldi	r23, 0x00	; 0
     88e:	8f e1       	ldi	r24, 0x1F	; 31
     890:	91 e0       	ldi	r25, 0x01	; 1
     892:	0e 94 72 06 	call	0xce4	; 0xce4 <oled_center_print>
     896:	08 95       	ret

00000898 <f_calibrate>:
}

void f_calibrate(){
	oled_reset();
     898:	0e 94 b3 05 	call	0xb66	; 0xb66 <oled_reset>
	oled_center_print("Calibrate", 8);
     89c:	68 e0       	ldi	r22, 0x08	; 8
     89e:	70 e0       	ldi	r23, 0x00	; 0
     8a0:	8a e2       	ldi	r24, 0x2A	; 42
     8a2:	91 e0       	ldi	r25, 0x01	; 1
     8a4:	0e 94 72 06 	call	0xce4	; 0xce4 <oled_center_print>
     8a8:	08 95       	ret

000008aa <f_high_score>:
}

void f_high_score(){
	oled_reset();
     8aa:	0e 94 b3 05 	call	0xb66	; 0xb66 <oled_reset>
	oled_center_print("High Score", 8);
     8ae:	68 e0       	ldi	r22, 0x08	; 8
     8b0:	70 e0       	ldi	r23, 0x00	; 0
     8b2:	84 e3       	ldi	r24, 0x34	; 52
     8b4:	91 e0       	ldi	r25, 0x01	; 1
     8b6:	0e 94 72 06 	call	0xce4	; 0xce4 <oled_center_print>
     8ba:	08 95       	ret

000008bc <Menu_new_submenu>:
	
	curr_menu = main_menu;
	
}

menu_item* Menu_new_submenu(menu_item* self, char* name, void (*function)(char*)){
     8bc:	cf 92       	push	r12
     8be:	df 92       	push	r13
     8c0:	ef 92       	push	r14
     8c2:	ff 92       	push	r15
     8c4:	0f 93       	push	r16
     8c6:	1f 93       	push	r17
     8c8:	cf 93       	push	r28
     8ca:	df 93       	push	r29
     8cc:	8c 01       	movw	r16, r24
     8ce:	7b 01       	movw	r14, r22
     8d0:	6a 01       	movw	r12, r20
	menu_item* new_submenu = malloc(sizeof(menu_item));
     8d2:	8c e0       	ldi	r24, 0x0C	; 12
     8d4:	90 e0       	ldi	r25, 0x00	; 0
     8d6:	0e 94 e3 07 	call	0xfc6	; 0xfc6 <malloc>
     8da:	ec 01       	movw	r28, r24
	
	new_submenu->parent=self;
     8dc:	19 83       	std	Y+1, r17	; 0x01
     8de:	08 83       	st	Y, r16
	new_submenu->children=NULL;
     8e0:	1d 82       	std	Y+5, r1	; 0x05
     8e2:	1c 82       	std	Y+4, r1	; 0x04
	new_submenu->numOfChildren=0;
     8e4:	1f 82       	std	Y+7, r1	; 0x07
     8e6:	1e 82       	std	Y+6, r1	; 0x06
	new_submenu->name=name;
     8e8:	f9 86       	std	Y+9, r15	; 0x09
     8ea:	e8 86       	std	Y+8, r14	; 0x08
	new_submenu->nameArrow=oled_arrow(name);
     8ec:	c7 01       	movw	r24, r14
     8ee:	0e 94 95 06 	call	0xd2a	; 0xd2a <oled_arrow>
     8f2:	9b 87       	std	Y+11, r25	; 0x0b
     8f4:	8a 87       	std	Y+10, r24	; 0x0a
	new_submenu->function = function;
     8f6:	db 82       	std	Y+3, r13	; 0x03
     8f8:	ca 82       	std	Y+2, r12	; 0x02
		
	self->children=realloc(self->children, (self->numOfChildren+1)*sizeof(menu_item*));
     8fa:	f8 01       	movw	r30, r16
     8fc:	66 81       	ldd	r22, Z+6	; 0x06
     8fe:	77 81       	ldd	r23, Z+7	; 0x07
     900:	6f 5f       	subi	r22, 0xFF	; 255
     902:	7f 4f       	sbci	r23, 0xFF	; 255
     904:	66 0f       	add	r22, r22
     906:	77 1f       	adc	r23, r23
     908:	84 81       	ldd	r24, Z+4	; 0x04
     90a:	95 81       	ldd	r25, Z+5	; 0x05
     90c:	0e 94 04 09 	call	0x1208	; 0x1208 <realloc>
     910:	f8 01       	movw	r30, r16
     912:	95 83       	std	Z+5, r25	; 0x05
     914:	84 83       	std	Z+4, r24	; 0x04
	self->children[self->numOfChildren]=new_submenu;
     916:	26 81       	ldd	r18, Z+6	; 0x06
     918:	37 81       	ldd	r19, Z+7	; 0x07
     91a:	a9 01       	movw	r20, r18
     91c:	44 0f       	add	r20, r20
     91e:	55 1f       	adc	r21, r21
     920:	fc 01       	movw	r30, r24
     922:	e4 0f       	add	r30, r20
     924:	f5 1f       	adc	r31, r21
     926:	d1 83       	std	Z+1, r29	; 0x01
     928:	c0 83       	st	Z, r28
	
	self->numOfChildren++;
     92a:	2f 5f       	subi	r18, 0xFF	; 255
     92c:	3f 4f       	sbci	r19, 0xFF	; 255
     92e:	f8 01       	movw	r30, r16
     930:	37 83       	std	Z+7, r19	; 0x07
     932:	26 83       	std	Z+6, r18	; 0x06
	
	return new_submenu;
}
     934:	ce 01       	movw	r24, r28
     936:	df 91       	pop	r29
     938:	cf 91       	pop	r28
     93a:	1f 91       	pop	r17
     93c:	0f 91       	pop	r16
     93e:	ff 90       	pop	r15
     940:	ef 90       	pop	r14
     942:	df 90       	pop	r13
     944:	cf 90       	pop	r12
     946:	08 95       	ret

00000948 <menu_init>:
	struct menu_item* children[8];
	int numOfChildren=0;
	char name[];
} menu_item;
*/
void menu_init(){
     948:	ff 92       	push	r15
     94a:	0f 93       	push	r16
     94c:	1f 93       	push	r17
     94e:	cf 93       	push	r28
     950:	df 93       	push	r29
	
	menu_item* main_menu = malloc(sizeof(menu_item));
     952:	8c e0       	ldi	r24, 0x0C	; 12
     954:	90 e0       	ldi	r25, 0x00	; 0
     956:	0e 94 e3 07 	call	0xfc6	; 0xfc6 <malloc>
     95a:	8c 01       	movw	r16, r24
	
	main_menu->name = "Main Menu";
     95c:	8f e3       	ldi	r24, 0x3F	; 63
     95e:	91 e0       	ldi	r25, 0x01	; 1
     960:	d8 01       	movw	r26, r16
     962:	19 96       	adiw	r26, 0x09	; 9
     964:	9c 93       	st	X, r25
     966:	8e 93       	st	-X, r24
     968:	18 97       	sbiw	r26, 0x08	; 8
	main_menu->nameArrow= NULL;
     96a:	1b 96       	adiw	r26, 0x0b	; 11
     96c:	1c 92       	st	X, r1
     96e:	1e 92       	st	-X, r1
     970:	1a 97       	sbiw	r26, 0x0a	; 10
	main_menu->numOfChildren = 0;
     972:	17 96       	adiw	r26, 0x07	; 7
     974:	1c 92       	st	X, r1
     976:	1e 92       	st	-X, r1
     978:	16 97       	sbiw	r26, 0x06	; 6
	main_menu->parent = NULL;
     97a:	11 96       	adiw	r26, 0x01	; 1
     97c:	1c 92       	st	X, r1
     97e:	1e 92       	st	-X, r1
	main_menu->function = NULL;
     980:	13 96       	adiw	r26, 0x03	; 3
     982:	1c 92       	st	X, r1
     984:	1e 92       	st	-X, r1
     986:	12 97       	sbiw	r26, 0x02	; 2
	Menu_new_submenu(main_menu, "HIGH SCORE", ">HIGH SCORE<", &f_high_score);
	Menu_new_submenu(main_menu, "CALIBRATE", ">CALIBRATE<", &f_calibrate);
	Menu_new_submenu(main_menu, "DIFFICULTY", ">DIFFICULTY<", &f_difficulty);
	Menu_new_submenu(main_menu, "DEBUGGING", ">DEBUGGING<", &f_debugging); */
	
	Menu_new_submenu(main_menu, "NEW GAME", &f_newgame);
     988:	41 e3       	ldi	r20, 0x31	; 49
     98a:	54 e0       	ldi	r21, 0x04	; 4
     98c:	69 e4       	ldi	r22, 0x49	; 73
     98e:	71 e0       	ldi	r23, 0x01	; 1
     990:	c8 01       	movw	r24, r16
     992:	0e 94 5e 04 	call	0x8bc	; 0x8bc <Menu_new_submenu>
	Menu_new_submenu(main_menu, "HIGH SCORE", &f_high_score);
     996:	45 e5       	ldi	r20, 0x55	; 85
     998:	54 e0       	ldi	r21, 0x04	; 4
     99a:	62 e5       	ldi	r22, 0x52	; 82
     99c:	71 e0       	ldi	r23, 0x01	; 1
     99e:	c8 01       	movw	r24, r16
     9a0:	0e 94 5e 04 	call	0x8bc	; 0x8bc <Menu_new_submenu>
	Menu_new_submenu(main_menu, "CALIBRATE", &f_calibrate);
     9a4:	4c e4       	ldi	r20, 0x4C	; 76
     9a6:	54 e0       	ldi	r21, 0x04	; 4
     9a8:	6d e5       	ldi	r22, 0x5D	; 93
     9aa:	71 e0       	ldi	r23, 0x01	; 1
     9ac:	c8 01       	movw	r24, r16
     9ae:	0e 94 5e 04 	call	0x8bc	; 0x8bc <Menu_new_submenu>
	Menu_new_submenu(main_menu, "DIFFICULTY", &f_difficulty);
     9b2:	43 e4       	ldi	r20, 0x43	; 67
     9b4:	54 e0       	ldi	r21, 0x04	; 4
     9b6:	67 e6       	ldi	r22, 0x67	; 103
     9b8:	71 e0       	ldi	r23, 0x01	; 1
     9ba:	c8 01       	movw	r24, r16
     9bc:	0e 94 5e 04 	call	0x8bc	; 0x8bc <Menu_new_submenu>
	Menu_new_submenu(main_menu, "DEBUGGING", &f_debugging);
     9c0:	4a e3       	ldi	r20, 0x3A	; 58
     9c2:	54 e0       	ldi	r21, 0x04	; 4
     9c4:	62 e7       	ldi	r22, 0x72	; 114
     9c6:	71 e0       	ldi	r23, 0x01	; 1
     9c8:	c8 01       	movw	r24, r16
     9ca:	0e 94 5e 04 	call	0x8bc	; 0x8bc <Menu_new_submenu>
	
	oled_center_print("PINGPONG",8);
     9ce:	68 e0       	ldi	r22, 0x08	; 8
     9d0:	70 e0       	ldi	r23, 0x00	; 0
     9d2:	8c e7       	ldi	r24, 0x7C	; 124
     9d4:	91 e0       	ldi	r25, 0x01	; 1
     9d6:	0e 94 72 06 	call	0xce4	; 0xce4 <oled_center_print>
	for (int i=0; i < (main_menu->numOfChildren); i++){
     9da:	f8 01       	movw	r30, r16
     9dc:	86 81       	ldd	r24, Z+6	; 0x06
     9de:	97 81       	ldd	r25, Z+7	; 0x07
     9e0:	18 16       	cp	r1, r24
     9e2:	19 06       	cpc	r1, r25
     9e4:	2c f5       	brge	.+74     	; 0xa30 <menu_init+0xe8>
     9e6:	68 94       	set
     9e8:	ff 24       	eor	r15, r15
     9ea:	f1 f8       	bld	r15, 1
     9ec:	c0 e0       	ldi	r28, 0x00	; 0
     9ee:	d0 e0       	ldi	r29, 0x00	; 0
		oled_goto_page(header_pages+i);
     9f0:	8f 2d       	mov	r24, r15
     9f2:	0e 94 41 05 	call	0xa82	; 0xa82 <oled_goto_page>
		oled_center_print(main_menu->children[i]->name, fontsize);
     9f6:	60 91 0a 01 	lds	r22, 0x010A	; 0x80010a <fontsize>
     9fa:	70 91 0b 01 	lds	r23, 0x010B	; 0x80010b <fontsize+0x1>
     9fe:	ce 01       	movw	r24, r28
     a00:	88 0f       	add	r24, r24
     a02:	99 1f       	adc	r25, r25
     a04:	d8 01       	movw	r26, r16
     a06:	14 96       	adiw	r26, 0x04	; 4
     a08:	ed 91       	ld	r30, X+
     a0a:	fc 91       	ld	r31, X
     a0c:	15 97       	sbiw	r26, 0x05	; 5
     a0e:	e8 0f       	add	r30, r24
     a10:	f9 1f       	adc	r31, r25
     a12:	01 90       	ld	r0, Z+
     a14:	f0 81       	ld	r31, Z
     a16:	e0 2d       	mov	r30, r0
     a18:	80 85       	ldd	r24, Z+8	; 0x08
     a1a:	91 85       	ldd	r25, Z+9	; 0x09
     a1c:	0e 94 72 06 	call	0xce4	; 0xce4 <oled_center_print>
	Menu_new_submenu(main_menu, "CALIBRATE", &f_calibrate);
	Menu_new_submenu(main_menu, "DIFFICULTY", &f_difficulty);
	Menu_new_submenu(main_menu, "DEBUGGING", &f_debugging);
	
	oled_center_print("PINGPONG",8);
	for (int i=0; i < (main_menu->numOfChildren); i++){
     a20:	21 96       	adiw	r28, 0x01	; 1
     a22:	f3 94       	inc	r15
     a24:	f8 01       	movw	r30, r16
     a26:	86 81       	ldd	r24, Z+6	; 0x06
     a28:	97 81       	ldd	r25, Z+7	; 0x07
     a2a:	c8 17       	cp	r28, r24
     a2c:	d9 07       	cpc	r29, r25
     a2e:	04 f3       	brlt	.-64     	; 0x9f0 <menu_init+0xa8>
		oled_goto_page(header_pages+i);
		oled_center_print(main_menu->children[i]->name, fontsize);
	}
	oled_goto_page(header_pages);
     a30:	82 e0       	ldi	r24, 0x02	; 2
     a32:	0e 94 41 05 	call	0xa82	; 0xa82 <oled_goto_page>
	oled_center_print(main_menu->children[0]->nameArrow,fontsize);
     a36:	60 91 0a 01 	lds	r22, 0x010A	; 0x80010a <fontsize>
     a3a:	70 91 0b 01 	lds	r23, 0x010B	; 0x80010b <fontsize+0x1>
     a3e:	d8 01       	movw	r26, r16
     a40:	14 96       	adiw	r26, 0x04	; 4
     a42:	ed 91       	ld	r30, X+
     a44:	fc 91       	ld	r31, X
     a46:	15 97       	sbiw	r26, 0x05	; 5
     a48:	01 90       	ld	r0, Z+
     a4a:	f0 81       	ld	r31, Z
     a4c:	e0 2d       	mov	r30, r0
     a4e:	82 85       	ldd	r24, Z+10	; 0x0a
     a50:	93 85       	ldd	r25, Z+11	; 0x0b
     a52:	0e 94 72 06 	call	0xce4	; 0xce4 <oled_center_print>
	
	curr_menu = main_menu;
     a56:	10 93 b3 01 	sts	0x01B3, r17	; 0x8001b3 <__data_end+0x1>
     a5a:	00 93 b2 01 	sts	0x01B2, r16	; 0x8001b2 <__data_end>
	
}
     a5e:	df 91       	pop	r29
     a60:	cf 91       	pop	r28
     a62:	1f 91       	pop	r17
     a64:	0f 91       	pop	r16
     a66:	ff 90       	pop	r15
     a68:	08 95       	ret

00000a6a <oled_mode>:
	}
	oled_goto_pos(4,0);
	for (int j=0; j<1024; j++){
		ext_oled_data[j] = 0xff;
	}
	oled_mode(PAGE_MODE);
     a6a:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
     a6e:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
     a72:	90 e2       	ldi	r25, 0x20	; 32
     a74:	90 83       	st	Z, r25
     a76:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
     a7a:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
     a7e:	80 83       	st	Z, r24
     a80:	08 95       	ret

00000a82 <oled_goto_page>:
     a82:	88 30       	cpi	r24, 0x08	; 8
     a84:	48 f0       	brcs	.+18     	; 0xa98 <oled_goto_page+0x16>
     a86:	85 e8       	ldi	r24, 0x85	; 133
     a88:	91 e0       	ldi	r25, 0x01	; 1
     a8a:	9f 93       	push	r25
     a8c:	8f 93       	push	r24
     a8e:	0e 94 29 0a 	call	0x1452	; 0x1452 <printf>
     a92:	0f 90       	pop	r0
     a94:	0f 90       	pop	r0
     a96:	08 95       	ret
     a98:	90 eb       	ldi	r25, 0xB0	; 176
     a9a:	98 0f       	add	r25, r24
     a9c:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
     aa0:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
     aa4:	90 83       	st	Z, r25
     aa6:	90 e0       	ldi	r25, 0x00	; 0
     aa8:	90 93 b7 01 	sts	0x01B7, r25	; 0x8001b7 <oled_position+0x1>
     aac:	80 93 b6 01 	sts	0x01B6, r24	; 0x8001b6 <oled_position>
     ab0:	08 95       	ret

00000ab2 <oled_goto_col>:
     ab2:	88 23       	and	r24, r24
     ab4:	4c f4       	brge	.+18     	; 0xac8 <oled_goto_col+0x16>
     ab6:	85 e8       	ldi	r24, 0x85	; 133
     ab8:	91 e0       	ldi	r25, 0x01	; 1
     aba:	9f 93       	push	r25
     abc:	8f 93       	push	r24
     abe:	0e 94 29 0a 	call	0x1452	; 0x1452 <printf>
     ac2:	0f 90       	pop	r0
     ac4:	0f 90       	pop	r0
     ac6:	08 95       	ret
     ac8:	28 2f       	mov	r18, r24
     aca:	2f 70       	andi	r18, 0x0F	; 15
     acc:	98 2f       	mov	r25, r24
     ace:	92 95       	swap	r25
     ad0:	9f 70       	andi	r25, 0x0F	; 15
     ad2:	90 5f       	subi	r25, 0xF0	; 240
     ad4:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
     ad8:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
     adc:	90 83       	st	Z, r25
     ade:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
     ae2:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
     ae6:	20 83       	st	Z, r18
     ae8:	90 e0       	ldi	r25, 0x00	; 0
     aea:	90 93 b9 01 	sts	0x01B9, r25	; 0x8001b9 <oled_position+0x3>
     aee:	80 93 b8 01 	sts	0x01B8, r24	; 0x8001b8 <oled_position+0x2>
     af2:	08 95       	ret

00000af4 <oled_goto_pos>:
     af4:	cf 93       	push	r28
     af6:	c6 2f       	mov	r28, r22
     af8:	0e 94 41 05 	call	0xa82	; 0xa82 <oled_goto_page>
     afc:	8c 2f       	mov	r24, r28
     afe:	0e 94 59 05 	call	0xab2	; 0xab2 <oled_goto_col>
     b02:	cf 91       	pop	r28
     b04:	08 95       	ret

00000b06 <oled_home>:
     b06:	60 e0       	ldi	r22, 0x00	; 0
     b08:	80 e0       	ldi	r24, 0x00	; 0
     b0a:	0e 94 7a 05 	call	0xaf4	; 0xaf4 <oled_goto_pos>
     b0e:	08 95       	ret

00000b10 <oled_clear_screen>:
     b10:	60 e0       	ldi	r22, 0x00	; 0
     b12:	80 e0       	ldi	r24, 0x00	; 0
     b14:	0e 94 7a 05 	call	0xaf4	; 0xaf4 <oled_goto_pos>
     b18:	80 e0       	ldi	r24, 0x00	; 0
     b1a:	0e 94 35 05 	call	0xa6a	; 0xa6a <oled_mode>
     b1e:	80 e0       	ldi	r24, 0x00	; 0
     b20:	90 e0       	ldi	r25, 0x00	; 0
     b22:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <ext_oled_data>
     b26:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <ext_oled_data+0x1>
     b2a:	e8 0f       	add	r30, r24
     b2c:	f9 1f       	adc	r31, r25
     b2e:	10 82       	st	Z, r1
     b30:	01 96       	adiw	r24, 0x01	; 1
     b32:	81 15       	cp	r24, r1
     b34:	24 e0       	ldi	r18, 0x04	; 4
     b36:	92 07       	cpc	r25, r18
     b38:	a1 f7       	brne	.-24     	; 0xb22 <oled_clear_screen+0x12>
     b3a:	60 e0       	ldi	r22, 0x00	; 0
     b3c:	84 e0       	ldi	r24, 0x04	; 4
     b3e:	0e 94 7a 05 	call	0xaf4	; 0xaf4 <oled_goto_pos>
     b42:	80 e0       	ldi	r24, 0x00	; 0
     b44:	90 e0       	ldi	r25, 0x00	; 0
     b46:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <ext_oled_data>
     b4a:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <ext_oled_data+0x1>
     b4e:	e8 0f       	add	r30, r24
     b50:	f9 1f       	adc	r31, r25
     b52:	10 82       	st	Z, r1
     b54:	01 96       	adiw	r24, 0x01	; 1
     b56:	81 15       	cp	r24, r1
     b58:	24 e0       	ldi	r18, 0x04	; 4
     b5a:	92 07       	cpc	r25, r18
     b5c:	a1 f7       	brne	.-24     	; 0xb46 <oled_clear_screen+0x36>
     b5e:	82 e0       	ldi	r24, 0x02	; 2
     b60:	0e 94 35 05 	call	0xa6a	; 0xa6a <oled_mode>
     b64:	08 95       	ret

00000b66 <oled_reset>:
     b66:	0e 94 83 05 	call	0xb06	; 0xb06 <oled_home>
     b6a:	0e 94 88 05 	call	0xb10	; 0xb10 <oled_clear_screen>
     b6e:	82 e0       	ldi	r24, 0x02	; 2
     b70:	0e 94 35 05 	call	0xa6a	; 0xa6a <oled_mode>
     b74:	08 95       	ret

00000b76 <oled_write_char>:
}


void oled_write_char(char c, int fs){
	c=c-32;
     b76:	80 52       	subi	r24, 0x20	; 32
	
	switch(fs){
     b78:	66 30       	cpi	r22, 0x06	; 6
     b7a:	71 05       	cpc	r23, r1
     b7c:	09 f4       	brne	.+2      	; 0xb80 <oled_write_char+0xa>
     b7e:	3b c0       	rjmp	.+118    	; 0xbf6 <oled_write_char+0x80>
     b80:	68 30       	cpi	r22, 0x08	; 8
     b82:	71 05       	cpc	r23, r1
     b84:	29 f0       	breq	.+10     	; 0xb90 <oled_write_char+0x1a>
     b86:	64 30       	cpi	r22, 0x04	; 4
     b88:	71 05       	cpc	r23, r1
     b8a:	09 f0       	breq	.+2      	; 0xb8e <oled_write_char+0x18>
     b8c:	80 c0       	rjmp	.+256    	; 0xc8e <oled_write_char+0x118>
     b8e:	5b c0       	rjmp	.+182    	; 0xc46 <oled_write_char+0xd0>
		case 8 :
			for(int i=0; i<fontsize;i++){
     b90:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <fontsize>
     b94:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <fontsize+0x1>
     b98:	12 16       	cp	r1, r18
     b9a:	13 06       	cpc	r1, r19
     b9c:	0c f0       	brlt	.+2      	; 0xba0 <oled_write_char+0x2a>
     b9e:	77 c0       	rjmp	.+238    	; 0xc8e <oled_write_char+0x118>
     ba0:	90 e0       	ldi	r25, 0x00	; 0
     ba2:	88 0f       	add	r24, r24
     ba4:	99 1f       	adc	r25, r25
     ba6:	88 0f       	add	r24, r24
     ba8:	99 1f       	adc	r25, r25
     baa:	88 0f       	add	r24, r24
     bac:	99 1f       	adc	r25, r25
     bae:	20 e0       	ldi	r18, 0x00	; 0
     bb0:	30 e0       	ldi	r19, 0x00	; 0
				oled_wrd(pgm_read_word(&font8[c][i]));
				oled_position.coloumn++;
     bb2:	a6 eb       	ldi	r26, 0xB6	; 182
     bb4:	b1 e0       	ldi	r27, 0x01	; 1
	c=c-32;
	
	switch(fs){
		case 8 :
			for(int i=0; i<fontsize;i++){
				oled_wrd(pgm_read_word(&font8[c][i]));
     bb6:	f9 01       	movw	r30, r18
     bb8:	e8 0f       	add	r30, r24
     bba:	f9 1f       	adc	r31, r25
     bbc:	ea 5d       	subi	r30, 0xDA	; 218
     bbe:	fb 4f       	sbci	r31, 0xFB	; 251
     bc0:	45 91       	lpm	r20, Z+
     bc2:	54 91       	lpm	r21, Z
void oled_wrc(uint8_t data){
	ext_oled_command[0] = data;
}
//oled write data
void oled_wrd(uint8_t data){
	ext_oled_data[0] = data;
     bc4:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <ext_oled_data>
     bc8:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <ext_oled_data+0x1>
     bcc:	40 83       	st	Z, r20
	
	switch(fs){
		case 8 :
			for(int i=0; i<fontsize;i++){
				oled_wrd(pgm_read_word(&font8[c][i]));
				oled_position.coloumn++;
     bce:	12 96       	adiw	r26, 0x02	; 2
     bd0:	4d 91       	ld	r20, X+
     bd2:	5c 91       	ld	r21, X
     bd4:	13 97       	sbiw	r26, 0x03	; 3
     bd6:	4f 5f       	subi	r20, 0xFF	; 255
     bd8:	5f 4f       	sbci	r21, 0xFF	; 255
     bda:	13 96       	adiw	r26, 0x03	; 3
     bdc:	5c 93       	st	X, r21
     bde:	4e 93       	st	-X, r20
     be0:	12 97       	sbiw	r26, 0x02	; 2
void oled_write_char(char c, int fs){
	c=c-32;
	
	switch(fs){
		case 8 :
			for(int i=0; i<fontsize;i++){
     be2:	2f 5f       	subi	r18, 0xFF	; 255
     be4:	3f 4f       	sbci	r19, 0xFF	; 255
     be6:	40 91 0a 01 	lds	r20, 0x010A	; 0x80010a <fontsize>
     bea:	50 91 0b 01 	lds	r21, 0x010B	; 0x80010b <fontsize+0x1>
     bee:	24 17       	cp	r18, r20
     bf0:	35 07       	cpc	r19, r21
     bf2:	0c f3       	brlt	.-62     	; 0xbb6 <oled_write_char+0x40>
     bf4:	08 95       	ret
     bf6:	90 e0       	ldi	r25, 0x00	; 0
     bf8:	9c 01       	movw	r18, r24
     bfa:	22 0f       	add	r18, r18
     bfc:	33 1f       	adc	r19, r19
     bfe:	82 0f       	add	r24, r18
     c00:	93 1f       	adc	r25, r19
     c02:	88 0f       	add	r24, r24
     c04:	99 1f       	adc	r25, r25


void oled_write_char(char c, int fs){
	c=c-32;
	
	switch(fs){
     c06:	20 e0       	ldi	r18, 0x00	; 0
     c08:	30 e0       	ldi	r19, 0x00	; 0
			}
			break;
		case 6 :
			for(int i=0; i<6;i++){
				oled_wrd(pgm_read_word(&font6[c][i]));
				oled_position.coloumn++;
     c0a:	a6 eb       	ldi	r26, 0xB6	; 182
     c0c:	b1 e0       	ldi	r27, 0x01	; 1
				oled_position.coloumn++;
			}
			break;
		case 6 :
			for(int i=0; i<6;i++){
				oled_wrd(pgm_read_word(&font6[c][i]));
     c0e:	f9 01       	movw	r30, r18
     c10:	e8 0f       	add	r30, r24
     c12:	f9 1f       	adc	r31, r25
     c14:	e4 51       	subi	r30, 0x14	; 20
     c16:	fe 4f       	sbci	r31, 0xFE	; 254
     c18:	45 91       	lpm	r20, Z+
     c1a:	54 91       	lpm	r21, Z
void oled_wrc(uint8_t data){
	ext_oled_command[0] = data;
}
//oled write data
void oled_wrd(uint8_t data){
	ext_oled_data[0] = data;
     c1c:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <ext_oled_data>
     c20:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <ext_oled_data+0x1>
     c24:	40 83       	st	Z, r20
			}
			break;
		case 6 :
			for(int i=0; i<6;i++){
				oled_wrd(pgm_read_word(&font6[c][i]));
				oled_position.coloumn++;
     c26:	12 96       	adiw	r26, 0x02	; 2
     c28:	4d 91       	ld	r20, X+
     c2a:	5c 91       	ld	r21, X
     c2c:	13 97       	sbiw	r26, 0x03	; 3
     c2e:	4f 5f       	subi	r20, 0xFF	; 255
     c30:	5f 4f       	sbci	r21, 0xFF	; 255
     c32:	13 96       	adiw	r26, 0x03	; 3
     c34:	5c 93       	st	X, r21
     c36:	4e 93       	st	-X, r20
     c38:	12 97       	sbiw	r26, 0x02	; 2
				oled_wrd(pgm_read_word(&font8[c][i]));
				oled_position.coloumn++;
			}
			break;
		case 6 :
			for(int i=0; i<6;i++){
     c3a:	2f 5f       	subi	r18, 0xFF	; 255
     c3c:	3f 4f       	sbci	r19, 0xFF	; 255
     c3e:	26 30       	cpi	r18, 0x06	; 6
     c40:	31 05       	cpc	r19, r1
     c42:	29 f7       	brne	.-54     	; 0xc0e <oled_write_char+0x98>
     c44:	08 95       	ret
     c46:	90 e0       	ldi	r25, 0x00	; 0
     c48:	88 0f       	add	r24, r24
     c4a:	99 1f       	adc	r25, r25
     c4c:	88 0f       	add	r24, r24
     c4e:	99 1f       	adc	r25, r25


void oled_write_char(char c, int fs){
	c=c-32;
	
	switch(fs){
     c50:	20 e0       	ldi	r18, 0x00	; 0
     c52:	30 e0       	ldi	r19, 0x00	; 0
			}
			break;
		case 4 :
			for(int i=0; i<4;i++){
				oled_wrd(pgm_read_word(&font4[c][i]));
				oled_position.coloumn++;
     c54:	a6 eb       	ldi	r26, 0xB6	; 182
     c56:	b1 e0       	ldi	r27, 0x01	; 1
				oled_position.coloumn++;
			}
			break;
		case 4 :
			for(int i=0; i<4;i++){
				oled_wrd(pgm_read_word(&font4[c][i]));
     c58:	f9 01       	movw	r30, r18
     c5a:	e8 0f       	add	r30, r24
     c5c:	f9 1f       	adc	r31, r25
     c5e:	e0 59       	subi	r30, 0x90	; 144
     c60:	ff 4f       	sbci	r31, 0xFF	; 255
     c62:	45 91       	lpm	r20, Z+
     c64:	54 91       	lpm	r21, Z
void oled_wrc(uint8_t data){
	ext_oled_command[0] = data;
}
//oled write data
void oled_wrd(uint8_t data){
	ext_oled_data[0] = data;
     c66:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <ext_oled_data>
     c6a:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <ext_oled_data+0x1>
     c6e:	40 83       	st	Z, r20
			}
			break;
		case 4 :
			for(int i=0; i<4;i++){
				oled_wrd(pgm_read_word(&font4[c][i]));
				oled_position.coloumn++;
     c70:	12 96       	adiw	r26, 0x02	; 2
     c72:	4d 91       	ld	r20, X+
     c74:	5c 91       	ld	r21, X
     c76:	13 97       	sbiw	r26, 0x03	; 3
     c78:	4f 5f       	subi	r20, 0xFF	; 255
     c7a:	5f 4f       	sbci	r21, 0xFF	; 255
     c7c:	13 96       	adiw	r26, 0x03	; 3
     c7e:	5c 93       	st	X, r21
     c80:	4e 93       	st	-X, r20
     c82:	12 97       	sbiw	r26, 0x02	; 2
				oled_wrd(pgm_read_word(&font6[c][i]));
				oled_position.coloumn++;
			}
			break;
		case 4 :
			for(int i=0; i<4;i++){
     c84:	2f 5f       	subi	r18, 0xFF	; 255
     c86:	3f 4f       	sbci	r19, 0xFF	; 255
     c88:	24 30       	cpi	r18, 0x04	; 4
     c8a:	31 05       	cpc	r19, r1
     c8c:	29 f7       	brne	.-54     	; 0xc58 <oled_write_char+0xe2>
     c8e:	08 95       	ret

00000c90 <oled_print>:
	
}



void oled_print(char* word, int fs){
     c90:	cf 92       	push	r12
     c92:	df 92       	push	r13
     c94:	ef 92       	push	r14
     c96:	ff 92       	push	r15
     c98:	0f 93       	push	r16
     c9a:	1f 93       	push	r17
     c9c:	cf 93       	push	r28
     c9e:	df 93       	push	r29
     ca0:	ec 01       	movw	r28, r24
     ca2:	7b 01       	movw	r14, r22
     ca4:	8c 01       	movw	r16, r24
	for( int i = 0; i < strlen(word); i++){
     ca6:	c1 2c       	mov	r12, r1
     ca8:	d1 2c       	mov	r13, r1
     caa:	09 c0       	rjmp	.+18     	; 0xcbe <oled_print+0x2e>
		oled_write_char(word[i], fs);
     cac:	b7 01       	movw	r22, r14
     cae:	f8 01       	movw	r30, r16
     cb0:	81 91       	ld	r24, Z+
     cb2:	8f 01       	movw	r16, r30
     cb4:	0e 94 bb 05 	call	0xb76	; 0xb76 <oled_write_char>
}



void oled_print(char* word, int fs){
	for( int i = 0; i < strlen(word); i++){
     cb8:	ff ef       	ldi	r31, 0xFF	; 255
     cba:	cf 1a       	sub	r12, r31
     cbc:	df 0a       	sbc	r13, r31
     cbe:	fe 01       	movw	r30, r28
     cc0:	01 90       	ld	r0, Z+
     cc2:	00 20       	and	r0, r0
     cc4:	e9 f7       	brne	.-6      	; 0xcc0 <oled_print+0x30>
     cc6:	31 97       	sbiw	r30, 0x01	; 1
     cc8:	ec 1b       	sub	r30, r28
     cca:	fd 0b       	sbc	r31, r29
     ccc:	ce 16       	cp	r12, r30
     cce:	df 06       	cpc	r13, r31
     cd0:	68 f3       	brcs	.-38     	; 0xcac <oled_print+0x1c>
		oled_write_char(word[i], fs);
	}
}
     cd2:	df 91       	pop	r29
     cd4:	cf 91       	pop	r28
     cd6:	1f 91       	pop	r17
     cd8:	0f 91       	pop	r16
     cda:	ff 90       	pop	r15
     cdc:	ef 90       	pop	r14
     cde:	df 90       	pop	r13
     ce0:	cf 90       	pop	r12
     ce2:	08 95       	ret

00000ce4 <oled_center_print>:

void oled_center_print(char* word, int fs){
     ce4:	0f 93       	push	r16
     ce6:	1f 93       	push	r17
     ce8:	cf 93       	push	r28
     cea:	df 93       	push	r29
     cec:	ec 01       	movw	r28, r24
     cee:	8b 01       	movw	r16, r22
	oled_goto_col(63-(strlen(word)*fs/2));
     cf0:	fc 01       	movw	r30, r24
     cf2:	01 90       	ld	r0, Z+
     cf4:	00 20       	and	r0, r0
     cf6:	e9 f7       	brne	.-6      	; 0xcf2 <oled_center_print+0xe>
     cf8:	31 97       	sbiw	r30, 0x01	; 1
     cfa:	e8 1b       	sub	r30, r24
     cfc:	f9 0b       	sbc	r31, r25
     cfe:	6e 9f       	mul	r22, r30
     d00:	90 01       	movw	r18, r0
     d02:	6f 9f       	mul	r22, r31
     d04:	30 0d       	add	r19, r0
     d06:	7e 9f       	mul	r23, r30
     d08:	30 0d       	add	r19, r0
     d0a:	11 24       	eor	r1, r1
     d0c:	36 95       	lsr	r19
     d0e:	27 95       	ror	r18
     d10:	8f e3       	ldi	r24, 0x3F	; 63
     d12:	82 1b       	sub	r24, r18
     d14:	0e 94 59 05 	call	0xab2	; 0xab2 <oled_goto_col>
	oled_print(word, fs);
     d18:	b8 01       	movw	r22, r16
     d1a:	ce 01       	movw	r24, r28
     d1c:	0e 94 48 06 	call	0xc90	; 0xc90 <oled_print>
}
     d20:	df 91       	pop	r29
     d22:	cf 91       	pop	r28
     d24:	1f 91       	pop	r17
     d26:	0f 91       	pop	r16
     d28:	08 95       	ret

00000d2a <oled_arrow>:

char* oled_arrow(char* name){
     d2a:	0f 93       	push	r16
     d2c:	1f 93       	push	r17
     d2e:	cf 93       	push	r28
     d30:	df 93       	push	r29
     d32:	8c 01       	movw	r16, r24
	char* str = malloc(sizeof(char)*20);
     d34:	84 e1       	ldi	r24, 0x14	; 20
     d36:	90 e0       	ldi	r25, 0x00	; 0
     d38:	0e 94 e3 07 	call	0xfc6	; 0xfc6 <malloc>
     d3c:	ec 01       	movw	r28, r24
	strcpy(str,">");
     d3e:	8e e3       	ldi	r24, 0x3E	; 62
     d40:	90 e0       	ldi	r25, 0x00	; 0
     d42:	99 83       	std	Y+1, r25	; 0x01
     d44:	88 83       	st	Y, r24
	strcat(str,name);
     d46:	b8 01       	movw	r22, r16
     d48:	ce 01       	movw	r24, r28
     d4a:	0e 94 d3 09 	call	0x13a6	; 0x13a6 <strcat>
	strcat(str,"<");
     d4e:	fe 01       	movw	r30, r28
     d50:	01 90       	ld	r0, Z+
     d52:	00 20       	and	r0, r0
     d54:	e9 f7       	brne	.-6      	; 0xd50 <oled_arrow+0x26>
     d56:	31 97       	sbiw	r30, 0x01	; 1
     d58:	8c e3       	ldi	r24, 0x3C	; 60
     d5a:	90 e0       	ldi	r25, 0x00	; 0
     d5c:	91 83       	std	Z+1, r25	; 0x01
     d5e:	80 83       	st	Z, r24
	return str;
}
     d60:	ce 01       	movw	r24, r28
     d62:	df 91       	pop	r29
     d64:	cf 91       	pop	r28
     d66:	1f 91       	pop	r17
     d68:	0f 91       	pop	r16
     d6a:	08 95       	ret

00000d6c <oled_init>:
int fontsize = 8;


//oled write command
void oled_wrc(uint8_t data){
	ext_oled_command[0] = data;
     d6c:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
     d70:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
     d74:	8e ea       	ldi	r24, 0xAE	; 174
     d76:	80 83       	st	Z, r24
     d78:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
     d7c:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
     d80:	81 ea       	ldi	r24, 0xA1	; 161
     d82:	80 83       	st	Z, r24
     d84:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
     d88:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
     d8c:	8a ed       	ldi	r24, 0xDA	; 218
     d8e:	80 83       	st	Z, r24
     d90:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
     d94:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
     d98:	82 e1       	ldi	r24, 0x12	; 18
     d9a:	80 83       	st	Z, r24
     d9c:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
     da0:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
     da4:	88 ec       	ldi	r24, 0xC8	; 200
     da6:	80 83       	st	Z, r24
     da8:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
     dac:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
     db0:	88 ea       	ldi	r24, 0xA8	; 168
     db2:	80 83       	st	Z, r24
     db4:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
     db8:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
     dbc:	8f e3       	ldi	r24, 0x3F	; 63
     dbe:	80 83       	st	Z, r24
     dc0:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
     dc4:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
     dc8:	85 ed       	ldi	r24, 0xD5	; 213
     dca:	80 83       	st	Z, r24
     dcc:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
     dd0:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
     dd4:	80 e8       	ldi	r24, 0x80	; 128
     dd6:	80 83       	st	Z, r24
     dd8:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
     ddc:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
     de0:	81 e8       	ldi	r24, 0x81	; 129
     de2:	80 83       	st	Z, r24
     de4:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
     de8:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
     dec:	80 e5       	ldi	r24, 0x50	; 80
     dee:	80 83       	st	Z, r24
     df0:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
     df4:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
     df8:	89 ed       	ldi	r24, 0xD9	; 217
     dfa:	80 83       	st	Z, r24
     dfc:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
     e00:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
     e04:	81 e2       	ldi	r24, 0x21	; 33
     e06:	80 83       	st	Z, r24
     e08:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
     e0c:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
     e10:	80 e2       	ldi	r24, 0x20	; 32
     e12:	80 83       	st	Z, r24
     e14:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
     e18:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
     e1c:	82 e0       	ldi	r24, 0x02	; 2
     e1e:	80 83       	st	Z, r24
     e20:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
     e24:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
     e28:	8b ed       	ldi	r24, 0xDB	; 219
     e2a:	80 83       	st	Z, r24
     e2c:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
     e30:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
     e34:	80 e3       	ldi	r24, 0x30	; 48
     e36:	80 83       	st	Z, r24
     e38:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
     e3c:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
     e40:	8d ea       	ldi	r24, 0xAD	; 173
     e42:	80 83       	st	Z, r24
     e44:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
     e48:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
     e4c:	10 82       	st	Z, r1
     e4e:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
     e52:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
     e56:	84 ea       	ldi	r24, 0xA4	; 164
     e58:	80 83       	st	Z, r24
     e5a:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
     e5e:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
     e62:	86 ea       	ldi	r24, 0xA6	; 166
     e64:	80 83       	st	Z, r24
     e66:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
     e6a:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
     e6e:	8f ea       	ldi	r24, 0xAF	; 175
     e70:	80 83       	st	Z, r24
	      oled_wrc(0xad);        //master configuration
	      oled_wrc(0x00);
	      oled_wrc(0xa4);        //out follows RAM content
	      oled_wrc(0xa6);        //set normal display
	      oled_wrc(0xaf);        // display on
		  oled_clear_screen();
     e72:	0e 94 88 05 	call	0xb10	; 0xb10 <oled_clear_screen>
		  oled_goto_pos(0,0);
     e76:	60 e0       	ldi	r22, 0x00	; 0
     e78:	80 e0       	ldi	r24, 0x00	; 0
     e7a:	0e 94 7a 05 	call	0xaf4	; 0xaf4 <oled_goto_pos>
     e7e:	08 95       	ret

00000e80 <spi_init>:
#include <stdint.h>


void spi_init(void){
	/* Set MOSI and SCK output, all others input */
	DDRB = (1<<DDB5)|(1<<DDB7)|(1<<DDB4);
     e80:	80 eb       	ldi	r24, 0xB0	; 176
     e82:	87 bb       	out	0x17, r24	; 23
	PORTB|=(1<<PB4);
     e84:	c4 9a       	sbi	0x18, 4	; 24
	/* Enable SPI, Master, set clock rate fck/16 */
	SPCR = (1<<SPE)|(1<<MSTR)|(1<<SPR0);
     e86:	81 e5       	ldi	r24, 0x51	; 81
     e88:	8d b9       	out	0x0d, r24	; 13
     e8a:	08 95       	ret

00000e8c <spi_send>:
}
void spi_send(char cData){
	/* Start transmission */
	SPDR = cData;
     e8c:	8f b9       	out	0x0f, r24	; 15
	/* Wait for transmission complete */
	while(!(SPSR & (1<<SPIF)));
     e8e:	77 9b       	sbis	0x0e, 7	; 14
     e90:	fe cf       	rjmp	.-4      	; 0xe8e <spi_send+0x2>
}
     e92:	08 95       	ret

00000e94 <spi_read>:

char spi_read(){
	spi_send(0x00);
     e94:	80 e0       	ldi	r24, 0x00	; 0
     e96:	0e 94 46 07 	call	0xe8c	; 0xe8c <spi_send>
	char a=SPDR;
     e9a:	8f b1       	in	r24, 0x0f	; 15
	return a;
     e9c:	08 95       	ret

00000e9e <USART_Init>:
     e9e:	90 bd       	out	0x20, r25	; 32
     ea0:	89 b9       	out	0x09, r24	; 9
     ea2:	88 e1       	ldi	r24, 0x18	; 24
     ea4:	8a b9       	out	0x0a, r24	; 10
     ea6:	8e e8       	ldi	r24, 0x8E	; 142
     ea8:	80 bd       	out	0x20, r24	; 32
     eaa:	60 e0       	ldi	r22, 0x00	; 0
     eac:	70 e0       	ldi	r23, 0x00	; 0
     eae:	80 e6       	ldi	r24, 0x60	; 96
     eb0:	97 e0       	ldi	r25, 0x07	; 7
     eb2:	0e 94 de 09 	call	0x13bc	; 0x13bc <fdevopen>
     eb6:	08 95       	ret

00000eb8 <USART_Transmit>:
     eb8:	5d 9b       	sbis	0x0b, 5	; 11
     eba:	fe cf       	rjmp	.-4      	; 0xeb8 <USART_Transmit>
     ebc:	8c b9       	out	0x0c, r24	; 12
     ebe:	08 95       	ret

00000ec0 <USART_PUTCHAR>:
     ec0:	0e 94 5c 07 	call	0xeb8	; 0xeb8 <USART_Transmit>
     ec4:	80 e0       	ldi	r24, 0x00	; 0
     ec6:	90 e0       	ldi	r25, 0x00	; 0
     ec8:	08 95       	ret

00000eca <xmem_init>:
#include <avr/io.h>
#include "DRIVER_XMEM.h"

//Init function
void xmem_init(void){
	MCUCR |= (1 << SRE); //enable XMEM
     eca:	85 b7       	in	r24, 0x35	; 53
     ecc:	80 68       	ori	r24, 0x80	; 128
     ece:	85 bf       	out	0x35, r24	; 53
	SFIOR |= (1 << XMM2); //Mask unused bits/pins, which is PC4-PC7
     ed0:	80 b7       	in	r24, 0x30	; 48
     ed2:	80 62       	ori	r24, 0x20	; 32
     ed4:	80 bf       	out	0x30, r24	; 48
     ed6:	08 95       	ret

00000ed8 <xmem_write>:
}
//Write function. //Somehow works badly when calling this function from main? Works perfectly by just copy-pasting code to main.
void xmem_write(uint8_t data, uint16_t addr){
	volatile char *ext_mem = (char *) 0x1000;
	ext_mem[addr] = data;
     ed8:	fb 01       	movw	r30, r22
     eda:	f0 5f       	subi	r31, 0xF0	; 240
     edc:	80 83       	st	Z, r24
     ede:	08 95       	ret

00000ee0 <xmem_read>:
}

//Read function
uint8_t xmem_read(uint16_t addr){
	volatile char *ext_mem = (char *) 0x1000;
	uint8_t ret_val = ext_mem[addr];
     ee0:	90 5f       	subi	r25, 0xF0	; 240
     ee2:	fc 01       	movw	r30, r24
     ee4:	80 81       	ld	r24, Z
	return ret_val;
}
     ee6:	08 95       	ret

00000ee8 <main>:

#define MYUBRR FOSC/16/BAUD-1 //UART Baud Rate Register

int main(void){
	
	USART_Init(MYUBRR);
     ee8:	8f e1       	ldi	r24, 0x1F	; 31
     eea:	90 e0       	ldi	r25, 0x00	; 0
     eec:	0e 94 4f 07 	call	0xe9e	; 0xe9e <USART_Init>
	xmem_init();
     ef0:	0e 94 65 07 	call	0xeca	; 0xeca <xmem_init>
	oled_init();
     ef4:	0e 94 b6 06 	call	0xd6c	; 0xd6c <oled_init>
	menu_init();
     ef8:	0e 94 a4 04 	call	0x948	; 0x948 <menu_init>
	adc_init();
     efc:	0e 94 c5 03 	call	0x78a	; 0x78a <adc_init>
	joystick_calibrate();
     f00:	0e 94 e1 03 	call	0x7c2	; 0x7c2 <joystick_calibrate>
	spi_init();
     f04:	0e 94 40 07 	call	0xe80	; 0xe80 <spi_init>
	while(1){
		_delay_ms(1000);
		spi_send('A');
		char test=spi_read();
		char test1='A';
		printf("Result: %c",test);
     f08:	c6 ea       	ldi	r28, 0xA6	; 166
     f0a:	d1 e0       	ldi	r29, 0x01	; 1
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     f0c:	2f ef       	ldi	r18, 0xFF	; 255
     f0e:	83 ed       	ldi	r24, 0xD3	; 211
     f10:	90 e3       	ldi	r25, 0x30	; 48
     f12:	21 50       	subi	r18, 0x01	; 1
     f14:	80 40       	sbci	r24, 0x00	; 0
     f16:	90 40       	sbci	r25, 0x00	; 0
     f18:	e1 f7       	brne	.-8      	; 0xf12 <main+0x2a>
     f1a:	00 c0       	rjmp	.+0      	; 0xf1c <main+0x34>
     f1c:	00 00       	nop
	joystick_calibrate();
	spi_init();
	
	while(1){
		_delay_ms(1000);
		spi_send('A');
     f1e:	81 e4       	ldi	r24, 0x41	; 65
     f20:	0e 94 46 07 	call	0xe8c	; 0xe8c <spi_send>
		char test=spi_read();
     f24:	0e 94 4a 07 	call	0xe94	; 0xe94 <spi_read>
		char test1='A';
		printf("Result: %c",test);
     f28:	1f 92       	push	r1
     f2a:	8f 93       	push	r24
     f2c:	df 93       	push	r29
     f2e:	cf 93       	push	r28
     f30:	0e 94 29 0a 	call	0x1452	; 0x1452 <printf>
     f34:	0f 90       	pop	r0
     f36:	0f 90       	pop	r0
     f38:	0f 90       	pop	r0
     f3a:	0f 90       	pop	r0
     f3c:	e7 cf       	rjmp	.-50     	; 0xf0c <main+0x24>

00000f3e <util_sort>:
	t=*p;
	*p=*q;
	*q=t;
}

void util_sort(int a[],int n) {
     f3e:	cf 93       	push	r28
     f40:	df 93       	push	r29
	int i,j,temp;

	for(i = 0;i < n-1;i++) {
     f42:	eb 01       	movw	r28, r22
     f44:	21 97       	sbiw	r28, 0x01	; 1
     f46:	1c 16       	cp	r1, r28
     f48:	1d 06       	cpc	r1, r29
     f4a:	14 f5       	brge	.+68     	; 0xf90 <util_sort+0x52>
     f4c:	61 50       	subi	r22, 0x01	; 1
     f4e:	70 48       	sbci	r23, 0x80	; 128
     f50:	66 0f       	add	r22, r22
     f52:	77 1f       	adc	r23, r23
     f54:	68 0f       	add	r22, r24
     f56:	79 1f       	adc	r23, r25
     f58:	17 c0       	rjmp	.+46     	; 0xf88 <util_sort+0x4a>
		for(j = 0;j < n-i-1;j++) {
     f5a:	fc 01       	movw	r30, r24
			if(a[j] > a[j+1])
     f5c:	21 91       	ld	r18, Z+
     f5e:	31 91       	ld	r19, Z+
     f60:	40 81       	ld	r20, Z
     f62:	51 81       	ldd	r21, Z+1	; 0x01
     f64:	42 17       	cp	r20, r18
     f66:	53 07       	cpc	r21, r19
     f68:	34 f4       	brge	.+12     	; 0xf76 <util_sort+0x38>
#include "util.h"

void util_swap(int *p,int *q) {
	int t;
	t=*p;
	*p=*q;
     f6a:	df 01       	movw	r26, r30
     f6c:	12 97       	sbiw	r26, 0x02	; 2
     f6e:	4d 93       	st	X+, r20
     f70:	5c 93       	st	X, r21
	*q=t;
     f72:	31 83       	std	Z+1, r19	; 0x01
     f74:	20 83       	st	Z, r18

void util_sort(int a[],int n) {
	int i,j,temp;

	for(i = 0;i < n-1;i++) {
		for(j = 0;j < n-i-1;j++) {
     f76:	e6 17       	cp	r30, r22
     f78:	f7 07       	cpc	r31, r23
     f7a:	81 f7       	brne	.-32     	; 0xf5c <util_sort+0x1e>
     f7c:	21 97       	sbiw	r28, 0x01	; 1
     f7e:	62 50       	subi	r22, 0x02	; 2
     f80:	71 09       	sbc	r23, r1
}

void util_sort(int a[],int n) {
	int i,j,temp;

	for(i = 0;i < n-1;i++) {
     f82:	68 17       	cp	r22, r24
     f84:	79 07       	cpc	r23, r25
     f86:	21 f0       	breq	.+8      	; 0xf90 <util_sort+0x52>
		for(j = 0;j < n-i-1;j++) {
     f88:	1c 16       	cp	r1, r28
     f8a:	1d 06       	cpc	r1, r29
     f8c:	34 f3       	brlt	.-52     	; 0xf5a <util_sort+0x1c>
     f8e:	f6 cf       	rjmp	.-20     	; 0xf7c <util_sort+0x3e>
			if(a[j] > a[j+1])
			util_swap(&a[j],&a[j+1]);
		}
	}
}
     f90:	df 91       	pop	r29
     f92:	cf 91       	pop	r28
     f94:	08 95       	ret

00000f96 <util_median>:
int util_median(int a[], int n){
     f96:	0f 93       	push	r16
     f98:	1f 93       	push	r17
     f9a:	cf 93       	push	r28
     f9c:	df 93       	push	r29
     f9e:	8c 01       	movw	r16, r24
     fa0:	eb 01       	movw	r28, r22
	util_sort(a,n);
     fa2:	0e 94 9f 07 	call	0xf3e	; 0xf3e <util_sort>
	n=((n+1)/2)-1;
     fa6:	21 96       	adiw	r28, 0x01	; 1
     fa8:	ce 01       	movw	r24, r28
     faa:	0a f4       	brpl	.+2      	; 0xfae <util_median+0x18>
     fac:	01 96       	adiw	r24, 0x01	; 1
	return a[n];
     fae:	fc 01       	movw	r30, r24
     fb0:	ee 7f       	andi	r30, 0xFE	; 254
     fb2:	32 97       	sbiw	r30, 0x02	; 2
     fb4:	e0 0f       	add	r30, r16
     fb6:	f1 1f       	adc	r31, r17
     fb8:	80 81       	ld	r24, Z
     fba:	91 81       	ldd	r25, Z+1	; 0x01
     fbc:	df 91       	pop	r29
     fbe:	cf 91       	pop	r28
     fc0:	1f 91       	pop	r17
     fc2:	0f 91       	pop	r16
     fc4:	08 95       	ret

00000fc6 <malloc>:
     fc6:	0f 93       	push	r16
     fc8:	1f 93       	push	r17
     fca:	cf 93       	push	r28
     fcc:	df 93       	push	r29
     fce:	82 30       	cpi	r24, 0x02	; 2
     fd0:	91 05       	cpc	r25, r1
     fd2:	10 f4       	brcc	.+4      	; 0xfd8 <malloc+0x12>
     fd4:	82 e0       	ldi	r24, 0x02	; 2
     fd6:	90 e0       	ldi	r25, 0x00	; 0
     fd8:	e0 91 bc 01 	lds	r30, 0x01BC	; 0x8001bc <__flp>
     fdc:	f0 91 bd 01 	lds	r31, 0x01BD	; 0x8001bd <__flp+0x1>
     fe0:	20 e0       	ldi	r18, 0x00	; 0
     fe2:	30 e0       	ldi	r19, 0x00	; 0
     fe4:	a0 e0       	ldi	r26, 0x00	; 0
     fe6:	b0 e0       	ldi	r27, 0x00	; 0
     fe8:	30 97       	sbiw	r30, 0x00	; 0
     fea:	19 f1       	breq	.+70     	; 0x1032 <malloc+0x6c>
     fec:	40 81       	ld	r20, Z
     fee:	51 81       	ldd	r21, Z+1	; 0x01
     ff0:	02 81       	ldd	r16, Z+2	; 0x02
     ff2:	13 81       	ldd	r17, Z+3	; 0x03
     ff4:	48 17       	cp	r20, r24
     ff6:	59 07       	cpc	r21, r25
     ff8:	c8 f0       	brcs	.+50     	; 0x102c <malloc+0x66>
     ffa:	84 17       	cp	r24, r20
     ffc:	95 07       	cpc	r25, r21
     ffe:	69 f4       	brne	.+26     	; 0x101a <malloc+0x54>
    1000:	10 97       	sbiw	r26, 0x00	; 0
    1002:	31 f0       	breq	.+12     	; 0x1010 <malloc+0x4a>
    1004:	12 96       	adiw	r26, 0x02	; 2
    1006:	0c 93       	st	X, r16
    1008:	12 97       	sbiw	r26, 0x02	; 2
    100a:	13 96       	adiw	r26, 0x03	; 3
    100c:	1c 93       	st	X, r17
    100e:	27 c0       	rjmp	.+78     	; 0x105e <malloc+0x98>
    1010:	00 93 bc 01 	sts	0x01BC, r16	; 0x8001bc <__flp>
    1014:	10 93 bd 01 	sts	0x01BD, r17	; 0x8001bd <__flp+0x1>
    1018:	22 c0       	rjmp	.+68     	; 0x105e <malloc+0x98>
    101a:	21 15       	cp	r18, r1
    101c:	31 05       	cpc	r19, r1
    101e:	19 f0       	breq	.+6      	; 0x1026 <malloc+0x60>
    1020:	42 17       	cp	r20, r18
    1022:	53 07       	cpc	r21, r19
    1024:	18 f4       	brcc	.+6      	; 0x102c <malloc+0x66>
    1026:	9a 01       	movw	r18, r20
    1028:	bd 01       	movw	r22, r26
    102a:	ef 01       	movw	r28, r30
    102c:	df 01       	movw	r26, r30
    102e:	f8 01       	movw	r30, r16
    1030:	db cf       	rjmp	.-74     	; 0xfe8 <malloc+0x22>
    1032:	21 15       	cp	r18, r1
    1034:	31 05       	cpc	r19, r1
    1036:	f9 f0       	breq	.+62     	; 0x1076 <malloc+0xb0>
    1038:	28 1b       	sub	r18, r24
    103a:	39 0b       	sbc	r19, r25
    103c:	24 30       	cpi	r18, 0x04	; 4
    103e:	31 05       	cpc	r19, r1
    1040:	80 f4       	brcc	.+32     	; 0x1062 <malloc+0x9c>
    1042:	8a 81       	ldd	r24, Y+2	; 0x02
    1044:	9b 81       	ldd	r25, Y+3	; 0x03
    1046:	61 15       	cp	r22, r1
    1048:	71 05       	cpc	r23, r1
    104a:	21 f0       	breq	.+8      	; 0x1054 <malloc+0x8e>
    104c:	fb 01       	movw	r30, r22
    104e:	93 83       	std	Z+3, r25	; 0x03
    1050:	82 83       	std	Z+2, r24	; 0x02
    1052:	04 c0       	rjmp	.+8      	; 0x105c <malloc+0x96>
    1054:	90 93 bd 01 	sts	0x01BD, r25	; 0x8001bd <__flp+0x1>
    1058:	80 93 bc 01 	sts	0x01BC, r24	; 0x8001bc <__flp>
    105c:	fe 01       	movw	r30, r28
    105e:	32 96       	adiw	r30, 0x02	; 2
    1060:	44 c0       	rjmp	.+136    	; 0x10ea <malloc+0x124>
    1062:	fe 01       	movw	r30, r28
    1064:	e2 0f       	add	r30, r18
    1066:	f3 1f       	adc	r31, r19
    1068:	81 93       	st	Z+, r24
    106a:	91 93       	st	Z+, r25
    106c:	22 50       	subi	r18, 0x02	; 2
    106e:	31 09       	sbc	r19, r1
    1070:	39 83       	std	Y+1, r19	; 0x01
    1072:	28 83       	st	Y, r18
    1074:	3a c0       	rjmp	.+116    	; 0x10ea <malloc+0x124>
    1076:	20 91 ba 01 	lds	r18, 0x01BA	; 0x8001ba <__brkval>
    107a:	30 91 bb 01 	lds	r19, 0x01BB	; 0x8001bb <__brkval+0x1>
    107e:	23 2b       	or	r18, r19
    1080:	41 f4       	brne	.+16     	; 0x1092 <malloc+0xcc>
    1082:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
    1086:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
    108a:	30 93 bb 01 	sts	0x01BB, r19	; 0x8001bb <__brkval+0x1>
    108e:	20 93 ba 01 	sts	0x01BA, r18	; 0x8001ba <__brkval>
    1092:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
    1096:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
    109a:	21 15       	cp	r18, r1
    109c:	31 05       	cpc	r19, r1
    109e:	41 f4       	brne	.+16     	; 0x10b0 <malloc+0xea>
    10a0:	2d b7       	in	r18, 0x3d	; 61
    10a2:	3e b7       	in	r19, 0x3e	; 62
    10a4:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    10a8:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    10ac:	24 1b       	sub	r18, r20
    10ae:	35 0b       	sbc	r19, r21
    10b0:	e0 91 ba 01 	lds	r30, 0x01BA	; 0x8001ba <__brkval>
    10b4:	f0 91 bb 01 	lds	r31, 0x01BB	; 0x8001bb <__brkval+0x1>
    10b8:	e2 17       	cp	r30, r18
    10ba:	f3 07       	cpc	r31, r19
    10bc:	a0 f4       	brcc	.+40     	; 0x10e6 <malloc+0x120>
    10be:	2e 1b       	sub	r18, r30
    10c0:	3f 0b       	sbc	r19, r31
    10c2:	28 17       	cp	r18, r24
    10c4:	39 07       	cpc	r19, r25
    10c6:	78 f0       	brcs	.+30     	; 0x10e6 <malloc+0x120>
    10c8:	ac 01       	movw	r20, r24
    10ca:	4e 5f       	subi	r20, 0xFE	; 254
    10cc:	5f 4f       	sbci	r21, 0xFF	; 255
    10ce:	24 17       	cp	r18, r20
    10d0:	35 07       	cpc	r19, r21
    10d2:	48 f0       	brcs	.+18     	; 0x10e6 <malloc+0x120>
    10d4:	4e 0f       	add	r20, r30
    10d6:	5f 1f       	adc	r21, r31
    10d8:	50 93 bb 01 	sts	0x01BB, r21	; 0x8001bb <__brkval+0x1>
    10dc:	40 93 ba 01 	sts	0x01BA, r20	; 0x8001ba <__brkval>
    10e0:	81 93       	st	Z+, r24
    10e2:	91 93       	st	Z+, r25
    10e4:	02 c0       	rjmp	.+4      	; 0x10ea <malloc+0x124>
    10e6:	e0 e0       	ldi	r30, 0x00	; 0
    10e8:	f0 e0       	ldi	r31, 0x00	; 0
    10ea:	cf 01       	movw	r24, r30
    10ec:	df 91       	pop	r29
    10ee:	cf 91       	pop	r28
    10f0:	1f 91       	pop	r17
    10f2:	0f 91       	pop	r16
    10f4:	08 95       	ret

000010f6 <free>:
    10f6:	cf 93       	push	r28
    10f8:	df 93       	push	r29
    10fa:	00 97       	sbiw	r24, 0x00	; 0
    10fc:	09 f4       	brne	.+2      	; 0x1100 <free+0xa>
    10fe:	81 c0       	rjmp	.+258    	; 0x1202 <free+0x10c>
    1100:	fc 01       	movw	r30, r24
    1102:	32 97       	sbiw	r30, 0x02	; 2
    1104:	13 82       	std	Z+3, r1	; 0x03
    1106:	12 82       	std	Z+2, r1	; 0x02
    1108:	a0 91 bc 01 	lds	r26, 0x01BC	; 0x8001bc <__flp>
    110c:	b0 91 bd 01 	lds	r27, 0x01BD	; 0x8001bd <__flp+0x1>
    1110:	10 97       	sbiw	r26, 0x00	; 0
    1112:	81 f4       	brne	.+32     	; 0x1134 <free+0x3e>
    1114:	20 81       	ld	r18, Z
    1116:	31 81       	ldd	r19, Z+1	; 0x01
    1118:	82 0f       	add	r24, r18
    111a:	93 1f       	adc	r25, r19
    111c:	20 91 ba 01 	lds	r18, 0x01BA	; 0x8001ba <__brkval>
    1120:	30 91 bb 01 	lds	r19, 0x01BB	; 0x8001bb <__brkval+0x1>
    1124:	28 17       	cp	r18, r24
    1126:	39 07       	cpc	r19, r25
    1128:	51 f5       	brne	.+84     	; 0x117e <free+0x88>
    112a:	f0 93 bb 01 	sts	0x01BB, r31	; 0x8001bb <__brkval+0x1>
    112e:	e0 93 ba 01 	sts	0x01BA, r30	; 0x8001ba <__brkval>
    1132:	67 c0       	rjmp	.+206    	; 0x1202 <free+0x10c>
    1134:	ed 01       	movw	r28, r26
    1136:	20 e0       	ldi	r18, 0x00	; 0
    1138:	30 e0       	ldi	r19, 0x00	; 0
    113a:	ce 17       	cp	r28, r30
    113c:	df 07       	cpc	r29, r31
    113e:	40 f4       	brcc	.+16     	; 0x1150 <free+0x5a>
    1140:	4a 81       	ldd	r20, Y+2	; 0x02
    1142:	5b 81       	ldd	r21, Y+3	; 0x03
    1144:	9e 01       	movw	r18, r28
    1146:	41 15       	cp	r20, r1
    1148:	51 05       	cpc	r21, r1
    114a:	f1 f0       	breq	.+60     	; 0x1188 <free+0x92>
    114c:	ea 01       	movw	r28, r20
    114e:	f5 cf       	rjmp	.-22     	; 0x113a <free+0x44>
    1150:	d3 83       	std	Z+3, r29	; 0x03
    1152:	c2 83       	std	Z+2, r28	; 0x02
    1154:	40 81       	ld	r20, Z
    1156:	51 81       	ldd	r21, Z+1	; 0x01
    1158:	84 0f       	add	r24, r20
    115a:	95 1f       	adc	r25, r21
    115c:	c8 17       	cp	r28, r24
    115e:	d9 07       	cpc	r29, r25
    1160:	59 f4       	brne	.+22     	; 0x1178 <free+0x82>
    1162:	88 81       	ld	r24, Y
    1164:	99 81       	ldd	r25, Y+1	; 0x01
    1166:	84 0f       	add	r24, r20
    1168:	95 1f       	adc	r25, r21
    116a:	02 96       	adiw	r24, 0x02	; 2
    116c:	91 83       	std	Z+1, r25	; 0x01
    116e:	80 83       	st	Z, r24
    1170:	8a 81       	ldd	r24, Y+2	; 0x02
    1172:	9b 81       	ldd	r25, Y+3	; 0x03
    1174:	93 83       	std	Z+3, r25	; 0x03
    1176:	82 83       	std	Z+2, r24	; 0x02
    1178:	21 15       	cp	r18, r1
    117a:	31 05       	cpc	r19, r1
    117c:	29 f4       	brne	.+10     	; 0x1188 <free+0x92>
    117e:	f0 93 bd 01 	sts	0x01BD, r31	; 0x8001bd <__flp+0x1>
    1182:	e0 93 bc 01 	sts	0x01BC, r30	; 0x8001bc <__flp>
    1186:	3d c0       	rjmp	.+122    	; 0x1202 <free+0x10c>
    1188:	e9 01       	movw	r28, r18
    118a:	fb 83       	std	Y+3, r31	; 0x03
    118c:	ea 83       	std	Y+2, r30	; 0x02
    118e:	49 91       	ld	r20, Y+
    1190:	59 91       	ld	r21, Y+
    1192:	c4 0f       	add	r28, r20
    1194:	d5 1f       	adc	r29, r21
    1196:	ec 17       	cp	r30, r28
    1198:	fd 07       	cpc	r31, r29
    119a:	61 f4       	brne	.+24     	; 0x11b4 <free+0xbe>
    119c:	80 81       	ld	r24, Z
    119e:	91 81       	ldd	r25, Z+1	; 0x01
    11a0:	84 0f       	add	r24, r20
    11a2:	95 1f       	adc	r25, r21
    11a4:	02 96       	adiw	r24, 0x02	; 2
    11a6:	e9 01       	movw	r28, r18
    11a8:	99 83       	std	Y+1, r25	; 0x01
    11aa:	88 83       	st	Y, r24
    11ac:	82 81       	ldd	r24, Z+2	; 0x02
    11ae:	93 81       	ldd	r25, Z+3	; 0x03
    11b0:	9b 83       	std	Y+3, r25	; 0x03
    11b2:	8a 83       	std	Y+2, r24	; 0x02
    11b4:	e0 e0       	ldi	r30, 0x00	; 0
    11b6:	f0 e0       	ldi	r31, 0x00	; 0
    11b8:	12 96       	adiw	r26, 0x02	; 2
    11ba:	8d 91       	ld	r24, X+
    11bc:	9c 91       	ld	r25, X
    11be:	13 97       	sbiw	r26, 0x03	; 3
    11c0:	00 97       	sbiw	r24, 0x00	; 0
    11c2:	19 f0       	breq	.+6      	; 0x11ca <free+0xd4>
    11c4:	fd 01       	movw	r30, r26
    11c6:	dc 01       	movw	r26, r24
    11c8:	f7 cf       	rjmp	.-18     	; 0x11b8 <free+0xc2>
    11ca:	8d 91       	ld	r24, X+
    11cc:	9c 91       	ld	r25, X
    11ce:	11 97       	sbiw	r26, 0x01	; 1
    11d0:	9d 01       	movw	r18, r26
    11d2:	2e 5f       	subi	r18, 0xFE	; 254
    11d4:	3f 4f       	sbci	r19, 0xFF	; 255
    11d6:	82 0f       	add	r24, r18
    11d8:	93 1f       	adc	r25, r19
    11da:	20 91 ba 01 	lds	r18, 0x01BA	; 0x8001ba <__brkval>
    11de:	30 91 bb 01 	lds	r19, 0x01BB	; 0x8001bb <__brkval+0x1>
    11e2:	28 17       	cp	r18, r24
    11e4:	39 07       	cpc	r19, r25
    11e6:	69 f4       	brne	.+26     	; 0x1202 <free+0x10c>
    11e8:	30 97       	sbiw	r30, 0x00	; 0
    11ea:	29 f4       	brne	.+10     	; 0x11f6 <free+0x100>
    11ec:	10 92 bd 01 	sts	0x01BD, r1	; 0x8001bd <__flp+0x1>
    11f0:	10 92 bc 01 	sts	0x01BC, r1	; 0x8001bc <__flp>
    11f4:	02 c0       	rjmp	.+4      	; 0x11fa <free+0x104>
    11f6:	13 82       	std	Z+3, r1	; 0x03
    11f8:	12 82       	std	Z+2, r1	; 0x02
    11fa:	b0 93 bb 01 	sts	0x01BB, r27	; 0x8001bb <__brkval+0x1>
    11fe:	a0 93 ba 01 	sts	0x01BA, r26	; 0x8001ba <__brkval>
    1202:	df 91       	pop	r29
    1204:	cf 91       	pop	r28
    1206:	08 95       	ret

00001208 <realloc>:
    1208:	a0 e0       	ldi	r26, 0x00	; 0
    120a:	b0 e0       	ldi	r27, 0x00	; 0
    120c:	ea e0       	ldi	r30, 0x0A	; 10
    120e:	f9 e0       	ldi	r31, 0x09	; 9
    1210:	0c 94 f7 0c 	jmp	0x19ee	; 0x19ee <__prologue_saves__+0x8>
    1214:	ec 01       	movw	r28, r24
    1216:	00 97       	sbiw	r24, 0x00	; 0
    1218:	21 f4       	brne	.+8      	; 0x1222 <realloc+0x1a>
    121a:	cb 01       	movw	r24, r22
    121c:	0e 94 e3 07 	call	0xfc6	; 0xfc6 <malloc>
    1220:	b4 c0       	rjmp	.+360    	; 0x138a <realloc+0x182>
    1222:	fc 01       	movw	r30, r24
    1224:	e6 0f       	add	r30, r22
    1226:	f7 1f       	adc	r31, r23
    1228:	9c 01       	movw	r18, r24
    122a:	22 50       	subi	r18, 0x02	; 2
    122c:	31 09       	sbc	r19, r1
    122e:	e2 17       	cp	r30, r18
    1230:	f3 07       	cpc	r31, r19
    1232:	08 f4       	brcc	.+2      	; 0x1236 <realloc+0x2e>
    1234:	a8 c0       	rjmp	.+336    	; 0x1386 <realloc+0x17e>
    1236:	d9 01       	movw	r26, r18
    1238:	0d 91       	ld	r16, X+
    123a:	1c 91       	ld	r17, X
    123c:	11 97       	sbiw	r26, 0x01	; 1
    123e:	06 17       	cp	r16, r22
    1240:	17 07       	cpc	r17, r23
    1242:	b0 f0       	brcs	.+44     	; 0x1270 <realloc+0x68>
    1244:	05 30       	cpi	r16, 0x05	; 5
    1246:	11 05       	cpc	r17, r1
    1248:	08 f4       	brcc	.+2      	; 0x124c <realloc+0x44>
    124a:	9b c0       	rjmp	.+310    	; 0x1382 <realloc+0x17a>
    124c:	c8 01       	movw	r24, r16
    124e:	04 97       	sbiw	r24, 0x04	; 4
    1250:	86 17       	cp	r24, r22
    1252:	97 07       	cpc	r25, r23
    1254:	08 f4       	brcc	.+2      	; 0x1258 <realloc+0x50>
    1256:	95 c0       	rjmp	.+298    	; 0x1382 <realloc+0x17a>
    1258:	02 50       	subi	r16, 0x02	; 2
    125a:	11 09       	sbc	r17, r1
    125c:	06 1b       	sub	r16, r22
    125e:	17 0b       	sbc	r17, r23
    1260:	01 93       	st	Z+, r16
    1262:	11 93       	st	Z+, r17
    1264:	6d 93       	st	X+, r22
    1266:	7c 93       	st	X, r23
    1268:	cf 01       	movw	r24, r30
    126a:	0e 94 7b 08 	call	0x10f6	; 0x10f6 <free>
    126e:	89 c0       	rjmp	.+274    	; 0x1382 <realloc+0x17a>
    1270:	5b 01       	movw	r10, r22
    1272:	a0 1a       	sub	r10, r16
    1274:	b1 0a       	sbc	r11, r17
    1276:	4c 01       	movw	r8, r24
    1278:	80 0e       	add	r8, r16
    127a:	91 1e       	adc	r9, r17
    127c:	a0 91 bc 01 	lds	r26, 0x01BC	; 0x8001bc <__flp>
    1280:	b0 91 bd 01 	lds	r27, 0x01BD	; 0x8001bd <__flp+0x1>
    1284:	61 2c       	mov	r6, r1
    1286:	71 2c       	mov	r7, r1
    1288:	e1 2c       	mov	r14, r1
    128a:	f1 2c       	mov	r15, r1
    128c:	10 97       	sbiw	r26, 0x00	; 0
    128e:	09 f4       	brne	.+2      	; 0x1292 <realloc+0x8a>
    1290:	46 c0       	rjmp	.+140    	; 0x131e <realloc+0x116>
    1292:	8d 91       	ld	r24, X+
    1294:	9c 91       	ld	r25, X
    1296:	11 97       	sbiw	r26, 0x01	; 1
    1298:	a8 15       	cp	r26, r8
    129a:	b9 05       	cpc	r27, r9
    129c:	b1 f5       	brne	.+108    	; 0x130a <realloc+0x102>
    129e:	6c 01       	movw	r12, r24
    12a0:	42 e0       	ldi	r20, 0x02	; 2
    12a2:	c4 0e       	add	r12, r20
    12a4:	d1 1c       	adc	r13, r1
    12a6:	ca 14       	cp	r12, r10
    12a8:	db 04       	cpc	r13, r11
    12aa:	78 f1       	brcs	.+94     	; 0x130a <realloc+0x102>
    12ac:	4c 01       	movw	r8, r24
    12ae:	8a 18       	sub	r8, r10
    12b0:	9b 08       	sbc	r9, r11
    12b2:	64 01       	movw	r12, r8
    12b4:	42 e0       	ldi	r20, 0x02	; 2
    12b6:	c4 0e       	add	r12, r20
    12b8:	d1 1c       	adc	r13, r1
    12ba:	12 96       	adiw	r26, 0x02	; 2
    12bc:	bc 90       	ld	r11, X
    12be:	12 97       	sbiw	r26, 0x02	; 2
    12c0:	13 96       	adiw	r26, 0x03	; 3
    12c2:	ac 91       	ld	r26, X
    12c4:	b5 e0       	ldi	r27, 0x05	; 5
    12c6:	cb 16       	cp	r12, r27
    12c8:	d1 04       	cpc	r13, r1
    12ca:	40 f0       	brcs	.+16     	; 0x12dc <realloc+0xd4>
    12cc:	b2 82       	std	Z+2, r11	; 0x02
    12ce:	a3 83       	std	Z+3, r26	; 0x03
    12d0:	91 82       	std	Z+1, r9	; 0x01
    12d2:	80 82       	st	Z, r8
    12d4:	d9 01       	movw	r26, r18
    12d6:	6d 93       	st	X+, r22
    12d8:	7c 93       	st	X, r23
    12da:	09 c0       	rjmp	.+18     	; 0x12ee <realloc+0xe6>
    12dc:	0e 5f       	subi	r16, 0xFE	; 254
    12de:	1f 4f       	sbci	r17, 0xFF	; 255
    12e0:	80 0f       	add	r24, r16
    12e2:	91 1f       	adc	r25, r17
    12e4:	f9 01       	movw	r30, r18
    12e6:	91 83       	std	Z+1, r25	; 0x01
    12e8:	80 83       	st	Z, r24
    12ea:	eb 2d       	mov	r30, r11
    12ec:	fa 2f       	mov	r31, r26
    12ee:	e1 14       	cp	r14, r1
    12f0:	f1 04       	cpc	r15, r1
    12f2:	31 f0       	breq	.+12     	; 0x1300 <realloc+0xf8>
    12f4:	d7 01       	movw	r26, r14
    12f6:	13 96       	adiw	r26, 0x03	; 3
    12f8:	fc 93       	st	X, r31
    12fa:	ee 93       	st	-X, r30
    12fc:	12 97       	sbiw	r26, 0x02	; 2
    12fe:	41 c0       	rjmp	.+130    	; 0x1382 <realloc+0x17a>
    1300:	f0 93 bd 01 	sts	0x01BD, r31	; 0x8001bd <__flp+0x1>
    1304:	e0 93 bc 01 	sts	0x01BC, r30	; 0x8001bc <__flp>
    1308:	3c c0       	rjmp	.+120    	; 0x1382 <realloc+0x17a>
    130a:	68 16       	cp	r6, r24
    130c:	79 06       	cpc	r7, r25
    130e:	08 f4       	brcc	.+2      	; 0x1312 <realloc+0x10a>
    1310:	3c 01       	movw	r6, r24
    1312:	7d 01       	movw	r14, r26
    1314:	12 96       	adiw	r26, 0x02	; 2
    1316:	0d 90       	ld	r0, X+
    1318:	bc 91       	ld	r27, X
    131a:	a0 2d       	mov	r26, r0
    131c:	b7 cf       	rjmp	.-146    	; 0x128c <realloc+0x84>
    131e:	80 91 ba 01 	lds	r24, 0x01BA	; 0x8001ba <__brkval>
    1322:	90 91 bb 01 	lds	r25, 0x01BB	; 0x8001bb <__brkval+0x1>
    1326:	88 16       	cp	r8, r24
    1328:	99 06       	cpc	r9, r25
    132a:	e1 f4       	brne	.+56     	; 0x1364 <realloc+0x15c>
    132c:	66 16       	cp	r6, r22
    132e:	77 06       	cpc	r7, r23
    1330:	c8 f4       	brcc	.+50     	; 0x1364 <realloc+0x15c>
    1332:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    1336:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
    133a:	00 97       	sbiw	r24, 0x00	; 0
    133c:	41 f4       	brne	.+16     	; 0x134e <realloc+0x146>
    133e:	8d b7       	in	r24, 0x3d	; 61
    1340:	9e b7       	in	r25, 0x3e	; 62
    1342:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    1346:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    134a:	84 1b       	sub	r24, r20
    134c:	95 0b       	sbc	r25, r21
    134e:	e8 17       	cp	r30, r24
    1350:	f9 07       	cpc	r31, r25
    1352:	c8 f4       	brcc	.+50     	; 0x1386 <realloc+0x17e>
    1354:	f0 93 bb 01 	sts	0x01BB, r31	; 0x8001bb <__brkval+0x1>
    1358:	e0 93 ba 01 	sts	0x01BA, r30	; 0x8001ba <__brkval>
    135c:	f9 01       	movw	r30, r18
    135e:	71 83       	std	Z+1, r23	; 0x01
    1360:	60 83       	st	Z, r22
    1362:	0f c0       	rjmp	.+30     	; 0x1382 <realloc+0x17a>
    1364:	cb 01       	movw	r24, r22
    1366:	0e 94 e3 07 	call	0xfc6	; 0xfc6 <malloc>
    136a:	7c 01       	movw	r14, r24
    136c:	00 97       	sbiw	r24, 0x00	; 0
    136e:	59 f0       	breq	.+22     	; 0x1386 <realloc+0x17e>
    1370:	a8 01       	movw	r20, r16
    1372:	be 01       	movw	r22, r28
    1374:	0e 94 ca 09 	call	0x1394	; 0x1394 <memcpy>
    1378:	ce 01       	movw	r24, r28
    137a:	0e 94 7b 08 	call	0x10f6	; 0x10f6 <free>
    137e:	c7 01       	movw	r24, r14
    1380:	04 c0       	rjmp	.+8      	; 0x138a <realloc+0x182>
    1382:	ce 01       	movw	r24, r28
    1384:	02 c0       	rjmp	.+4      	; 0x138a <realloc+0x182>
    1386:	80 e0       	ldi	r24, 0x00	; 0
    1388:	90 e0       	ldi	r25, 0x00	; 0
    138a:	cd b7       	in	r28, 0x3d	; 61
    138c:	de b7       	in	r29, 0x3e	; 62
    138e:	ee e0       	ldi	r30, 0x0E	; 14
    1390:	0c 94 13 0d 	jmp	0x1a26	; 0x1a26 <__epilogue_restores__+0x8>

00001394 <memcpy>:
    1394:	fb 01       	movw	r30, r22
    1396:	dc 01       	movw	r26, r24
    1398:	02 c0       	rjmp	.+4      	; 0x139e <memcpy+0xa>
    139a:	01 90       	ld	r0, Z+
    139c:	0d 92       	st	X+, r0
    139e:	41 50       	subi	r20, 0x01	; 1
    13a0:	50 40       	sbci	r21, 0x00	; 0
    13a2:	d8 f7       	brcc	.-10     	; 0x139a <memcpy+0x6>
    13a4:	08 95       	ret

000013a6 <strcat>:
    13a6:	fb 01       	movw	r30, r22
    13a8:	dc 01       	movw	r26, r24
    13aa:	0d 90       	ld	r0, X+
    13ac:	00 20       	and	r0, r0
    13ae:	e9 f7       	brne	.-6      	; 0x13aa <strcat+0x4>
    13b0:	11 97       	sbiw	r26, 0x01	; 1
    13b2:	01 90       	ld	r0, Z+
    13b4:	0d 92       	st	X+, r0
    13b6:	00 20       	and	r0, r0
    13b8:	e1 f7       	brne	.-8      	; 0x13b2 <strcat+0xc>
    13ba:	08 95       	ret

000013bc <fdevopen>:
    13bc:	0f 93       	push	r16
    13be:	1f 93       	push	r17
    13c0:	cf 93       	push	r28
    13c2:	df 93       	push	r29
    13c4:	00 97       	sbiw	r24, 0x00	; 0
    13c6:	31 f4       	brne	.+12     	; 0x13d4 <fdevopen+0x18>
    13c8:	61 15       	cp	r22, r1
    13ca:	71 05       	cpc	r23, r1
    13cc:	19 f4       	brne	.+6      	; 0x13d4 <fdevopen+0x18>
    13ce:	80 e0       	ldi	r24, 0x00	; 0
    13d0:	90 e0       	ldi	r25, 0x00	; 0
    13d2:	3a c0       	rjmp	.+116    	; 0x1448 <fdevopen+0x8c>
    13d4:	8b 01       	movw	r16, r22
    13d6:	ec 01       	movw	r28, r24
    13d8:	6e e0       	ldi	r22, 0x0E	; 14
    13da:	70 e0       	ldi	r23, 0x00	; 0
    13dc:	81 e0       	ldi	r24, 0x01	; 1
    13de:	90 e0       	ldi	r25, 0x00	; 0
    13e0:	0e 94 20 0c 	call	0x1840	; 0x1840 <calloc>
    13e4:	fc 01       	movw	r30, r24
    13e6:	89 2b       	or	r24, r25
    13e8:	91 f3       	breq	.-28     	; 0x13ce <fdevopen+0x12>
    13ea:	80 e8       	ldi	r24, 0x80	; 128
    13ec:	83 83       	std	Z+3, r24	; 0x03
    13ee:	01 15       	cp	r16, r1
    13f0:	11 05       	cpc	r17, r1
    13f2:	71 f0       	breq	.+28     	; 0x1410 <fdevopen+0x54>
    13f4:	13 87       	std	Z+11, r17	; 0x0b
    13f6:	02 87       	std	Z+10, r16	; 0x0a
    13f8:	81 e8       	ldi	r24, 0x81	; 129
    13fa:	83 83       	std	Z+3, r24	; 0x03
    13fc:	80 91 be 01 	lds	r24, 0x01BE	; 0x8001be <__iob>
    1400:	90 91 bf 01 	lds	r25, 0x01BF	; 0x8001bf <__iob+0x1>
    1404:	89 2b       	or	r24, r25
    1406:	21 f4       	brne	.+8      	; 0x1410 <fdevopen+0x54>
    1408:	f0 93 bf 01 	sts	0x01BF, r31	; 0x8001bf <__iob+0x1>
    140c:	e0 93 be 01 	sts	0x01BE, r30	; 0x8001be <__iob>
    1410:	20 97       	sbiw	r28, 0x00	; 0
    1412:	c9 f0       	breq	.+50     	; 0x1446 <fdevopen+0x8a>
    1414:	d1 87       	std	Z+9, r29	; 0x09
    1416:	c0 87       	std	Z+8, r28	; 0x08
    1418:	83 81       	ldd	r24, Z+3	; 0x03
    141a:	82 60       	ori	r24, 0x02	; 2
    141c:	83 83       	std	Z+3, r24	; 0x03
    141e:	80 91 c0 01 	lds	r24, 0x01C0	; 0x8001c0 <__iob+0x2>
    1422:	90 91 c1 01 	lds	r25, 0x01C1	; 0x8001c1 <__iob+0x3>
    1426:	89 2b       	or	r24, r25
    1428:	71 f4       	brne	.+28     	; 0x1446 <fdevopen+0x8a>
    142a:	f0 93 c1 01 	sts	0x01C1, r31	; 0x8001c1 <__iob+0x3>
    142e:	e0 93 c0 01 	sts	0x01C0, r30	; 0x8001c0 <__iob+0x2>
    1432:	80 91 c2 01 	lds	r24, 0x01C2	; 0x8001c2 <__iob+0x4>
    1436:	90 91 c3 01 	lds	r25, 0x01C3	; 0x8001c3 <__iob+0x5>
    143a:	89 2b       	or	r24, r25
    143c:	21 f4       	brne	.+8      	; 0x1446 <fdevopen+0x8a>
    143e:	f0 93 c3 01 	sts	0x01C3, r31	; 0x8001c3 <__iob+0x5>
    1442:	e0 93 c2 01 	sts	0x01C2, r30	; 0x8001c2 <__iob+0x4>
    1446:	cf 01       	movw	r24, r30
    1448:	df 91       	pop	r29
    144a:	cf 91       	pop	r28
    144c:	1f 91       	pop	r17
    144e:	0f 91       	pop	r16
    1450:	08 95       	ret

00001452 <printf>:
    1452:	a0 e0       	ldi	r26, 0x00	; 0
    1454:	b0 e0       	ldi	r27, 0x00	; 0
    1456:	ef e2       	ldi	r30, 0x2F	; 47
    1458:	fa e0       	ldi	r31, 0x0A	; 10
    145a:	0c 94 03 0d 	jmp	0x1a06	; 0x1a06 <__prologue_saves__+0x20>
    145e:	ae 01       	movw	r20, r28
    1460:	4b 5f       	subi	r20, 0xFB	; 251
    1462:	5f 4f       	sbci	r21, 0xFF	; 255
    1464:	fa 01       	movw	r30, r20
    1466:	61 91       	ld	r22, Z+
    1468:	71 91       	ld	r23, Z+
    146a:	af 01       	movw	r20, r30
    146c:	80 91 c0 01 	lds	r24, 0x01C0	; 0x8001c0 <__iob+0x2>
    1470:	90 91 c1 01 	lds	r25, 0x01C1	; 0x8001c1 <__iob+0x3>
    1474:	0e 94 3f 0a 	call	0x147e	; 0x147e <vfprintf>
    1478:	e2 e0       	ldi	r30, 0x02	; 2
    147a:	0c 94 1f 0d 	jmp	0x1a3e	; 0x1a3e <__epilogue_restores__+0x20>

0000147e <vfprintf>:
    147e:	ab e0       	ldi	r26, 0x0B	; 11
    1480:	b0 e0       	ldi	r27, 0x00	; 0
    1482:	e5 e4       	ldi	r30, 0x45	; 69
    1484:	fa e0       	ldi	r31, 0x0A	; 10
    1486:	0c 94 f3 0c 	jmp	0x19e6	; 0x19e6 <__prologue_saves__>
    148a:	6c 01       	movw	r12, r24
    148c:	7b 01       	movw	r14, r22
    148e:	8a 01       	movw	r16, r20
    1490:	fc 01       	movw	r30, r24
    1492:	17 82       	std	Z+7, r1	; 0x07
    1494:	16 82       	std	Z+6, r1	; 0x06
    1496:	83 81       	ldd	r24, Z+3	; 0x03
    1498:	81 ff       	sbrs	r24, 1
    149a:	cc c1       	rjmp	.+920    	; 0x1834 <vfprintf+0x3b6>
    149c:	ce 01       	movw	r24, r28
    149e:	01 96       	adiw	r24, 0x01	; 1
    14a0:	3c 01       	movw	r6, r24
    14a2:	f6 01       	movw	r30, r12
    14a4:	93 81       	ldd	r25, Z+3	; 0x03
    14a6:	f7 01       	movw	r30, r14
    14a8:	93 fd       	sbrc	r25, 3
    14aa:	85 91       	lpm	r24, Z+
    14ac:	93 ff       	sbrs	r25, 3
    14ae:	81 91       	ld	r24, Z+
    14b0:	7f 01       	movw	r14, r30
    14b2:	88 23       	and	r24, r24
    14b4:	09 f4       	brne	.+2      	; 0x14b8 <vfprintf+0x3a>
    14b6:	ba c1       	rjmp	.+884    	; 0x182c <vfprintf+0x3ae>
    14b8:	85 32       	cpi	r24, 0x25	; 37
    14ba:	39 f4       	brne	.+14     	; 0x14ca <vfprintf+0x4c>
    14bc:	93 fd       	sbrc	r25, 3
    14be:	85 91       	lpm	r24, Z+
    14c0:	93 ff       	sbrs	r25, 3
    14c2:	81 91       	ld	r24, Z+
    14c4:	7f 01       	movw	r14, r30
    14c6:	85 32       	cpi	r24, 0x25	; 37
    14c8:	29 f4       	brne	.+10     	; 0x14d4 <vfprintf+0x56>
    14ca:	b6 01       	movw	r22, r12
    14cc:	90 e0       	ldi	r25, 0x00	; 0
    14ce:	0e 94 59 0c 	call	0x18b2	; 0x18b2 <fputc>
    14d2:	e7 cf       	rjmp	.-50     	; 0x14a2 <vfprintf+0x24>
    14d4:	91 2c       	mov	r9, r1
    14d6:	21 2c       	mov	r2, r1
    14d8:	31 2c       	mov	r3, r1
    14da:	ff e1       	ldi	r31, 0x1F	; 31
    14dc:	f3 15       	cp	r31, r3
    14de:	d8 f0       	brcs	.+54     	; 0x1516 <vfprintf+0x98>
    14e0:	8b 32       	cpi	r24, 0x2B	; 43
    14e2:	79 f0       	breq	.+30     	; 0x1502 <vfprintf+0x84>
    14e4:	38 f4       	brcc	.+14     	; 0x14f4 <vfprintf+0x76>
    14e6:	80 32       	cpi	r24, 0x20	; 32
    14e8:	79 f0       	breq	.+30     	; 0x1508 <vfprintf+0x8a>
    14ea:	83 32       	cpi	r24, 0x23	; 35
    14ec:	a1 f4       	brne	.+40     	; 0x1516 <vfprintf+0x98>
    14ee:	23 2d       	mov	r18, r3
    14f0:	20 61       	ori	r18, 0x10	; 16
    14f2:	1d c0       	rjmp	.+58     	; 0x152e <vfprintf+0xb0>
    14f4:	8d 32       	cpi	r24, 0x2D	; 45
    14f6:	61 f0       	breq	.+24     	; 0x1510 <vfprintf+0x92>
    14f8:	80 33       	cpi	r24, 0x30	; 48
    14fa:	69 f4       	brne	.+26     	; 0x1516 <vfprintf+0x98>
    14fc:	23 2d       	mov	r18, r3
    14fe:	21 60       	ori	r18, 0x01	; 1
    1500:	16 c0       	rjmp	.+44     	; 0x152e <vfprintf+0xb0>
    1502:	83 2d       	mov	r24, r3
    1504:	82 60       	ori	r24, 0x02	; 2
    1506:	38 2e       	mov	r3, r24
    1508:	e3 2d       	mov	r30, r3
    150a:	e4 60       	ori	r30, 0x04	; 4
    150c:	3e 2e       	mov	r3, r30
    150e:	2a c0       	rjmp	.+84     	; 0x1564 <vfprintf+0xe6>
    1510:	f3 2d       	mov	r31, r3
    1512:	f8 60       	ori	r31, 0x08	; 8
    1514:	1d c0       	rjmp	.+58     	; 0x1550 <vfprintf+0xd2>
    1516:	37 fc       	sbrc	r3, 7
    1518:	2d c0       	rjmp	.+90     	; 0x1574 <vfprintf+0xf6>
    151a:	20 ed       	ldi	r18, 0xD0	; 208
    151c:	28 0f       	add	r18, r24
    151e:	2a 30       	cpi	r18, 0x0A	; 10
    1520:	40 f0       	brcs	.+16     	; 0x1532 <vfprintf+0xb4>
    1522:	8e 32       	cpi	r24, 0x2E	; 46
    1524:	b9 f4       	brne	.+46     	; 0x1554 <vfprintf+0xd6>
    1526:	36 fc       	sbrc	r3, 6
    1528:	81 c1       	rjmp	.+770    	; 0x182c <vfprintf+0x3ae>
    152a:	23 2d       	mov	r18, r3
    152c:	20 64       	ori	r18, 0x40	; 64
    152e:	32 2e       	mov	r3, r18
    1530:	19 c0       	rjmp	.+50     	; 0x1564 <vfprintf+0xe6>
    1532:	36 fe       	sbrs	r3, 6
    1534:	06 c0       	rjmp	.+12     	; 0x1542 <vfprintf+0xc4>
    1536:	8a e0       	ldi	r24, 0x0A	; 10
    1538:	98 9e       	mul	r9, r24
    153a:	20 0d       	add	r18, r0
    153c:	11 24       	eor	r1, r1
    153e:	92 2e       	mov	r9, r18
    1540:	11 c0       	rjmp	.+34     	; 0x1564 <vfprintf+0xe6>
    1542:	ea e0       	ldi	r30, 0x0A	; 10
    1544:	2e 9e       	mul	r2, r30
    1546:	20 0d       	add	r18, r0
    1548:	11 24       	eor	r1, r1
    154a:	22 2e       	mov	r2, r18
    154c:	f3 2d       	mov	r31, r3
    154e:	f0 62       	ori	r31, 0x20	; 32
    1550:	3f 2e       	mov	r3, r31
    1552:	08 c0       	rjmp	.+16     	; 0x1564 <vfprintf+0xe6>
    1554:	8c 36       	cpi	r24, 0x6C	; 108
    1556:	21 f4       	brne	.+8      	; 0x1560 <vfprintf+0xe2>
    1558:	83 2d       	mov	r24, r3
    155a:	80 68       	ori	r24, 0x80	; 128
    155c:	38 2e       	mov	r3, r24
    155e:	02 c0       	rjmp	.+4      	; 0x1564 <vfprintf+0xe6>
    1560:	88 36       	cpi	r24, 0x68	; 104
    1562:	41 f4       	brne	.+16     	; 0x1574 <vfprintf+0xf6>
    1564:	f7 01       	movw	r30, r14
    1566:	93 fd       	sbrc	r25, 3
    1568:	85 91       	lpm	r24, Z+
    156a:	93 ff       	sbrs	r25, 3
    156c:	81 91       	ld	r24, Z+
    156e:	7f 01       	movw	r14, r30
    1570:	81 11       	cpse	r24, r1
    1572:	b3 cf       	rjmp	.-154    	; 0x14da <vfprintf+0x5c>
    1574:	98 2f       	mov	r25, r24
    1576:	9f 7d       	andi	r25, 0xDF	; 223
    1578:	95 54       	subi	r25, 0x45	; 69
    157a:	93 30       	cpi	r25, 0x03	; 3
    157c:	28 f4       	brcc	.+10     	; 0x1588 <vfprintf+0x10a>
    157e:	0c 5f       	subi	r16, 0xFC	; 252
    1580:	1f 4f       	sbci	r17, 0xFF	; 255
    1582:	9f e3       	ldi	r25, 0x3F	; 63
    1584:	99 83       	std	Y+1, r25	; 0x01
    1586:	0d c0       	rjmp	.+26     	; 0x15a2 <vfprintf+0x124>
    1588:	83 36       	cpi	r24, 0x63	; 99
    158a:	31 f0       	breq	.+12     	; 0x1598 <vfprintf+0x11a>
    158c:	83 37       	cpi	r24, 0x73	; 115
    158e:	71 f0       	breq	.+28     	; 0x15ac <vfprintf+0x12e>
    1590:	83 35       	cpi	r24, 0x53	; 83
    1592:	09 f0       	breq	.+2      	; 0x1596 <vfprintf+0x118>
    1594:	59 c0       	rjmp	.+178    	; 0x1648 <vfprintf+0x1ca>
    1596:	21 c0       	rjmp	.+66     	; 0x15da <vfprintf+0x15c>
    1598:	f8 01       	movw	r30, r16
    159a:	80 81       	ld	r24, Z
    159c:	89 83       	std	Y+1, r24	; 0x01
    159e:	0e 5f       	subi	r16, 0xFE	; 254
    15a0:	1f 4f       	sbci	r17, 0xFF	; 255
    15a2:	88 24       	eor	r8, r8
    15a4:	83 94       	inc	r8
    15a6:	91 2c       	mov	r9, r1
    15a8:	53 01       	movw	r10, r6
    15aa:	13 c0       	rjmp	.+38     	; 0x15d2 <vfprintf+0x154>
    15ac:	28 01       	movw	r4, r16
    15ae:	f2 e0       	ldi	r31, 0x02	; 2
    15b0:	4f 0e       	add	r4, r31
    15b2:	51 1c       	adc	r5, r1
    15b4:	f8 01       	movw	r30, r16
    15b6:	a0 80       	ld	r10, Z
    15b8:	b1 80       	ldd	r11, Z+1	; 0x01
    15ba:	36 fe       	sbrs	r3, 6
    15bc:	03 c0       	rjmp	.+6      	; 0x15c4 <vfprintf+0x146>
    15be:	69 2d       	mov	r22, r9
    15c0:	70 e0       	ldi	r23, 0x00	; 0
    15c2:	02 c0       	rjmp	.+4      	; 0x15c8 <vfprintf+0x14a>
    15c4:	6f ef       	ldi	r22, 0xFF	; 255
    15c6:	7f ef       	ldi	r23, 0xFF	; 255
    15c8:	c5 01       	movw	r24, r10
    15ca:	0e 94 4e 0c 	call	0x189c	; 0x189c <strnlen>
    15ce:	4c 01       	movw	r8, r24
    15d0:	82 01       	movw	r16, r4
    15d2:	f3 2d       	mov	r31, r3
    15d4:	ff 77       	andi	r31, 0x7F	; 127
    15d6:	3f 2e       	mov	r3, r31
    15d8:	16 c0       	rjmp	.+44     	; 0x1606 <vfprintf+0x188>
    15da:	28 01       	movw	r4, r16
    15dc:	22 e0       	ldi	r18, 0x02	; 2
    15de:	42 0e       	add	r4, r18
    15e0:	51 1c       	adc	r5, r1
    15e2:	f8 01       	movw	r30, r16
    15e4:	a0 80       	ld	r10, Z
    15e6:	b1 80       	ldd	r11, Z+1	; 0x01
    15e8:	36 fe       	sbrs	r3, 6
    15ea:	03 c0       	rjmp	.+6      	; 0x15f2 <vfprintf+0x174>
    15ec:	69 2d       	mov	r22, r9
    15ee:	70 e0       	ldi	r23, 0x00	; 0
    15f0:	02 c0       	rjmp	.+4      	; 0x15f6 <vfprintf+0x178>
    15f2:	6f ef       	ldi	r22, 0xFF	; 255
    15f4:	7f ef       	ldi	r23, 0xFF	; 255
    15f6:	c5 01       	movw	r24, r10
    15f8:	0e 94 3c 0c 	call	0x1878	; 0x1878 <strnlen_P>
    15fc:	4c 01       	movw	r8, r24
    15fe:	f3 2d       	mov	r31, r3
    1600:	f0 68       	ori	r31, 0x80	; 128
    1602:	3f 2e       	mov	r3, r31
    1604:	82 01       	movw	r16, r4
    1606:	33 fc       	sbrc	r3, 3
    1608:	1b c0       	rjmp	.+54     	; 0x1640 <vfprintf+0x1c2>
    160a:	82 2d       	mov	r24, r2
    160c:	90 e0       	ldi	r25, 0x00	; 0
    160e:	88 16       	cp	r8, r24
    1610:	99 06       	cpc	r9, r25
    1612:	b0 f4       	brcc	.+44     	; 0x1640 <vfprintf+0x1c2>
    1614:	b6 01       	movw	r22, r12
    1616:	80 e2       	ldi	r24, 0x20	; 32
    1618:	90 e0       	ldi	r25, 0x00	; 0
    161a:	0e 94 59 0c 	call	0x18b2	; 0x18b2 <fputc>
    161e:	2a 94       	dec	r2
    1620:	f4 cf       	rjmp	.-24     	; 0x160a <vfprintf+0x18c>
    1622:	f5 01       	movw	r30, r10
    1624:	37 fc       	sbrc	r3, 7
    1626:	85 91       	lpm	r24, Z+
    1628:	37 fe       	sbrs	r3, 7
    162a:	81 91       	ld	r24, Z+
    162c:	5f 01       	movw	r10, r30
    162e:	b6 01       	movw	r22, r12
    1630:	90 e0       	ldi	r25, 0x00	; 0
    1632:	0e 94 59 0c 	call	0x18b2	; 0x18b2 <fputc>
    1636:	21 10       	cpse	r2, r1
    1638:	2a 94       	dec	r2
    163a:	21 e0       	ldi	r18, 0x01	; 1
    163c:	82 1a       	sub	r8, r18
    163e:	91 08       	sbc	r9, r1
    1640:	81 14       	cp	r8, r1
    1642:	91 04       	cpc	r9, r1
    1644:	71 f7       	brne	.-36     	; 0x1622 <vfprintf+0x1a4>
    1646:	e8 c0       	rjmp	.+464    	; 0x1818 <vfprintf+0x39a>
    1648:	84 36       	cpi	r24, 0x64	; 100
    164a:	11 f0       	breq	.+4      	; 0x1650 <vfprintf+0x1d2>
    164c:	89 36       	cpi	r24, 0x69	; 105
    164e:	41 f5       	brne	.+80     	; 0x16a0 <vfprintf+0x222>
    1650:	f8 01       	movw	r30, r16
    1652:	37 fe       	sbrs	r3, 7
    1654:	07 c0       	rjmp	.+14     	; 0x1664 <vfprintf+0x1e6>
    1656:	60 81       	ld	r22, Z
    1658:	71 81       	ldd	r23, Z+1	; 0x01
    165a:	82 81       	ldd	r24, Z+2	; 0x02
    165c:	93 81       	ldd	r25, Z+3	; 0x03
    165e:	0c 5f       	subi	r16, 0xFC	; 252
    1660:	1f 4f       	sbci	r17, 0xFF	; 255
    1662:	08 c0       	rjmp	.+16     	; 0x1674 <vfprintf+0x1f6>
    1664:	60 81       	ld	r22, Z
    1666:	71 81       	ldd	r23, Z+1	; 0x01
    1668:	07 2e       	mov	r0, r23
    166a:	00 0c       	add	r0, r0
    166c:	88 0b       	sbc	r24, r24
    166e:	99 0b       	sbc	r25, r25
    1670:	0e 5f       	subi	r16, 0xFE	; 254
    1672:	1f 4f       	sbci	r17, 0xFF	; 255
    1674:	f3 2d       	mov	r31, r3
    1676:	ff 76       	andi	r31, 0x6F	; 111
    1678:	3f 2e       	mov	r3, r31
    167a:	97 ff       	sbrs	r25, 7
    167c:	09 c0       	rjmp	.+18     	; 0x1690 <vfprintf+0x212>
    167e:	90 95       	com	r25
    1680:	80 95       	com	r24
    1682:	70 95       	com	r23
    1684:	61 95       	neg	r22
    1686:	7f 4f       	sbci	r23, 0xFF	; 255
    1688:	8f 4f       	sbci	r24, 0xFF	; 255
    168a:	9f 4f       	sbci	r25, 0xFF	; 255
    168c:	f0 68       	ori	r31, 0x80	; 128
    168e:	3f 2e       	mov	r3, r31
    1690:	2a e0       	ldi	r18, 0x0A	; 10
    1692:	30 e0       	ldi	r19, 0x00	; 0
    1694:	a3 01       	movw	r20, r6
    1696:	0e 94 95 0c 	call	0x192a	; 0x192a <__ultoa_invert>
    169a:	88 2e       	mov	r8, r24
    169c:	86 18       	sub	r8, r6
    169e:	45 c0       	rjmp	.+138    	; 0x172a <vfprintf+0x2ac>
    16a0:	85 37       	cpi	r24, 0x75	; 117
    16a2:	31 f4       	brne	.+12     	; 0x16b0 <vfprintf+0x232>
    16a4:	23 2d       	mov	r18, r3
    16a6:	2f 7e       	andi	r18, 0xEF	; 239
    16a8:	b2 2e       	mov	r11, r18
    16aa:	2a e0       	ldi	r18, 0x0A	; 10
    16ac:	30 e0       	ldi	r19, 0x00	; 0
    16ae:	25 c0       	rjmp	.+74     	; 0x16fa <vfprintf+0x27c>
    16b0:	93 2d       	mov	r25, r3
    16b2:	99 7f       	andi	r25, 0xF9	; 249
    16b4:	b9 2e       	mov	r11, r25
    16b6:	8f 36       	cpi	r24, 0x6F	; 111
    16b8:	c1 f0       	breq	.+48     	; 0x16ea <vfprintf+0x26c>
    16ba:	18 f4       	brcc	.+6      	; 0x16c2 <vfprintf+0x244>
    16bc:	88 35       	cpi	r24, 0x58	; 88
    16be:	79 f0       	breq	.+30     	; 0x16de <vfprintf+0x260>
    16c0:	b5 c0       	rjmp	.+362    	; 0x182c <vfprintf+0x3ae>
    16c2:	80 37       	cpi	r24, 0x70	; 112
    16c4:	19 f0       	breq	.+6      	; 0x16cc <vfprintf+0x24e>
    16c6:	88 37       	cpi	r24, 0x78	; 120
    16c8:	21 f0       	breq	.+8      	; 0x16d2 <vfprintf+0x254>
    16ca:	b0 c0       	rjmp	.+352    	; 0x182c <vfprintf+0x3ae>
    16cc:	e9 2f       	mov	r30, r25
    16ce:	e0 61       	ori	r30, 0x10	; 16
    16d0:	be 2e       	mov	r11, r30
    16d2:	b4 fe       	sbrs	r11, 4
    16d4:	0d c0       	rjmp	.+26     	; 0x16f0 <vfprintf+0x272>
    16d6:	fb 2d       	mov	r31, r11
    16d8:	f4 60       	ori	r31, 0x04	; 4
    16da:	bf 2e       	mov	r11, r31
    16dc:	09 c0       	rjmp	.+18     	; 0x16f0 <vfprintf+0x272>
    16de:	34 fe       	sbrs	r3, 4
    16e0:	0a c0       	rjmp	.+20     	; 0x16f6 <vfprintf+0x278>
    16e2:	29 2f       	mov	r18, r25
    16e4:	26 60       	ori	r18, 0x06	; 6
    16e6:	b2 2e       	mov	r11, r18
    16e8:	06 c0       	rjmp	.+12     	; 0x16f6 <vfprintf+0x278>
    16ea:	28 e0       	ldi	r18, 0x08	; 8
    16ec:	30 e0       	ldi	r19, 0x00	; 0
    16ee:	05 c0       	rjmp	.+10     	; 0x16fa <vfprintf+0x27c>
    16f0:	20 e1       	ldi	r18, 0x10	; 16
    16f2:	30 e0       	ldi	r19, 0x00	; 0
    16f4:	02 c0       	rjmp	.+4      	; 0x16fa <vfprintf+0x27c>
    16f6:	20 e1       	ldi	r18, 0x10	; 16
    16f8:	32 e0       	ldi	r19, 0x02	; 2
    16fa:	f8 01       	movw	r30, r16
    16fc:	b7 fe       	sbrs	r11, 7
    16fe:	07 c0       	rjmp	.+14     	; 0x170e <vfprintf+0x290>
    1700:	60 81       	ld	r22, Z
    1702:	71 81       	ldd	r23, Z+1	; 0x01
    1704:	82 81       	ldd	r24, Z+2	; 0x02
    1706:	93 81       	ldd	r25, Z+3	; 0x03
    1708:	0c 5f       	subi	r16, 0xFC	; 252
    170a:	1f 4f       	sbci	r17, 0xFF	; 255
    170c:	06 c0       	rjmp	.+12     	; 0x171a <vfprintf+0x29c>
    170e:	60 81       	ld	r22, Z
    1710:	71 81       	ldd	r23, Z+1	; 0x01
    1712:	80 e0       	ldi	r24, 0x00	; 0
    1714:	90 e0       	ldi	r25, 0x00	; 0
    1716:	0e 5f       	subi	r16, 0xFE	; 254
    1718:	1f 4f       	sbci	r17, 0xFF	; 255
    171a:	a3 01       	movw	r20, r6
    171c:	0e 94 95 0c 	call	0x192a	; 0x192a <__ultoa_invert>
    1720:	88 2e       	mov	r8, r24
    1722:	86 18       	sub	r8, r6
    1724:	fb 2d       	mov	r31, r11
    1726:	ff 77       	andi	r31, 0x7F	; 127
    1728:	3f 2e       	mov	r3, r31
    172a:	36 fe       	sbrs	r3, 6
    172c:	0d c0       	rjmp	.+26     	; 0x1748 <vfprintf+0x2ca>
    172e:	23 2d       	mov	r18, r3
    1730:	2e 7f       	andi	r18, 0xFE	; 254
    1732:	a2 2e       	mov	r10, r18
    1734:	89 14       	cp	r8, r9
    1736:	58 f4       	brcc	.+22     	; 0x174e <vfprintf+0x2d0>
    1738:	34 fe       	sbrs	r3, 4
    173a:	0b c0       	rjmp	.+22     	; 0x1752 <vfprintf+0x2d4>
    173c:	32 fc       	sbrc	r3, 2
    173e:	09 c0       	rjmp	.+18     	; 0x1752 <vfprintf+0x2d4>
    1740:	83 2d       	mov	r24, r3
    1742:	8e 7e       	andi	r24, 0xEE	; 238
    1744:	a8 2e       	mov	r10, r24
    1746:	05 c0       	rjmp	.+10     	; 0x1752 <vfprintf+0x2d4>
    1748:	b8 2c       	mov	r11, r8
    174a:	a3 2c       	mov	r10, r3
    174c:	03 c0       	rjmp	.+6      	; 0x1754 <vfprintf+0x2d6>
    174e:	b8 2c       	mov	r11, r8
    1750:	01 c0       	rjmp	.+2      	; 0x1754 <vfprintf+0x2d6>
    1752:	b9 2c       	mov	r11, r9
    1754:	a4 fe       	sbrs	r10, 4
    1756:	0f c0       	rjmp	.+30     	; 0x1776 <vfprintf+0x2f8>
    1758:	fe 01       	movw	r30, r28
    175a:	e8 0d       	add	r30, r8
    175c:	f1 1d       	adc	r31, r1
    175e:	80 81       	ld	r24, Z
    1760:	80 33       	cpi	r24, 0x30	; 48
    1762:	21 f4       	brne	.+8      	; 0x176c <vfprintf+0x2ee>
    1764:	9a 2d       	mov	r25, r10
    1766:	99 7e       	andi	r25, 0xE9	; 233
    1768:	a9 2e       	mov	r10, r25
    176a:	09 c0       	rjmp	.+18     	; 0x177e <vfprintf+0x300>
    176c:	a2 fe       	sbrs	r10, 2
    176e:	06 c0       	rjmp	.+12     	; 0x177c <vfprintf+0x2fe>
    1770:	b3 94       	inc	r11
    1772:	b3 94       	inc	r11
    1774:	04 c0       	rjmp	.+8      	; 0x177e <vfprintf+0x300>
    1776:	8a 2d       	mov	r24, r10
    1778:	86 78       	andi	r24, 0x86	; 134
    177a:	09 f0       	breq	.+2      	; 0x177e <vfprintf+0x300>
    177c:	b3 94       	inc	r11
    177e:	a3 fc       	sbrc	r10, 3
    1780:	11 c0       	rjmp	.+34     	; 0x17a4 <vfprintf+0x326>
    1782:	a0 fe       	sbrs	r10, 0
    1784:	06 c0       	rjmp	.+12     	; 0x1792 <vfprintf+0x314>
    1786:	b2 14       	cp	r11, r2
    1788:	88 f4       	brcc	.+34     	; 0x17ac <vfprintf+0x32e>
    178a:	28 0c       	add	r2, r8
    178c:	92 2c       	mov	r9, r2
    178e:	9b 18       	sub	r9, r11
    1790:	0e c0       	rjmp	.+28     	; 0x17ae <vfprintf+0x330>
    1792:	b2 14       	cp	r11, r2
    1794:	60 f4       	brcc	.+24     	; 0x17ae <vfprintf+0x330>
    1796:	b6 01       	movw	r22, r12
    1798:	80 e2       	ldi	r24, 0x20	; 32
    179a:	90 e0       	ldi	r25, 0x00	; 0
    179c:	0e 94 59 0c 	call	0x18b2	; 0x18b2 <fputc>
    17a0:	b3 94       	inc	r11
    17a2:	f7 cf       	rjmp	.-18     	; 0x1792 <vfprintf+0x314>
    17a4:	b2 14       	cp	r11, r2
    17a6:	18 f4       	brcc	.+6      	; 0x17ae <vfprintf+0x330>
    17a8:	2b 18       	sub	r2, r11
    17aa:	02 c0       	rjmp	.+4      	; 0x17b0 <vfprintf+0x332>
    17ac:	98 2c       	mov	r9, r8
    17ae:	21 2c       	mov	r2, r1
    17b0:	a4 fe       	sbrs	r10, 4
    17b2:	10 c0       	rjmp	.+32     	; 0x17d4 <vfprintf+0x356>
    17b4:	b6 01       	movw	r22, r12
    17b6:	80 e3       	ldi	r24, 0x30	; 48
    17b8:	90 e0       	ldi	r25, 0x00	; 0
    17ba:	0e 94 59 0c 	call	0x18b2	; 0x18b2 <fputc>
    17be:	a2 fe       	sbrs	r10, 2
    17c0:	17 c0       	rjmp	.+46     	; 0x17f0 <vfprintf+0x372>
    17c2:	a1 fc       	sbrc	r10, 1
    17c4:	03 c0       	rjmp	.+6      	; 0x17cc <vfprintf+0x34e>
    17c6:	88 e7       	ldi	r24, 0x78	; 120
    17c8:	90 e0       	ldi	r25, 0x00	; 0
    17ca:	02 c0       	rjmp	.+4      	; 0x17d0 <vfprintf+0x352>
    17cc:	88 e5       	ldi	r24, 0x58	; 88
    17ce:	90 e0       	ldi	r25, 0x00	; 0
    17d0:	b6 01       	movw	r22, r12
    17d2:	0c c0       	rjmp	.+24     	; 0x17ec <vfprintf+0x36e>
    17d4:	8a 2d       	mov	r24, r10
    17d6:	86 78       	andi	r24, 0x86	; 134
    17d8:	59 f0       	breq	.+22     	; 0x17f0 <vfprintf+0x372>
    17da:	a1 fe       	sbrs	r10, 1
    17dc:	02 c0       	rjmp	.+4      	; 0x17e2 <vfprintf+0x364>
    17de:	8b e2       	ldi	r24, 0x2B	; 43
    17e0:	01 c0       	rjmp	.+2      	; 0x17e4 <vfprintf+0x366>
    17e2:	80 e2       	ldi	r24, 0x20	; 32
    17e4:	a7 fc       	sbrc	r10, 7
    17e6:	8d e2       	ldi	r24, 0x2D	; 45
    17e8:	b6 01       	movw	r22, r12
    17ea:	90 e0       	ldi	r25, 0x00	; 0
    17ec:	0e 94 59 0c 	call	0x18b2	; 0x18b2 <fputc>
    17f0:	89 14       	cp	r8, r9
    17f2:	38 f4       	brcc	.+14     	; 0x1802 <vfprintf+0x384>
    17f4:	b6 01       	movw	r22, r12
    17f6:	80 e3       	ldi	r24, 0x30	; 48
    17f8:	90 e0       	ldi	r25, 0x00	; 0
    17fa:	0e 94 59 0c 	call	0x18b2	; 0x18b2 <fputc>
    17fe:	9a 94       	dec	r9
    1800:	f7 cf       	rjmp	.-18     	; 0x17f0 <vfprintf+0x372>
    1802:	8a 94       	dec	r8
    1804:	f3 01       	movw	r30, r6
    1806:	e8 0d       	add	r30, r8
    1808:	f1 1d       	adc	r31, r1
    180a:	80 81       	ld	r24, Z
    180c:	b6 01       	movw	r22, r12
    180e:	90 e0       	ldi	r25, 0x00	; 0
    1810:	0e 94 59 0c 	call	0x18b2	; 0x18b2 <fputc>
    1814:	81 10       	cpse	r8, r1
    1816:	f5 cf       	rjmp	.-22     	; 0x1802 <vfprintf+0x384>
    1818:	22 20       	and	r2, r2
    181a:	09 f4       	brne	.+2      	; 0x181e <vfprintf+0x3a0>
    181c:	42 ce       	rjmp	.-892    	; 0x14a2 <vfprintf+0x24>
    181e:	b6 01       	movw	r22, r12
    1820:	80 e2       	ldi	r24, 0x20	; 32
    1822:	90 e0       	ldi	r25, 0x00	; 0
    1824:	0e 94 59 0c 	call	0x18b2	; 0x18b2 <fputc>
    1828:	2a 94       	dec	r2
    182a:	f6 cf       	rjmp	.-20     	; 0x1818 <vfprintf+0x39a>
    182c:	f6 01       	movw	r30, r12
    182e:	86 81       	ldd	r24, Z+6	; 0x06
    1830:	97 81       	ldd	r25, Z+7	; 0x07
    1832:	02 c0       	rjmp	.+4      	; 0x1838 <vfprintf+0x3ba>
    1834:	8f ef       	ldi	r24, 0xFF	; 255
    1836:	9f ef       	ldi	r25, 0xFF	; 255
    1838:	2b 96       	adiw	r28, 0x0b	; 11
    183a:	e2 e1       	ldi	r30, 0x12	; 18
    183c:	0c 94 0f 0d 	jmp	0x1a1e	; 0x1a1e <__epilogue_restores__>

00001840 <calloc>:
    1840:	0f 93       	push	r16
    1842:	1f 93       	push	r17
    1844:	cf 93       	push	r28
    1846:	df 93       	push	r29
    1848:	86 9f       	mul	r24, r22
    184a:	80 01       	movw	r16, r0
    184c:	87 9f       	mul	r24, r23
    184e:	10 0d       	add	r17, r0
    1850:	96 9f       	mul	r25, r22
    1852:	10 0d       	add	r17, r0
    1854:	11 24       	eor	r1, r1
    1856:	c8 01       	movw	r24, r16
    1858:	0e 94 e3 07 	call	0xfc6	; 0xfc6 <malloc>
    185c:	ec 01       	movw	r28, r24
    185e:	00 97       	sbiw	r24, 0x00	; 0
    1860:	29 f0       	breq	.+10     	; 0x186c <calloc+0x2c>
    1862:	a8 01       	movw	r20, r16
    1864:	60 e0       	ldi	r22, 0x00	; 0
    1866:	70 e0       	ldi	r23, 0x00	; 0
    1868:	0e 94 47 0c 	call	0x188e	; 0x188e <memset>
    186c:	ce 01       	movw	r24, r28
    186e:	df 91       	pop	r29
    1870:	cf 91       	pop	r28
    1872:	1f 91       	pop	r17
    1874:	0f 91       	pop	r16
    1876:	08 95       	ret

00001878 <strnlen_P>:
    1878:	fc 01       	movw	r30, r24
    187a:	05 90       	lpm	r0, Z+
    187c:	61 50       	subi	r22, 0x01	; 1
    187e:	70 40       	sbci	r23, 0x00	; 0
    1880:	01 10       	cpse	r0, r1
    1882:	d8 f7       	brcc	.-10     	; 0x187a <strnlen_P+0x2>
    1884:	80 95       	com	r24
    1886:	90 95       	com	r25
    1888:	8e 0f       	add	r24, r30
    188a:	9f 1f       	adc	r25, r31
    188c:	08 95       	ret

0000188e <memset>:
    188e:	dc 01       	movw	r26, r24
    1890:	01 c0       	rjmp	.+2      	; 0x1894 <memset+0x6>
    1892:	6d 93       	st	X+, r22
    1894:	41 50       	subi	r20, 0x01	; 1
    1896:	50 40       	sbci	r21, 0x00	; 0
    1898:	e0 f7       	brcc	.-8      	; 0x1892 <memset+0x4>
    189a:	08 95       	ret

0000189c <strnlen>:
    189c:	fc 01       	movw	r30, r24
    189e:	61 50       	subi	r22, 0x01	; 1
    18a0:	70 40       	sbci	r23, 0x00	; 0
    18a2:	01 90       	ld	r0, Z+
    18a4:	01 10       	cpse	r0, r1
    18a6:	d8 f7       	brcc	.-10     	; 0x189e <strnlen+0x2>
    18a8:	80 95       	com	r24
    18aa:	90 95       	com	r25
    18ac:	8e 0f       	add	r24, r30
    18ae:	9f 1f       	adc	r25, r31
    18b0:	08 95       	ret

000018b2 <fputc>:
    18b2:	0f 93       	push	r16
    18b4:	1f 93       	push	r17
    18b6:	cf 93       	push	r28
    18b8:	df 93       	push	r29
    18ba:	fb 01       	movw	r30, r22
    18bc:	23 81       	ldd	r18, Z+3	; 0x03
    18be:	21 fd       	sbrc	r18, 1
    18c0:	03 c0       	rjmp	.+6      	; 0x18c8 <fputc+0x16>
    18c2:	8f ef       	ldi	r24, 0xFF	; 255
    18c4:	9f ef       	ldi	r25, 0xFF	; 255
    18c6:	2c c0       	rjmp	.+88     	; 0x1920 <fputc+0x6e>
    18c8:	22 ff       	sbrs	r18, 2
    18ca:	16 c0       	rjmp	.+44     	; 0x18f8 <fputc+0x46>
    18cc:	46 81       	ldd	r20, Z+6	; 0x06
    18ce:	57 81       	ldd	r21, Z+7	; 0x07
    18d0:	24 81       	ldd	r18, Z+4	; 0x04
    18d2:	35 81       	ldd	r19, Z+5	; 0x05
    18d4:	42 17       	cp	r20, r18
    18d6:	53 07       	cpc	r21, r19
    18d8:	44 f4       	brge	.+16     	; 0x18ea <fputc+0x38>
    18da:	a0 81       	ld	r26, Z
    18dc:	b1 81       	ldd	r27, Z+1	; 0x01
    18de:	9d 01       	movw	r18, r26
    18e0:	2f 5f       	subi	r18, 0xFF	; 255
    18e2:	3f 4f       	sbci	r19, 0xFF	; 255
    18e4:	31 83       	std	Z+1, r19	; 0x01
    18e6:	20 83       	st	Z, r18
    18e8:	8c 93       	st	X, r24
    18ea:	26 81       	ldd	r18, Z+6	; 0x06
    18ec:	37 81       	ldd	r19, Z+7	; 0x07
    18ee:	2f 5f       	subi	r18, 0xFF	; 255
    18f0:	3f 4f       	sbci	r19, 0xFF	; 255
    18f2:	37 83       	std	Z+7, r19	; 0x07
    18f4:	26 83       	std	Z+6, r18	; 0x06
    18f6:	14 c0       	rjmp	.+40     	; 0x1920 <fputc+0x6e>
    18f8:	8b 01       	movw	r16, r22
    18fa:	ec 01       	movw	r28, r24
    18fc:	fb 01       	movw	r30, r22
    18fe:	00 84       	ldd	r0, Z+8	; 0x08
    1900:	f1 85       	ldd	r31, Z+9	; 0x09
    1902:	e0 2d       	mov	r30, r0
    1904:	09 95       	icall
    1906:	89 2b       	or	r24, r25
    1908:	e1 f6       	brne	.-72     	; 0x18c2 <fputc+0x10>
    190a:	d8 01       	movw	r26, r16
    190c:	16 96       	adiw	r26, 0x06	; 6
    190e:	8d 91       	ld	r24, X+
    1910:	9c 91       	ld	r25, X
    1912:	17 97       	sbiw	r26, 0x07	; 7
    1914:	01 96       	adiw	r24, 0x01	; 1
    1916:	17 96       	adiw	r26, 0x07	; 7
    1918:	9c 93       	st	X, r25
    191a:	8e 93       	st	-X, r24
    191c:	16 97       	sbiw	r26, 0x06	; 6
    191e:	ce 01       	movw	r24, r28
    1920:	df 91       	pop	r29
    1922:	cf 91       	pop	r28
    1924:	1f 91       	pop	r17
    1926:	0f 91       	pop	r16
    1928:	08 95       	ret

0000192a <__ultoa_invert>:
    192a:	fa 01       	movw	r30, r20
    192c:	aa 27       	eor	r26, r26
    192e:	28 30       	cpi	r18, 0x08	; 8
    1930:	51 f1       	breq	.+84     	; 0x1986 <__ultoa_invert+0x5c>
    1932:	20 31       	cpi	r18, 0x10	; 16
    1934:	81 f1       	breq	.+96     	; 0x1996 <__ultoa_invert+0x6c>
    1936:	e8 94       	clt
    1938:	6f 93       	push	r22
    193a:	6e 7f       	andi	r22, 0xFE	; 254
    193c:	6e 5f       	subi	r22, 0xFE	; 254
    193e:	7f 4f       	sbci	r23, 0xFF	; 255
    1940:	8f 4f       	sbci	r24, 0xFF	; 255
    1942:	9f 4f       	sbci	r25, 0xFF	; 255
    1944:	af 4f       	sbci	r26, 0xFF	; 255
    1946:	b1 e0       	ldi	r27, 0x01	; 1
    1948:	3e d0       	rcall	.+124    	; 0x19c6 <__ultoa_invert+0x9c>
    194a:	b4 e0       	ldi	r27, 0x04	; 4
    194c:	3c d0       	rcall	.+120    	; 0x19c6 <__ultoa_invert+0x9c>
    194e:	67 0f       	add	r22, r23
    1950:	78 1f       	adc	r23, r24
    1952:	89 1f       	adc	r24, r25
    1954:	9a 1f       	adc	r25, r26
    1956:	a1 1d       	adc	r26, r1
    1958:	68 0f       	add	r22, r24
    195a:	79 1f       	adc	r23, r25
    195c:	8a 1f       	adc	r24, r26
    195e:	91 1d       	adc	r25, r1
    1960:	a1 1d       	adc	r26, r1
    1962:	6a 0f       	add	r22, r26
    1964:	71 1d       	adc	r23, r1
    1966:	81 1d       	adc	r24, r1
    1968:	91 1d       	adc	r25, r1
    196a:	a1 1d       	adc	r26, r1
    196c:	20 d0       	rcall	.+64     	; 0x19ae <__ultoa_invert+0x84>
    196e:	09 f4       	brne	.+2      	; 0x1972 <__ultoa_invert+0x48>
    1970:	68 94       	set
    1972:	3f 91       	pop	r19
    1974:	2a e0       	ldi	r18, 0x0A	; 10
    1976:	26 9f       	mul	r18, r22
    1978:	11 24       	eor	r1, r1
    197a:	30 19       	sub	r19, r0
    197c:	30 5d       	subi	r19, 0xD0	; 208
    197e:	31 93       	st	Z+, r19
    1980:	de f6       	brtc	.-74     	; 0x1938 <__ultoa_invert+0xe>
    1982:	cf 01       	movw	r24, r30
    1984:	08 95       	ret
    1986:	46 2f       	mov	r20, r22
    1988:	47 70       	andi	r20, 0x07	; 7
    198a:	40 5d       	subi	r20, 0xD0	; 208
    198c:	41 93       	st	Z+, r20
    198e:	b3 e0       	ldi	r27, 0x03	; 3
    1990:	0f d0       	rcall	.+30     	; 0x19b0 <__ultoa_invert+0x86>
    1992:	c9 f7       	brne	.-14     	; 0x1986 <__ultoa_invert+0x5c>
    1994:	f6 cf       	rjmp	.-20     	; 0x1982 <__ultoa_invert+0x58>
    1996:	46 2f       	mov	r20, r22
    1998:	4f 70       	andi	r20, 0x0F	; 15
    199a:	40 5d       	subi	r20, 0xD0	; 208
    199c:	4a 33       	cpi	r20, 0x3A	; 58
    199e:	18 f0       	brcs	.+6      	; 0x19a6 <__ultoa_invert+0x7c>
    19a0:	49 5d       	subi	r20, 0xD9	; 217
    19a2:	31 fd       	sbrc	r19, 1
    19a4:	40 52       	subi	r20, 0x20	; 32
    19a6:	41 93       	st	Z+, r20
    19a8:	02 d0       	rcall	.+4      	; 0x19ae <__ultoa_invert+0x84>
    19aa:	a9 f7       	brne	.-22     	; 0x1996 <__ultoa_invert+0x6c>
    19ac:	ea cf       	rjmp	.-44     	; 0x1982 <__ultoa_invert+0x58>
    19ae:	b4 e0       	ldi	r27, 0x04	; 4
    19b0:	a6 95       	lsr	r26
    19b2:	97 95       	ror	r25
    19b4:	87 95       	ror	r24
    19b6:	77 95       	ror	r23
    19b8:	67 95       	ror	r22
    19ba:	ba 95       	dec	r27
    19bc:	c9 f7       	brne	.-14     	; 0x19b0 <__ultoa_invert+0x86>
    19be:	00 97       	sbiw	r24, 0x00	; 0
    19c0:	61 05       	cpc	r22, r1
    19c2:	71 05       	cpc	r23, r1
    19c4:	08 95       	ret
    19c6:	9b 01       	movw	r18, r22
    19c8:	ac 01       	movw	r20, r24
    19ca:	0a 2e       	mov	r0, r26
    19cc:	06 94       	lsr	r0
    19ce:	57 95       	ror	r21
    19d0:	47 95       	ror	r20
    19d2:	37 95       	ror	r19
    19d4:	27 95       	ror	r18
    19d6:	ba 95       	dec	r27
    19d8:	c9 f7       	brne	.-14     	; 0x19cc <__ultoa_invert+0xa2>
    19da:	62 0f       	add	r22, r18
    19dc:	73 1f       	adc	r23, r19
    19de:	84 1f       	adc	r24, r20
    19e0:	95 1f       	adc	r25, r21
    19e2:	a0 1d       	adc	r26, r0
    19e4:	08 95       	ret

000019e6 <__prologue_saves__>:
    19e6:	2f 92       	push	r2
    19e8:	3f 92       	push	r3
    19ea:	4f 92       	push	r4
    19ec:	5f 92       	push	r5
    19ee:	6f 92       	push	r6
    19f0:	7f 92       	push	r7
    19f2:	8f 92       	push	r8
    19f4:	9f 92       	push	r9
    19f6:	af 92       	push	r10
    19f8:	bf 92       	push	r11
    19fa:	cf 92       	push	r12
    19fc:	df 92       	push	r13
    19fe:	ef 92       	push	r14
    1a00:	ff 92       	push	r15
    1a02:	0f 93       	push	r16
    1a04:	1f 93       	push	r17
    1a06:	cf 93       	push	r28
    1a08:	df 93       	push	r29
    1a0a:	cd b7       	in	r28, 0x3d	; 61
    1a0c:	de b7       	in	r29, 0x3e	; 62
    1a0e:	ca 1b       	sub	r28, r26
    1a10:	db 0b       	sbc	r29, r27
    1a12:	0f b6       	in	r0, 0x3f	; 63
    1a14:	f8 94       	cli
    1a16:	de bf       	out	0x3e, r29	; 62
    1a18:	0f be       	out	0x3f, r0	; 63
    1a1a:	cd bf       	out	0x3d, r28	; 61
    1a1c:	09 94       	ijmp

00001a1e <__epilogue_restores__>:
    1a1e:	2a 88       	ldd	r2, Y+18	; 0x12
    1a20:	39 88       	ldd	r3, Y+17	; 0x11
    1a22:	48 88       	ldd	r4, Y+16	; 0x10
    1a24:	5f 84       	ldd	r5, Y+15	; 0x0f
    1a26:	6e 84       	ldd	r6, Y+14	; 0x0e
    1a28:	7d 84       	ldd	r7, Y+13	; 0x0d
    1a2a:	8c 84       	ldd	r8, Y+12	; 0x0c
    1a2c:	9b 84       	ldd	r9, Y+11	; 0x0b
    1a2e:	aa 84       	ldd	r10, Y+10	; 0x0a
    1a30:	b9 84       	ldd	r11, Y+9	; 0x09
    1a32:	c8 84       	ldd	r12, Y+8	; 0x08
    1a34:	df 80       	ldd	r13, Y+7	; 0x07
    1a36:	ee 80       	ldd	r14, Y+6	; 0x06
    1a38:	fd 80       	ldd	r15, Y+5	; 0x05
    1a3a:	0c 81       	ldd	r16, Y+4	; 0x04
    1a3c:	1b 81       	ldd	r17, Y+3	; 0x03
    1a3e:	aa 81       	ldd	r26, Y+2	; 0x02
    1a40:	b9 81       	ldd	r27, Y+1	; 0x01
    1a42:	ce 0f       	add	r28, r30
    1a44:	d1 1d       	adc	r29, r1
    1a46:	0f b6       	in	r0, 0x3f	; 63
    1a48:	f8 94       	cli
    1a4a:	de bf       	out	0x3e, r29	; 62
    1a4c:	0f be       	out	0x3f, r0	; 63
    1a4e:	cd bf       	out	0x3d, r28	; 61
    1a50:	ed 01       	movw	r28, r26
    1a52:	08 95       	ret

00001a54 <_exit>:
    1a54:	f8 94       	cli

00001a56 <__stop_program>:
    1a56:	ff cf       	rjmp	.-2      	; 0x1a56 <__stop_program>
